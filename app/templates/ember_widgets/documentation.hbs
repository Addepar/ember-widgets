{{!-- To add shadow main-content-container-shadow --}}
<div class="col-md-10 col-md-offset-2 left-border main-content-container">
  <h1>API</h1>
  <h2>Ember.Widgets.SelectComponent Options</h2>
  <table class="table ember-widgets-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>itemViewClass</td>
      <td>Ember.Widgets.SelectOptionView</td>
      <td><p>The view to be displayed in the rows of the select.</p></td>
    </tr>
    <tr>
      <td>prompt</td>
      <td>Select a Value</td>
      <td><p>The prompt to be displayed by default in the select, when
        nothing else is selected.</p></td>
    </tr>
    <tr>
      <td>placeholder</td>
      <td>undefined</td>
      <td><p>The placeholder text to be displayed in the search box when you
        click on the select.</p></td>
    </tr>
    <tr>
      <td>highlightedIndex</td>
      <td>-1</td>
      <td><p>The index of the select item that is highlighted.</p></td>
    </tr>
    <tr>
      <td>tabindex</td>
      <td>-1</td>
      <td><p>The tabindex of the component.</p></td>
    </tr>
    <tr>
      <td>showDropdown</td>
      <td>no</td>
      <td><p>If yes then shows a dropdown.</p></td>
    </tr>
    <tr>
      <td>dropdownHeight</td>
      <td>300</td>
      <td><p>The height of the dropdown.</p></td>
    </tr>
    <tr>
      <td>rowHeight</td>
      <td>26</td>
      <td><p>Row height in pixels for the lazy list. Important: rowHeight must be synched with the CSS</p></td>
    </tr>
    <tr>
      <td>sortLabels</td>
      <td>yes</td>
      <td><p>Option to indicate whether we should sort the labels</p></td>
    </tr>
    <tr>
      <td>isSelect</td>
      <td>no</td>
      <td><p>If isSelect is true, we will not show the search box</p></td>
    </tr>
    <tr>
      <td>isButton</td>
      <td>yes</td>
      <td><p>If is button is true, the select will look like a button</p></td>
    </tr>
    <tr>
      <td>dropdownToggleIcon</td>
      <td>icon-sort</td>
      <td><p>Font-awesome dependency - Change the icon when necessary</p></td>
    </tr>
    <tr>
      <td>content</td>
      <td>[]</td>
      <td><p>The list of options.</p></td>
    </tr>
    <tr>
      <td>selection</td>
      <td>null</td>
      <td><p>The option which is currently selected.</p></td>
    </tr>
    <tr>
      <td>optionLabelPath</td>
      <td>&#39;&#39;</td>
      <td><p>The path of the label, for options.</p></td>
    </tr>
    <tr>
      <td>optionValuePath</td>
      <td>&#39;&#39;</td>
      <td><p>The path of the value, for options.</p></td>
    </tr>
    <tr>
      <td>optionGroupPath</td>
      <td>&#39;&#39;</td>
      <td><p>The path of the group, for options.</p></td>
    </tr>
    <tr>
      <td>optionDefaultPath</td>
      <td>&#39;&#39;</td>
      <td><p>The path of the default option.</p></td>
    </tr>
  </table>

  <hr>
  <h2>Ember.Widgets.MultiSelectComponent Options</h2>
  <table class="table ember-widgets-options">
    <tr>
      <td>placeholder</td>
      <td>undefined</td>
      <td><p>The placeholder text to be displayed in multi-select search box
        before anything has been selected.</p></td>
    </tr>
    <tr>
      <td>persistentPlaceholder</td>
      <td>undefined</td>
      <td><p>The placeholder text to be displayed in multi-select search box,
        even if one or more options are already selected.</p></td>
    </tr>
  </table>

  <hr>
  <h2>Ember.Widgets.PopoverComponent Options</h2>
  <table class="table ember-widgets-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>targetElement</td>
      <td>null</td>
      <td><p>The element this popover will be attached to. If null, the popover will be positioned absolutely based on top and left.</p></td>
    </tr>
    <tr>
      <td>placement</td>
      <td>top</td>
      <td><p>The direction the popover will pop up. Other options are
        bottom, top-right, top-left, bottom-right, bottom-left, left,
        and right</p></td>
    </tr>
    <tr>
      <td>title</td>
      <td>''</td>
      <td><p>The title to be displayed on the popover.</p></td>
    </tr>
    <tr>
      <td>left</td>
      <td>0</td>
      <td><p>The left offset of the popover, in pixels.</p></td>
    </tr>
    <tr>
      <td>top</td>
      <td>0</td>
      <td><p>The top offset of the popover, in pixels.</p></td>
    </tr>
    <tr>
      <td>fade</td>
      <td>yes</td>
      <td><p>If this is yes then the modal fades in/out.</p></td>
    </tr>
  </table>

  <hr>
  <h2>Ember.Widgets.ModalComponent Options</h2>
  <table class="table ember-widgets-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>backdrop</td>
      <td>yes</td>
      <td><p>If this is yes then the modal will be displayed with a
        semi-opaque backdrop.</p></td>
    </tr>
    <tr>
      <td>fade</td>
      <td>yes</td>
      <td><p>If this is yes then the modal fades in/out.</p></td>
    </tr>
    <tr>
      <td>escToCancel</td>
      <td>yes</td>
      <td><p>If this is yes then pressing ESC cancels the modal.</p></td>
    </tr>
    <tr>
      <td>headerText</td>
      <td>"Modal Header"</td>
      <td><p>The text that is displayed in the header of the modal.</p></td>
    </tr>
    <tr>
      <td>confirmText</td>
      <td>"Confirm"</td>
      <td><p>The text that is displayed in the confirmation button of
        the modal.</p></td>
    </tr>
    <tr>
      <td>cancelText</td>
      <td>"Cancel"</td>
      <td><p>The text that is displayed in the cancel button of the
        modal.</p></td>
    </tr>
    <tr>
      <td>bodyElementSelector</td>
      <td>'.modal-backdrop'</td>
      <td><p></p></td>
    </tr>
    <tr>
      <td>size</td>
      <td>'normal'</td>
      <td><p>The size of the bootstrap modal.  Other options are 'small'
        and 'large'.</p></td>
    </tr>
  </table>

  <hr>
  <h2>Ember.Widgets.CarouselComponent Options</h2>
  <table class="table ember-widgets-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>activeIndex</td>
      <td>0</td>
      <td><p>The index of the carousel item which is currently being
        shown.</p></td>
    </tr>
  </table>


  layoutName: 'carousel'
  classNames: ['carousel', 'slide']
  classNameBindings: ['sliding']

  <hr>
  <h2>Ember.Widgets.AccordionComponent Options</h2>
  <table class="table ember-widgets-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>activeIndex</td>
      <td>0</td>
      <td><p>The index of the accordian item which is currently being
        shown.</p></td>
    </tr>
  </table>

  <hr>
  <h2>Ember.Widgets.RadioButtonGroupComponent Options</h2>
  <table class="table ember-widgets-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>selectedValue</td>
      <td>null</td>
      <td><p>The value of the currently selected button. To preselect a button
        set selectedValue to the value of that button in your template. As a use
        case example, bind selectedValue to a boolean variable and have two radio
        buttons with values true and false. The bound boolean variable can now switch
        values between true and false based on which radio button is chosen.</p></td>
    </tr>
    <tr>
      <td>disabled</td>
      <td>false</td>
      <td><p>Whether or not the entire radio button group is disabled.</p></td>
    </tr>
  </table>

  <hr>
  <h2>Ember.Widgets.RadioButtonComponent Options</h2>
  <table class="table ember-widgets-options">
    <tr>
      <th style="width: 200px;">Option</th>
      <th style="width: 150px;">Default</th>
      <th>Description</th>
    </tr>
      <td>value</td>
      <td>null</td>
      <td><p>The value that the button corresponds to.</p></td>
    </tr>
    <tr>
      <td>disabled</td>
      <td>false</td>
      <td><p>If the entire group is not disabled, whether or not this particular
        radio button is disabled.</p></td>
    </tr>
  </table>
</div>
