eval("(function() {\n\n// Last commit: a56fcf9 (2014-06-12 18:59:24 -0400)\n\n\n// ==========================================================================\n// Project:   Ember ListView\n// Copyright: Â©2012-2013 Erik Bryn, Yapp Inc., and contributors.\n// License:   Licensed under MIT license\n// ==========================================================================\n\n\n(function() {\nvar get = Ember.get, set = Ember.set;\n\nfunction samePosition(a, b) {\n  return a && b && a.x === b.x && a.y === b.y;\n}\n\nfunction positionElement() {\n  var element, position, _position;\n\n  Ember.instrument('view.updateContext.positionElement', this, function() {\n    element = get(this, 'element');\n    position = this.position;\n    _position = this._position;\n\n    if (!position || !element) { return; }\n\n    // TODO: avoid needing this by avoiding unnecessary\n    // calls to this method in the first place\n    if (samePosition(position, _position)) { return; }\n    Ember.run.schedule('render', this, this._parentView.applyTransform, element, position.x, position.y);\n    this._position = position;\n  }, this);\n}\n\nEmber.ListItemViewMixin = Ember.Mixin.create({\n  init: function(){\n    this._super();\n    this.one('didInsertElement', positionElement);\n  },\n  classNames: ['ember-list-item-view'],\n  _position: null,\n  updatePosition: function(position) {\n    this.position = position;\n    this._positionElement();\n  },\n  _positionElement: positionElement\n});\n\n})();\n\n\n\n(function() {\nvar get = Ember.get, set = Ember.set;\n\nvar backportedInnerString = function(buffer) {\n  var content = [], childBuffers = buffer.childBuffers;\n\n  Ember.ArrayPolyfills.forEach.call(childBuffers, function(buffer) {\n    var stringy = typeof buffer === 'string';\n    if (stringy) {\n      content.push(buffer);\n    } else {\n      buffer.array(content);\n    }\n  });\n\n  return content.join('');\n};\n\nfunction willInsertElementIfNeeded(view) {\n  if (view.willInsertElement) {\n    view.willInsertElement();\n  }\n}\n\nfunction didInsertElementIfNeeded(view) {\n  if (view.didInsertElement) {\n    view.didInsertElement();\n  }\n}\n\nfunction rerender() {\n  var element, buffer, context, hasChildViews;\n  element = get(this, 'element');\n\n  if (!element) { return; }\n\n  context = get(this, 'context');\n\n  // releases action helpers in contents\n  // this means though that the ListItemView itself can't use classBindings or attributeBindings\n  // need support for rerender contents in ember\n  this.triggerRecursively('willClearRender');\n\n  if (this.lengthAfterRender > this.lengthBeforeRender) {\n    this.clearRenderedChildren();\n    this._childViews.length = this.lengthBeforeRender; // triage bug in ember\n  }\n\n  if (context) {\n    buffer = Ember.RenderBuffer();\n    buffer = this.renderToBuffer(buffer);\n\n    // check again for childViews, since rendering may have added some\n    hasChildViews = this._childViews.length > 0;\n\n    if (hasChildViews) {\n      this.invokeRecursively(willInsertElementIfNeeded, false);\n    }\n\n    element.innerHTML = buffer.innerString ? buffer.innerString() : backportedInnerString(buffer);\n\n    set(this, 'element', element);\n\n    this.transitionTo('inDOM');\n\n    if (hasChildViews) {\n      this.invokeRecursively(didInsertElementIfNeeded, false);\n    }\n  } else {\n    element.innerHTML = ''; // when there is no context, this view should be completely empty\n  }\n}\n\n/**\n  The `Ember.ListItemView` view class renders a\n  [div](https://developer.mozilla.org/en/HTML/Element/div) HTML element\n  with `ember-list-item-view` class. It allows you to specify a custom item\n  handlebars template for `Ember.ListView`.\n\n  Example:\n\n  ```handlebars\n  <script type=\"text/x-handlebars\" data-template-name=\"row_item\">\n    {{name}}\n  </script>\n  ```\n\n  ```javascript\n  App.ListView = Ember.ListView.extend({\n    height: 500,\n    rowHeight: 20,\n    itemViewClass: Ember.ListItemView.extend({templateName: \"row_item\"})\n  });\n  ```\n\n  @extends Ember.View\n  @class ListItemView\n  @namespace Ember\n*/\nEmber.ListItemView = Ember.View.extend(Ember.ListItemViewMixin, {\n  updateContext: function(newContext){\n    var context = get(this, 'context');\n    Ember.instrument('view.updateContext.render', this, function() {\n      if (context !== newContext) {\n        set(this, 'context', newContext);\n        if (newContext && newContext.isController) {\n          set(this, 'controller', newContext);\n        }\n      }\n    }, this);\n  },\n  rerender: function () { Ember.run.scheduleOnce('render', this, rerender); },\n  _contextDidChange: Ember.observer(rerender, 'context', 'controller')\n});\n\n})();\n\n\n\n(function() {\nvar get = Ember.get, set = Ember.set;\n\nEmber.ReusableListItemView = Ember.View.extend(Ember.ListItemViewMixin, {\n  init: function(){\n    this._super();\n    var context = Ember.ObjectProxy.create();\n    this.set('context', context);\n    this._proxyContext = context;\n  },\n  isVisible: Ember.computed('context.content', function(){\n    return !!this.get('context.content');\n  }),\n  updateContext: function(newContext){\n    var context = get(this._proxyContext, 'content'), state;\n\n    // Support old and new Ember versions\n    state = this._state || this.state;\n\n    if (context !== newContext) {\n      if (state === 'inDOM') {\n        this.prepareForReuse(newContext);\n      }\n\n      set(this._proxyContext, 'content', newContext);\n\n      if (newContext && newContext.isController) {\n        set(this, 'controller', newContext);\n      }\n    }\n  },\n  prepareForReuse: Ember.K\n});\n\n})();\n\n\n\n(function() {\nvar el = document.createElement('div'), style = el.style;\n\nvar propPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\nfunction testProp(prop) {\n  if (prop in style) return prop;\n  var uppercaseProp = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i=0; i<propPrefixes.length; i++) {\n    var prefixedProp = propPrefixes[i] + uppercaseProp;\n    if (prefixedProp in style) {\n      return prefixedProp;\n    }\n  }\n  return null;\n}\n\nvar transformProp = testProp('transform');\nvar perspectiveProp = testProp('perspective');\n\nvar supports2D = transformProp !== null;\nvar supports3D = perspectiveProp !== null;\n\nEmber.ListViewHelper = {\n  transformProp: transformProp,\n  applyTransform: (function(){\n    if (supports2D) {\n      return function(element, x, y){\n        element.style[transformProp] = 'translate(' + x + 'px, ' + y + 'px)';\n      };\n    } else {\n      return function(element, x, y){\n        element.style.top  = y + 'px';\n        element.style.left = x + 'px';\n      };\n    }\n  })(),\n  apply3DTransform: (function(){\n    if (supports3D) {\n      return function(element, x, y){\n        element.style[transformProp] = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n      };\n    } else if (supports2D) {\n      return function(element, x, y){\n        element.style[transformProp] = 'translate(' + x + 'px, ' + y + 'px)';\n      };\n    } else {\n      return function(element, x, y){\n        element.style.top  = y + 'px';\n        element.style.left = x + 'px';\n      };\n    }\n  })()\n};\n\n})();\n\n\n\n(function() {\nvar get = Ember.get, set = Ember.set,\nmin = Math.min, max = Math.max, floor = Math.floor,\nceil = Math.ceil,\nforEach = Ember.ArrayPolyfills.forEach;\n\nfunction addContentArrayObserver() {\n  var content = get(this, 'content');\n  if (content) {\n    content.addArrayObserver(this);\n  }\n}\n\nfunction removeAndDestroy(object){\n  this.removeObject(object);\n  object.destroy();\n}\n\nfunction syncChildViews(){\n  Ember.run.once(this, '_syncChildViews');\n}\n\nfunction sortByContentIndex (viewOne, viewTwo){\n  return get(viewOne, 'contentIndex') - get(viewTwo, 'contentIndex');\n}\n\nfunction notifyMutationListeners() {\n  if (Ember.View.notifyMutationListeners) {\n    Ember.run.once(Ember.View, 'notifyMutationListeners');\n  }\n}\n\nfunction removeEmptyView() {\n  var emptyView = get(this, 'emptyView');\n  if (emptyView && emptyView instanceof Ember.View) {\n    emptyView.removeFromParent();\n  }\n}\n\nfunction addEmptyView() {\n  var emptyView = get(this, 'emptyView');\n\n  if (!emptyView) { return; }\n\n  if ('string' === typeof emptyView) {\n    emptyView = get(emptyView) || emptyView;\n  }\n\n  emptyView = this.createChildView(emptyView);\n  set(this, 'emptyView', emptyView);\n\n  if (Ember.CoreView.detect(emptyView)) {\n    this._createdEmptyView = emptyView;\n  }\n\n  this.unshiftObject(emptyView);\n}\n\nvar domManager = Ember.create(Ember.ContainerView.proto().domManager);\n\ndomManager.prepend = function(view, html) {\n  view.$('.ember-list-container').prepend(html);\n  notifyMutationListeners();\n};\n\n\n\nfunction enableProfilingOutput() {\n  function before(name, time, payload) {\n    console.time(name);\n  }\n\n  function after (name, time, payload) {\n    console.timeEnd(name);\n  }\n\n  if (Ember.ENABLE_PROFILING) {\n    Ember.subscribe('view._scrollContentTo', {\n      before: before,\n      after: after\n    });\n    Ember.subscribe('view.updateContext', {\n      before: before,\n      after: after\n    });\n  }\n}\n\n/**\n  @class Ember.ListViewMixin\n  @namespace Ember\n*/\nEmber.ListViewMixin = Ember.Mixin.create({\n  itemViewClass: Ember.ReusableListItemView,\n  emptyViewClass: Ember.View,\n  classNames: ['ember-list-view'],\n  attributeBindings: ['style'],\n  domManager: domManager,\n  scrollTop: 0,\n  bottomPadding: 0,\n  _lastEndingIndex: 0,\n  paddingCount: 1,\n\n  /**\n    @private\n\n    Setup a mixin.\n    - adding observer to content array\n    - creating child views based on height and length of the content array\n\n    @method init\n  */\n  init: function() {\n    this._super();\n    this.on('didInsertElement', this._syncListContainerWidth);\n    this.columnCountDidChange();\n    this._syncChildViews();\n    this._addContentArrayObserver();\n  },\n\n  _addContentArrayObserver: Ember.beforeObserver(function() {\n    addContentArrayObserver.call(this);\n  }, 'content'),\n\n  /**\n    Called on your view when it should push strings of HTML into a\n    `Ember.RenderBuffer`.\n\n    Adds a [div](https://developer.mozilla.org/en-US/docs/HTML/Element/div)\n    with a required `ember-list-container` class.\n\n    @method render\n    @param {Ember.RenderBuffer} buffer The render buffer\n  */\n  render: function(buffer) {\n    buffer.push('<div class=\"ember-list-container\">');\n    this._super(buffer);\n    buffer.push('</div>');\n  },\n\n  willInsertElement: function() {\n    if (!this.get(\"height\") || !this.get(\"rowHeight\")) {\n      throw new Error(\"A ListView must be created with a height and a rowHeight.\");\n    }\n    this._super();\n  },\n\n  /**\n    @private\n\n    Sets inline styles of the view:\n    - height\n    - width\n    - position\n    - overflow\n    - -webkit-overflow\n    - overflow-scrolling\n\n    Called while attributes binding.\n\n    @property {Ember.ComputedProperty} style\n  */\n  style: Ember.computed('height', 'width', function() {\n    var height, width, style, css;\n\n    height = get(this, 'height');\n    width = get(this, 'width');\n    css = get(this, 'css');\n\n    style = '';\n\n    if (height) { style += 'height:' + height + 'px;'; }\n    if (width)  { style += 'width:'  + width  + 'px;'; }\n\n    for ( var rule in css ){\n      if (css.hasOwnProperty(rule)) {\n        style += rule + ':' + css[rule] + ';';\n      }\n    }\n\n    return style;\n  }),\n\n  /**\n    @private\n\n    Performs visual scrolling. Is overridden in Ember.ListView.\n\n    @method scrollTo\n  */\n  scrollTo: function(y) {\n    throw new Error('must override to perform the visual scroll and effectively delegate to _scrollContentTo');\n  },\n\n  /**\n    @private\n\n    Internal method used to force scroll position\n\n    @method scrollTo\n  */\n  _scrollTo: Ember.K,\n\n  /**\n    @private\n    @method _scrollContentTo\n  */\n  _scrollContentTo: function(y) {\n    var startingIndex, endingIndex,\n        contentIndex, visibleEndingIndex, maxContentIndex,\n        contentIndexEnd, contentLength, scrollTop, content;\n\n    scrollTop = max(0, y);\n\n    if (this.scrollTop === scrollTop) {\n      return;\n    }\n\n    // allow a visual overscroll, but don't scroll the content. As we are doing needless\n    // recycyling, and adding unexpected nodes to the DOM.\n    var maxScrollTop = max(0, get(this, 'totalHeight') - get(this, 'height'));\n    scrollTop = min(scrollTop, maxScrollTop);\n\n    content = get(this, 'content');\n    contentLength = get(content, 'length');\n    startingIndex = this._startingIndex(contentLength);\n\n    Ember.instrument('view._scrollContentTo', {\n      scrollTop: scrollTop,\n      content: content,\n      startingIndex: startingIndex,\n      endingIndex: min(max(contentLength - 1, 0), startingIndex + this._numChildViewsForViewport())\n    }, function () {\n      this.scrollTop = scrollTop;\n\n      maxContentIndex = max(contentLength - 1, 0);\n\n      startingIndex = this._startingIndex();\n      visibleEndingIndex = startingIndex + this._numChildViewsForViewport();\n\n      endingIndex = min(maxContentIndex, visibleEndingIndex);\n\n      if (startingIndex === this._lastStartingIndex &&\n          endingIndex === this._lastEndingIndex) {\n\n        this.trigger('scrollYChanged', y);\n        return;\n      } else {\n\n        Ember.run(this, function(){\n          this._reuseChildren();\n\n          this._lastStartingIndex = startingIndex;\n          this._lastEndingIndex = endingIndex;\n          this.trigger('scrollYChanged', y);\n        });\n      }\n    }, this);\n\n  },\n\n  /**\n    @private\n\n    Computes the height for a `Ember.ListView` scrollable container div.\n    You must specify `rowHeight` parameter for the height to be computed properly.\n\n    @property {Ember.ComputedProperty} totalHeight\n  */\n  totalHeight: Ember.computed('content.length', 'rowHeight', 'columnCount', 'bottomPadding', function() {\n    var contentLength, rowHeight, columnCount, bottomPadding;\n\n    contentLength = get(this, 'content.length');\n    rowHeight = get(this, 'rowHeight');\n    columnCount = get(this, 'columnCount');\n    bottomPadding = get(this, 'bottomPadding');\n\n    return ((ceil(contentLength / columnCount)) * rowHeight) + bottomPadding;\n  }),\n\n  /**\n    @private\n    @method _prepareChildForReuse\n  */\n  _prepareChildForReuse: function(childView) {\n    childView.prepareForReuse();\n  },\n\n  /**\n    @private\n    @method _reuseChildForContentIndex\n  */\n  _reuseChildForContentIndex: function(childView, contentIndex) {\n    var content, context, newContext, childsCurrentContentIndex, position, enableProfiling;\n\n    content = get(this, 'content');\n    enableProfiling = get(this, 'enableProfiling');\n    position = this.positionForIndex(contentIndex);\n    childView.updatePosition(position);\n\n    set(childView, 'contentIndex', contentIndex);\n\n    if (enableProfiling) {\n      Ember.instrument('view._reuseChildForContentIndex', position, function(){}, this);\n    }\n\n    newContext = content.objectAt(contentIndex);\n    childView.updateContext(newContext);\n  },\n\n  /**\n    @private\n    @method positionForIndex\n  */\n  positionForIndex: function(index){\n    var elementWidth, width, columnCount, rowHeight, y, x;\n\n    elementWidth = get(this, 'elementWidth') || 1;\n    width = get(this, 'width') || 1;\n    columnCount = get(this, 'columnCount');\n    rowHeight = get(this, 'rowHeight');\n\n    y = (rowHeight * floor(index/columnCount));\n    x = (index % columnCount) * elementWidth;\n\n    return {\n      y: y,\n      x: x\n    };\n  },\n\n  /**\n    @private\n    @method _childViewCount\n  */\n  _childViewCount: function() {\n    var contentLength, childViewCountForHeight;\n\n    contentLength = get(this, 'content.length');\n    childViewCountForHeight = this._numChildViewsForViewport();\n\n    return min(contentLength, childViewCountForHeight);\n  },\n\n  /**\n    @private\n\n    Returns a number of columns in the Ember.ListView (for grid layout).\n\n    If you want to have a multi column layout, you need to specify both\n    `width` and `elementWidth`.\n\n    If no `elementWidth` is specified, it returns `1`. Otherwise, it will\n    try to fit as many columns as possible for a given `width`.\n\n    @property {Ember.ComputedProperty} columnCount\n  */\n  columnCount: Ember.computed('width', 'elementWidth', function() {\n    var elementWidth, width, count;\n\n    elementWidth = get(this, 'elementWidth');\n    width = get(this, 'width');\n\n    if (elementWidth && width > elementWidth) {\n      count = floor(width / elementWidth);\n    } else {\n      count = 1;\n    }\n\n    return count;\n  }),\n\n  /**\n    @private\n\n    Fires every time column count is changed.\n\n    @event columnCountDidChange\n  */\n  columnCountDidChange: Ember.observer(function(){\n    var ratio, currentScrollTop, proposedScrollTop, maxScrollTop,\n        scrollTop, lastColumnCount, newColumnCount, element;\n\n    lastColumnCount = this._lastColumnCount;\n\n    currentScrollTop = this.scrollTop;\n    newColumnCount = get(this, 'columnCount');\n    maxScrollTop = get(this, 'maxScrollTop');\n    element = get(this, 'element');\n\n    this._lastColumnCount = newColumnCount;\n\n    if (lastColumnCount) {\n      ratio = (lastColumnCount / newColumnCount);\n      proposedScrollTop = currentScrollTop * ratio;\n      scrollTop = min(maxScrollTop, proposedScrollTop);\n\n      this._scrollTo(scrollTop);\n      this.scrollTop = scrollTop;\n    }\n\n    if (arguments.length > 0) {\n      // invoked by observer\n      Ember.run.schedule('afterRender', this, this._syncListContainerWidth);\n    }\n  }, 'columnCount'),\n\n  /**\n    @private\n\n    Computes max possible scrollTop value given the visible viewport\n    and scrollable container div height.\n\n    @property {Ember.ComputedProperty} maxScrollTop\n  */\n  maxScrollTop: Ember.computed('height', 'totalHeight', function(){\n    var totalHeight, viewportHeight;\n\n    totalHeight = get(this, 'totalHeight');\n    viewportHeight = get(this, 'height');\n\n    return max(0, totalHeight - viewportHeight);\n  }),\n\n  /**\n    @private\n\n    Determines whether the emptyView is the current childView.\n\n    @method _isChildEmptyView\n  */\n  _isChildEmptyView: function() {\n    var emptyView = get(this, 'emptyView');\n\n    return emptyView && emptyView instanceof Ember.View &&\n           this._childViews.length === 1 && this._childViews.indexOf(emptyView) === 0;\n  },\n\n  /**\n    @private\n\n    Computes the number of views that would fit in the viewport area.\n    You must specify `height` and `rowHeight` parameters for the number of\n    views to be computed properly.\n\n    @method _numChildViewsForViewport\n  */\n  _numChildViewsForViewport: function() {\n    var height, rowHeight, paddingCount, columnCount;\n\n    height = get(this, 'height');\n    rowHeight = get(this, 'rowHeight');\n    paddingCount = get(this, 'paddingCount');\n    columnCount = get(this, 'columnCount');\n\n    return (ceil(height / rowHeight) * columnCount) + (paddingCount * columnCount);\n  },\n\n  /**\n    @private\n\n    Computes the starting index of the item views array.\n    Takes `scrollTop` property of the element into account.\n\n    Is used in `_syncChildViews`.\n\n    @method _startingIndex\n  */\n  _startingIndex: function(_contentLength) {\n    var scrollTop, rowHeight, columnCount, calculatedStartingIndex,\n        contentLength, largestStartingIndex;\n\n    if (_contentLength === undefined) {\n      contentLength = get(this, 'content.length');\n    } else {\n      contentLength = _contentLength;\n    }\n\n    scrollTop = this.scrollTop;\n    rowHeight = get(this, 'rowHeight');\n    columnCount = get(this, 'columnCount');\n\n    calculatedStartingIndex = floor(scrollTop / rowHeight) * columnCount;\n\n    largestStartingIndex = max(contentLength - 1, 0);\n\n    return min(calculatedStartingIndex, largestStartingIndex);\n  },\n\n  /**\n    @private\n    @event contentWillChange\n  */\n  contentWillChange: Ember.beforeObserver(function() {\n    var content;\n\n    content = get(this, 'content');\n\n    if (content) {\n      content.removeArrayObserver(this);\n    }\n  }, 'content'),\n\n  /**),\n    @private\n    @event contentDidChange\n  */\n  contentDidChange: Ember.observer(function() {\n    addContentArrayObserver.call(this);\n    syncChildViews.call(this);\n  }, 'content'),\n\n  /**\n    @private\n    @property {Function} needsSyncChildViews\n  */\n  needsSyncChildViews: Ember.observer(syncChildViews, 'height', 'width', 'columnCount'),\n\n  /**\n    @private\n\n    Returns a new item view. Takes `contentIndex` to set the context\n    of the returned view properly.\n\n    @param {Number} contentIndex item index in the content array\n    @method _addItemView\n  */\n  _addItemView: function(contentIndex){\n    var itemViewClass, childView;\n\n    itemViewClass = get(this, 'itemViewClass');\n    childView = this.createChildView(itemViewClass);\n\n    this.pushObject(childView);\n   },\n\n  /**\n    @private\n\n    Intelligently manages the number of childviews.\n\n    @method _syncChildViews\n   **/\n  _syncChildViews: function(){\n    var childViews, childViewCount,\n        numberOfChildViews, numberOfChildViewsNeeded,\n        contentIndex, startingIndex, endingIndex,\n        contentLength, emptyView, count, delta;\n\n    if (get(this, 'isDestroyed') || get(this, 'isDestroying')) {\n      return;\n    }\n\n    contentLength = get(this, 'content.length');\n    emptyView = get(this, 'emptyView');\n\n    childViewCount = this._childViewCount();\n    childViews = this.positionOrderedChildViews();\n\n    if (this._isChildEmptyView()) {\n      removeEmptyView.call(this);\n    }\n\n    startingIndex = this._startingIndex();\n    endingIndex = startingIndex + childViewCount;\n\n    numberOfChildViewsNeeded = childViewCount;\n    numberOfChildViews = childViews.length;\n\n    delta = numberOfChildViewsNeeded - numberOfChildViews;\n\n    if (delta === 0) {\n      // no change\n    } else if (delta > 0) {\n      // more views are needed\n      contentIndex = this._lastEndingIndex;\n\n      for (count = 0; count < delta; count++, contentIndex++) {\n        this._addItemView(contentIndex);\n      }\n    } else {\n      // less views are needed\n      forEach.call(\n        childViews.splice(numberOfChildViewsNeeded, numberOfChildViews),\n        removeAndDestroy,\n        this\n      );\n    }\n\n    this._reuseChildren();\n\n    this._lastStartingIndex = startingIndex;\n    this._lastEndingIndex   = this._lastEndingIndex + delta;\n\n    if (contentLength === 0 || contentLength === undefined) {\n      addEmptyView.call(this);\n    }\n  },\n\n  /**\n    @private\n\n    Applies an inline width style to the list container.\n\n    @method _syncListContainerWidth\n   **/\n  _syncListContainerWidth: function(){\n    var elementWidth, columnCount, containerWidth, element;\n\n    elementWidth = get(this, 'elementWidth');\n    columnCount = get(this, 'columnCount');\n    containerWidth = elementWidth * columnCount;\n    element = this.$('.ember-list-container');\n\n    if (containerWidth && element) {\n      element.css('width', containerWidth);\n    }\n  },\n\n  /**\n    @private\n    @method _reuseChildren\n  */\n  _reuseChildren: function(){\n    var contentLength, childViews, childViewsLength,\n        startingIndex, endingIndex, childView, attrs,\n        contentIndex, visibleEndingIndex, maxContentIndex,\n        contentIndexEnd, scrollTop;\n\n    scrollTop = this.scrollTop;\n    contentLength = get(this, 'content.length');\n    maxContentIndex = max(contentLength - 1, 0);\n    childViews = this.getReusableChildViews();\n    childViewsLength =  childViews.length;\n\n    startingIndex = this._startingIndex();\n    visibleEndingIndex = startingIndex + this._numChildViewsForViewport();\n\n    endingIndex = min(maxContentIndex, visibleEndingIndex);\n\n    contentIndexEnd = min(visibleEndingIndex, startingIndex + childViewsLength);\n\n    for (contentIndex = startingIndex; contentIndex < contentIndexEnd; contentIndex++) {\n      childView = childViews[contentIndex % childViewsLength];\n      this._reuseChildForContentIndex(childView, contentIndex);\n    }\n  },\n\n  /**\n    @private\n    @method getReusableChildViews\n  */\n  getReusableChildViews: function() {\n    return this._childViews;\n  },\n\n  /**\n    @private\n    @method positionOrderedChildViews\n  */\n  positionOrderedChildViews: function() {\n    return this.getReusableChildViews().sort(sortByContentIndex);\n  },\n\n  arrayWillChange: Ember.K,\n\n  /**\n    @private\n    @event arrayDidChange\n  */\n  // TODO: refactor\n  arrayDidChange: function(content, start, removedCount, addedCount) {\n    var index, contentIndex, state;\n\n    removeEmptyView.call(this);\n\n    // Support old and new Ember versions\n    state = this._state || this.state;\n\n    if (state === 'inDOM') {\n      // ignore if all changes are out of the visible change\n      if( start >= this._lastStartingIndex || start < this._lastEndingIndex) {\n        index = 0;\n        // ignore all changes not in the visible range\n        // this can re-position many, rather then causing a cascade of re-renders\n        forEach.call(\n          this.positionOrderedChildViews(),\n          function(childView) {\n            contentIndex = this._lastStartingIndex + index;\n            this._reuseChildForContentIndex(childView, contentIndex);\n            index++;\n          },\n          this\n        );\n      }\n\n      syncChildViews.call(this);\n    }\n  },\n\n  destroy: function () {\n    if (!this._super()) { return; }\n\n    if (this._createdEmptyView) {\n      this._createdEmptyView.destroy();\n    }\n\n    return this;\n  }\n});\n\n})();\n\n\n\n(function() {\nvar get = Ember.get, set = Ember.set;\n\n/**\n  The `Ember.ListView` view class renders a\n  [div](https://developer.mozilla.org/en/HTML/Element/div) HTML element,\n  with `ember-list-view` class.\n\n  The context of each item element within the `Ember.ListView` are populated\n  from the objects in the `Element.ListView`'s `content` property.\n\n  ### `content` as an Array of Objects\n\n  The simplest version of an `Ember.ListView` takes an array of object as its\n  `content` property. The object will be used as the `context` each item element\n  inside the rendered `div`.\n\n  Example:\n\n  ```javascript\n  App.ContributorsRoute = Ember.Route.extend({\n    model: function() {\n      return [{ name: 'Stefan Penner' }, { name: 'Alex Navasardyan' }, { name: 'Ray Cohen'}];\n    }\n  });\n  ```\n\n  ```handlebars\n  {{#ember-list items=contributors height=500 rowHeight=50}}\n    {{name}}\n  {{/ember-list}}\n  ```\n\n  Would result in the following HTML:\n\n  ```html\n   <div id=\"ember181\" class=\"ember-view ember-list-view\" style=\"height:500px;width:500px;position:relative;overflow:scroll;-webkit-overflow-scrolling:touch;overflow-scrolling:touch;\">\n    <div class=\"ember-list-container\">\n      <div id=\"ember186\" class=\"ember-view ember-list-item-view\" style=\"-webkit-transform: translate3d(0px, 0px, 0);\">\n        <script id=\"metamorph-0-start\" type=\"text/x-placeholder\"></script>Stefan Penner<script id=\"metamorph-0-end\" type=\"text/x-placeholder\"></script>\n      </div>\n      <div id=\"ember187\" class=\"ember-view ember-list-item-view\" style=\"-webkit-transform: translate3d(0px, 50px, 0);\">\n        <script id=\"metamorph-1-start\" type=\"text/x-placeholder\"></script>Alex Navasardyan<script id=\"metamorph-1-end\" type=\"text/x-placeholder\"></script>\n      </div>\n      <div id=\"ember188\" class=\"ember-view ember-list-item-view\" style=\"-webkit-transform: translate3d(0px, 100px, 0);\">\n        <script id=\"metamorph-2-start\" type=\"text/x-placeholder\"></script>Rey Cohen<script id=\"metamorph-2-end\" type=\"text/x-placeholder\"></script>\n      </div>\n      <div id=\"ember189\" class=\"ember-view ember-list-scrolling-view\" style=\"height: 150px\"></div>\n    </div>\n  </div>\n  ```\n\n  By default `Ember.ListView` provides support for `height`,\n  `rowHeight`, `width`, `elementWidth`, `scrollTop` parameters.\n\n  Note, that `height` and `rowHeight` are required parameters.\n\n  ```handlebars\n  {{#ember-list items=this height=500 rowHeight=50}}\n    {{name}}\n  {{/ember-list}}\n  ```\n\n  If you would like to have multiple columns in your view layout, you can\n  set `width` and `elementWidth` parameters respectively.\n\n  ```handlebars\n  {{#ember-list items=this height=500 rowHeight=50 width=500 elementWidth=80}}\n    {{name}}\n  {{/ember-list}}\n  ```\n\n  ### extending `Ember.ListView`\n\n  Example:\n\n  ```handlebars\n  {{view App.ListView contentBinding=\"content\"}}\n\n  <script type=\"text/x-handlebars\" data-template-name=\"row_item\">\n    {{name}}\n  </script>\n  ```\n\n  ```javascript\n  App.ListView = Ember.ListView.extend({\n    height: 500,\n    width: 500,\n    elementWidth: 80,\n    rowHeight: 20,\n    itemViewClass: Ember.ListItemView.extend({templateName: \"row_item\"})\n  });\n  ```\n\n  @extends Ember.ContainerView\n  @class ListView\n  @namespace Ember\n*/\nEmber.ListView = Ember.ContainerView.extend(Ember.ListViewMixin, {\n  css: {\n    position: 'relative',\n    overflow: 'auto',\n    '-webkit-overflow-scrolling': 'touch',\n    'overflow-scrolling': 'touch'\n  },\n\n  applyTransform: Ember.ListViewHelper.applyTransform,\n\n  _scrollTo: function(scrollTop) {\n    var element = get(this, 'element');\n\n    if (element) { element.scrollTop = scrollTop; }\n  },\n\n  didInsertElement: function() {\n    var that = this,\n        element = get(this, 'element');\n\n    this._updateScrollableHeight();\n\n    this._scroll = function(e) { that.scroll(e); };\n\n    Ember.$(element).on('scroll', this._scroll);\n  },\n\n  willDestroyElement: function() {\n    var element;\n\n    element = get(this, 'element');\n\n    Ember.$(element).off('scroll', this._scroll);\n  },\n\n  scroll: function(e) {\n    this.scrollTo(e.target.scrollTop);\n  },\n\n  scrollTo: function(y){\n    var element = get(this, 'element');\n    this._scrollTo(y);\n    this._scrollContentTo(y);\n  },\n\n  totalHeightDidChange: Ember.observer(function () {\n    Ember.run.scheduleOnce('afterRender', this, this._updateScrollableHeight);\n  }, 'totalHeight'),\n\n  _updateScrollableHeight: function () {\n    var height, state;\n\n    // Support old and new Ember versions\n    state = this._state || this.state;\n\n    if (state === 'inDOM') {\n      // if the list is currently displaying the emptyView, remove the height\n      if (this._isChildEmptyView()) {\n          height = '';\n      } else {\n          height = get(this, 'totalHeight');\n      }\n\n      this.$('.ember-list-container').css({\n        height: height\n      });\n    }\n  }\n});\n\n})();\n\n\n\n(function() {\nvar fieldRegex = /input|textarea|select/i,\n  hasTouch = ('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch,\n  handleStart, handleMove, handleEnd, handleCancel,\n  startEvent, moveEvent, endEvent, cancelEvent;\nif (hasTouch) {\n  startEvent = 'touchstart';\n  handleStart = function (e) {\n    var touch = e.touches[0],\n      target = touch && touch.target;\n    // avoid e.preventDefault() on fields\n    if (target && fieldRegex.test(target.tagName)) {\n      return;\n    }\n    bindWindow(this.scrollerEventHandlers);\n    this.willBeginScroll(e.touches, e.timeStamp);\n    e.preventDefault();\n  };\n  moveEvent = 'touchmove';\n  handleMove = function (e) {\n    this.continueScroll(e.touches, e.timeStamp);\n  };\n  endEvent = 'touchend';\n  handleEnd = function (e) {\n    // if we didn't end up scrolling we need to\n    // synthesize click since we did e.preventDefault()\n    // on touchstart\n    if (!this._isScrolling) {\n      synthesizeClick(e);\n    }\n    unbindWindow(this.scrollerEventHandlers);\n    this.endScroll(e.timeStamp);\n  };\n  cancelEvent = 'touchcancel';\n  handleCancel = function (e) {\n    unbindWindow(this.scrollerEventHandlers);\n    this.endScroll(e.timeStamp);\n  };\n} else {\n  startEvent = 'mousedown';\n  handleStart = function (e) {\n    if (e.which !== 1) return;\n    var target = e.target;\n    // avoid e.preventDefault() on fields\n    if (target && fieldRegex.test(target.tagName)) {\n      return;\n    }\n    bindWindow(this.scrollerEventHandlers);\n    this.willBeginScroll([e], e.timeStamp);\n    e.preventDefault();\n  };\n  moveEvent = 'mousemove';\n  handleMove = function (e) {\n    this.continueScroll([e], e.timeStamp);\n  };\n  endEvent = 'mouseup';\n  handleEnd = function (e) {\n    unbindWindow(this.scrollerEventHandlers);\n    this.endScroll(e.timeStamp);\n  };\n  cancelEvent = 'mouseout';\n  handleCancel = function (e) {\n    if (e.relatedTarget) return;\n    unbindWindow(this.scrollerEventHandlers);\n    this.endScroll(e.timeStamp);\n  };\n}\n\nfunction handleWheel(e) {\n  this.mouseWheel(e);\n  e.preventDefault();\n}\n\nfunction bindElement(el, handlers) {\n  el.addEventListener(startEvent, handlers.start, false);\n  el.addEventListener('mousewheel', handlers.wheel, false);\n}\n\nfunction unbindElement(el, handlers) {\n  el.removeEventListener(startEvent, handlers.start, false);\n  el.removeEventListener('mousewheel', handlers.wheel, false);\n}\n\nfunction bindWindow(handlers) {\n  window.addEventListener(moveEvent, handlers.move, true);\n  window.addEventListener(endEvent, handlers.end, true);\n  window.addEventListener(cancelEvent, handlers.cancel, true);\n}\n\nfunction unbindWindow(handlers) {\n  window.removeEventListener(moveEvent, handlers.move, true);\n  window.removeEventListener(endEvent, handlers.end, true);\n  window.removeEventListener(cancelEvent, handlers.cancel, true);\n}\n\nEmber.VirtualListScrollerEvents = Ember.Mixin.create({\n  init: function() {\n    this.on('didInsertElement', this, 'bindScrollerEvents');\n    this.on('willDestroyElement', this, 'unbindScrollerEvents');\n    this.scrollerEventHandlers = {\n      start: bind(this, handleStart),\n      move: bind(this, handleMove),\n      end: bind(this, handleEnd),\n      cancel: bind(this, handleCancel),\n      wheel: bind(this, handleWheel)\n    };\n    return this._super();\n  },\n  scrollElement: Ember.computed.oneWay('element').readOnly(),\n  bindScrollerEvents: function() {\n    var el = this.get('scrollElement'),\n      handlers = this.scrollerEventHandlers;\n    bindElement(el, handlers);\n  },\n  unbindScrollerEvents: function() {\n    var el = this.get('scrollElement'),\n      handlers = this.scrollerEventHandlers;\n    unbindElement(el, handlers);\n    unbindWindow(handlers);\n  }\n});\n\nfunction bind(view, handler) {\n  return function (evt) {\n    handler.call(view, evt);\n  };\n}\n\nfunction synthesizeClick(e) {\n  var point = e.changedTouches[0],\n    target = point.target,\n    ev;\n  if (target && fieldRegex.test(target.tagName)) {\n    ev = document.createEvent('MouseEvents');\n    ev.initMouseEvent('click', true, true, e.view, 1, point.screenX, point.screenY, point.clientX, point.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);\n    return target.dispatchEvent(ev);\n  }\n}\n\n})();\n\n\n\n(function() {\n/*global Scroller*/\nvar max = Math.max, get = Ember.get, set = Ember.set;\n\nfunction updateScrollerDimensions(target) {\n  var width, height, totalHeight;\n\n  target = target || this;\n\n  width = get(target, 'width');\n  height = get(target, 'height');\n  totalHeight = get(target, 'totalHeight');\n\n  target.scroller.setDimensions(width, height, width, totalHeight);\n  target.trigger('scrollerDimensionsDidChange');\n}\n\n/**\n  VirtualListView\n\n  @class VirtualListView\n  @namespace Ember\n*/\nEmber.VirtualListView = Ember.ContainerView.extend(Ember.ListViewMixin, Ember.VirtualListScrollerEvents, {\n  _isScrolling: false,\n  _mouseWheel: null,\n  css: {\n    position: 'relative',\n    overflow: 'hidden'\n  },\n\n  init: function(){\n    this._super();\n    this.setupScroller();\n    this.setupPullToRefresh();\n  },\n  _scrollerTop: 0,\n  applyTransform: Ember.ListViewHelper.apply3DTransform,\n\n  setupScroller: function(){\n    var view, y;\n\n    view = this;\n\n    view.scroller = new Scroller(function(left, top, zoom) {\n      // Support old and new Ember versions\n      var state = view._state || view.state;\n\n      if (state !== 'inDOM') { return; }\n\n      if (view.listContainerElement) {\n        view._scrollerTop = top;\n        view._scrollContentTo(top);\n        view.applyTransform(view.listContainerElement, 0, -top);\n      }\n    }, {\n      scrollingX: false,\n      scrollingComplete: function(){\n        view.trigger('scrollingDidComplete');\n      }\n    });\n\n    view.trigger('didInitializeScroller');\n    updateScrollerDimensions(view);\n  },\n  setupPullToRefresh: function() {\n    if (!this.pullToRefreshViewClass) { return; }\n    this._insertPullToRefreshView();\n    this._activateScrollerPullToRefresh();\n  },\n  _insertPullToRefreshView: function(){\n    this.pullToRefreshView = this.createChildView(this.pullToRefreshViewClass);\n    this.insertAt(0, this.pullToRefreshView);\n    var view = this;\n    this.pullToRefreshView.on('didInsertElement', function(){\n      Ember.run.schedule('afterRender', this, function(){\n        view.applyTransform(this.get('element'), 0, -1 * view.pullToRefreshViewHeight);\n      });\n    });\n  },\n  _activateScrollerPullToRefresh: function(){\n    var view = this;\n    function activatePullToRefresh(){\n      view.pullToRefreshView.set('active', true);\n      view.trigger('activatePullToRefresh');\n    }\n    function deactivatePullToRefresh() {\n      view.pullToRefreshView.set('active', false);\n      view.trigger('deactivatePullToRefresh');\n    }\n    function startPullToRefresh() {\n      Ember.run(function(){\n        view.pullToRefreshView.set('refreshing', true);\n\n        function finishRefresh(){\n          if (view && !view.get('isDestroyed') && !view.get('isDestroying')) {\n            view.scroller.finishPullToRefresh();\n            view.pullToRefreshView.set('refreshing', false);\n          }\n        }\n        view.startRefresh(finishRefresh);\n      });\n    }\n    this.scroller.activatePullToRefresh(\n      this.pullToRefreshViewHeight,\n      activatePullToRefresh,\n      deactivatePullToRefresh,\n      startPullToRefresh\n    );\n  },\n\n  getReusableChildViews: function(){\n    var firstView = this._childViews[0];\n    if (firstView && firstView === this.pullToRefreshView) {\n      return this._childViews.slice(1);\n    } else {\n      return this._childViews;\n    }\n  },\n\n  scrollerDimensionsNeedToChange: Ember.observer(function() {\n    Ember.run.once(this, updateScrollerDimensions);\n  }, 'width', 'height', 'totalHeight'),\n\n  didInsertElement: function() {\n    this.listContainerElement = this.$('> .ember-list-container')[0];\n  },\n\n  willBeginScroll: function(touches, timeStamp) {\n    this._isScrolling = false;\n    this.trigger('scrollingDidStart');\n\n    this.scroller.doTouchStart(touches, timeStamp);\n  },\n\n  continueScroll: function(touches, timeStamp) {\n    var startingScrollTop, endingScrollTop, event;\n\n    if (this._isScrolling) {\n      this.scroller.doTouchMove(touches, timeStamp);\n    } else {\n      startingScrollTop = this._scrollerTop;\n\n      this.scroller.doTouchMove(touches, timeStamp);\n\n      endingScrollTop = this._scrollerTop;\n\n      if (startingScrollTop !== endingScrollTop) {\n        event = Ember.$.Event(\"scrollerstart\");\n        Ember.$(touches[0].target).trigger(event);\n\n        this._isScrolling = true;\n      }\n    }\n  },\n\n  endScroll: function(timeStamp) {\n    this.scroller.doTouchEnd(timeStamp);\n  },\n\n  // api\n  scrollTo: function(y, animate) {\n    if (animate === undefined) {\n      animate = true;\n    }\n\n    this.scroller.scrollTo(0, y, animate, 1);\n  },\n\n  // events\n  mouseWheel: function(e){\n    var inverted, delta, candidatePosition;\n\n    inverted = e.webkitDirectionInvertedFromDevice;\n    delta = e.wheelDeltaY * (inverted ? 0.8 : -0.8);\n    candidatePosition = this.scroller.__scrollTop + delta;\n\n    if ((candidatePosition >= 0) && (candidatePosition <= this.scroller.__maxScrollTop)) {\n      this.scroller.scrollBy(0, delta, true);\n      e.stopPropagation();\n    }\n\n    return false;\n  }\n});\n\n})();\n\n\n\n(function() {\nEmber.Handlebars.registerHelper('ember-list', function emberList(options) {\n  var hash = options.hash;\n  var types = options.hashTypes;\n\n  hash.content = hash.items;\n  delete hash.items;\n\n  types.content = types.items;\n  delete types.items;\n\n  if (!hash.content) {\n    hash.content = \"this\";\n    types.content = \"ID\";\n  }\n\n  for (var prop in hash) {\n    if (/-/.test(prop)) {\n      var camelized = Ember.String.camelize(prop);\n      hash[camelized] = hash[prop];\n      types[camelized] = types[prop];\n      delete hash[prop];\n      delete types[prop];\n    }\n  }\n\n  return Ember.Handlebars.helpers.collection.call(this, 'Ember.ListView', options);\n});\n\n\n})();\n\n\n\n(function() {\n\n})();\n\n\n\n})();//@ sourceURL=vendor/ember-list-view/list-view.js")

eval("(function() {\n\n/*!\n * Bootstrap v3.2.0 (http://getbootstrap.com)\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n\nif (typeof jQuery === 'undefined') { throw new Error('Bootstrap\\'s JavaScript requires jQuery') }\n\n/* ========================================================================\n * Bootstrap: transition.js v3.2.0\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.2.0\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.2.0'\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.hasClass('alert') ? $this : $this.parent()\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(150) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.2.0\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.2.0'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state = state + 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    $el[val](data[state] == null ? this.options[state] : data[state])\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked') && this.$element.hasClass('active')) changed = false\n        else $parent.find('.active').removeClass('active')\n      }\n      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')\n    }\n\n    if (changed) this.$element.toggleClass('active')\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document).on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n    var $btn = $(e.target)\n    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n    Plugin.call($btn, 'toggle')\n    e.preventDefault()\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.2.0\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element).on('keydown.bs.carousel', $.proxy(this.keydown, this))\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      =\n    this.sliding     =\n    this.interval    =\n    this.$active     =\n    this.$items      = null\n\n    this.options.pause == 'hover' && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.2.0'\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || $active[type]()\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var fallback  = type == 'next' ? 'first' : 'last'\n    var that      = this\n\n    if (!$next.length) {\n      if (!this.options.wrap) return\n      $next = this.$element.find('.item')[fallback]()\n    }\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd($active.css('transition-duration').slice(0, -1) * 1000)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  $(document).on('click.bs.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  })\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.2.0\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.transitioning = null\n\n    if (this.options.parent) this.$parent = $(this.options.parent)\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.2.0'\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var actives = this.$parent && this.$parent.find('> .panel > .in')\n\n    if (actives && actives.length) {\n      var hasData = actives.data('bs.collapse')\n      if (hasData && hasData.transitioning) return\n      Plugin.call(actives, 'hide')\n      hasData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(350)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse')\n      .removeClass('in')\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .trigger('hidden.bs.collapse')\n        .removeClass('collapsing')\n        .addClass('collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(350)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && option == 'show') option = !option\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var href\n    var $this   = $(this)\n    var target  = $this.attr('data-target')\n        || e.preventDefault()\n        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n    var $target = $(target)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n    var parent  = $this.attr('data-parent')\n    var $parent = parent && $(parent)\n\n    if (!data || !data.transitioning) {\n      if ($parent) $parent.find('[data-toggle=\"collapse\"][data-parent=\"' + parent + '\"]').not($this).addClass('collapsed')\n      $this[$target.hasClass('in') ? 'addClass' : 'removeClass']('collapsed')\n    }\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.2.0\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.2.0'\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.trigger('focus')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27)/.test(e.keyCode)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive || (isActive && e.keyCode == 27)) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.divider):visible a'\n    var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index($items.filter(':focus'))\n\n    if (e.keyCode == 38 && index > 0)                 index--                        // up\n    if (e.keyCode == 40 && index < $items.length - 1) index++                        // down\n    if (!~index)                                      index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $parent = getParent($(this))\n      var relatedTarget = { relatedTarget: this }\n      if (!$parent.hasClass('open')) return\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n      if (e.isDefaultPrevented()) return\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle + ', [role=\"menu\"], [role=\"listbox\"]', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.2.0\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options        = options\n    this.$body          = $(document.body)\n    this.$element       = $(element)\n    this.$backdrop      =\n    this.isShown        = null\n    this.scrollbarWidth = 0\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.2.0'\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.setScrollbar()\n    this.escape()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element\n        .addClass('in')\n        .attr('aria-hidden', false)\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$element.find('.modal-dialog') // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(300) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.$body.removeClass('modal-open')\n\n    this.resetScrollbar()\n    this.escape()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .attr('aria-hidden', true)\n      .off('click.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(300) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keyup.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keyup.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus.call(this.$element[0])\n          : this.hide.call(this)\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(150) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(150) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    if (document.body.clientWidth >= window.innerWidth) return\n    this.scrollbarWidth = this.scrollbarWidth || this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    if (this.scrollbarWidth) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', '')\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.2.0\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       =\n    this.options    =\n    this.enabled    =\n    this.timeout    =\n    this.hoverState =\n    this.$element   = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.2.0'\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(document.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var $parent      = this.$element.parent()\n        var parentDim    = this.getPosition($parent)\n\n        placement = placement == 'bottom' && pos.top   + pos.height       + actualHeight - parentDim.scroll > parentDim.height ? 'top'    :\n                    placement == 'top'    && pos.top   - parentDim.scroll - actualHeight < 0                                   ? 'bottom' :\n                    placement == 'right'  && pos.right + actualWidth      > parentDim.width                                    ? 'left'   :\n                    placement == 'left'   && pos.left  - actualWidth      < parentDim.left                                     ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(150) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  = offset.top  + marginTop\n    offset.left = offset.left + marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var arrowDelta          = delta.left ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowPosition       = delta.left ? 'left'        : 'top'\n    var arrowOffsetPosition = delta.left ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], arrowPosition)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, position) {\n    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + '%') : '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function () {\n    var that = this\n    var $tip = this.tip()\n    var e    = $.Event('hide.bs.' + this.type)\n\n    this.$element.removeAttr('aria-describedby')\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element.trigger('hidden.bs.' + that.type)\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && this.$tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(150) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : null, {\n      scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop(),\n      width:  isBody ? $(window).width()  : $element.outerWidth(),\n      height: isBody ? $(window).height() : $element.outerHeight()\n    }, isBody ? { top: 0, left: 0 } : $element.offset())\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    return (this.$tip = this.$tip || $(this.options.template))\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.validate = function () {\n    if (!this.$element[0].parentNode) {\n      this.hide()\n      this.$element = null\n      this.options  = null\n    }\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n  }\n\n  Tooltip.prototype.destroy = function () {\n    clearTimeout(this.timeout)\n    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && option == 'destroy') return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.2.0\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.2.0'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').empty()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n  Popover.prototype.tip = function () {\n    if (!this.$tip) this.$tip = $(this.options.template)\n    return this.$tip\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && option == 'destroy') return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.2.0\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    var process  = $.proxy(this.process, this)\n\n    this.$body          = $('body')\n    this.$scrollElement = $(element).is('body') ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', process)\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.2.0'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var offsetMethod = 'offset'\n    var offsetBase   = 0\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.offsets = []\n    this.targets = []\n    this.scrollHeight = this.getScrollHeight()\n\n    var self     = this\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        self.offsets.push(this[0])\n        self.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop <= offsets[0]) {\n      return activeTarget != (i = targets[0]) && this.activate(i)\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n\n    var selector = this.selector +\n        '[data-target=\"' + target + '\"],' +\n        this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.2.0\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    this.element = $(element)\n  }\n\n  Tab.VERSION = '3.2.0'\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var previous = $ul.find('.active:last a')[0]\n    var e        = $.Event('show.bs.tab', {\n      relatedTarget: previous\n    })\n\n    $this.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: previous\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && $active.hasClass('fade')\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n        .removeClass('active')\n\n      element.addClass('active')\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu')) {\n        element.closest('li.dropdown').addClass('active')\n      }\n\n      callback && callback()\n    }\n\n    transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(150) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  $(document).on('click.bs.tab.data-api', '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.2.0\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      =\n    this.unpin        =\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.2.0'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var scrollHeight = $(document).height()\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.unpin   != null && (scrollTop + this.unpin <= position.top) ? false :\n                offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ? 'bottom' :\n                offsetTop    != null && (scrollTop <= offsetTop) ? 'top' : false\n\n    if (this.affixed === affix) return\n    if (this.unpin != null) this.$element.css('top', '')\n\n    var affixType = 'affix' + (affix ? '-' + affix : '')\n    var e         = $.Event(affixType + '.bs.affix')\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    this.affixed = affix\n    this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n    this.$element\n      .removeClass(Affix.RESET)\n      .addClass(affixType)\n      .trigger($.Event(affixType.replace('affix', 'affixed')))\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - this.$element.height() - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop)    data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n\n\n})();//@ sourceURL=vendor/bootstrap/dist/js/bootstrap.js")

eval("(function() {\n\neval(\"(function() {\\n\\nvar _ref;\\n\\nEmber.Widgets = Ember.Namespace.create();\\n\\nEmber.Widgets.VERSION = '0.2.0';\\n\\nif ((_ref = Ember.libraries) != null) {\\n  _ref.register('Ember Widgets', Ember.Widgets.VERSION);\\n}\\n\\n\\n})();//@ sourceURL=build/src/ember_widgets.js\")\n\neval(\"(function() {\\n\\nEmber.AddeparMixins = Ember.AddeparMixins || Ember.Namespace.create();\\n\\nEmber.AddeparMixins.ResizeHandlerMixin = Ember.Mixin.create({\\n  resizeEndDelay: 200,\\n  resizing: false,\\n  onResizeStart: Ember.K,\\n  onResizeEnd: Ember.K,\\n  onResize: Ember.K,\\n  endResize: Ember.computed(function() {\\n    return function(event) {\\n      if (this.isDestroyed) {\\n        return;\\n      }\\n      this.set('resizing', false);\\n      return typeof this.onResizeEnd === \\\"function\\\" ? this.onResizeEnd(event) : void 0;\\n    };\\n  }),\\n  handleWindowResize: function(event) {\\n    if (!this.get('resizing')) {\\n      this.set('resizing', true);\\n      if (typeof this.onResizeStart === \\\"function\\\") {\\n        this.onResizeStart(event);\\n      }\\n    }\\n    if (typeof this.onResize === \\\"function\\\") {\\n      this.onResize(event);\\n    }\\n    return Ember.run.debounce(this, this.get('endResize'), event, this.get('resizeEndDelay'));\\n  },\\n  didInsertElement: function() {\\n    this._super();\\n    return this._setupResizeDocumentHandlers();\\n  },\\n  willDestroyElement: function() {\\n    this._removeResizeDocumentHandlers();\\n    return this._super();\\n  },\\n  _setupResizeDocumentHandlers: function() {\\n    if (this._resizeHandler) {\\n      return;\\n    }\\n    this._resizeHandler = jQuery.proxy(this.get('handleWindowResize'), this);\\n    return jQuery(window).on(\\\"resize.\\\" + this.elementId, this._resizeHandler);\\n  },\\n  _removeResizeDocumentHandlers: function() {\\n    jQuery(window).off(\\\"resize.\\\" + this.elementId, this._resizeHandler);\\n    return this._resizeHandler = null;\\n  }\\n});\\n\\n\\n})();//@ sourceURL=dependencies/ember-addepar-mixins/resize_handler.js\")\n\neval(\"(function() {\\n\\nEmber.TEMPLATES[\\\"accordion-group-layout\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1;\\n\\n\\n  data.buffer.push(\\\"<div class=\\\\\\\"panel-heading\\\\\\\">\\\\n  <h4 class=\\\\\\\"panel-title\\\\\\\">\\\\n    <a class=\\\\\\\"accordion-toggle collapsed\\\\\\\">\\\\n      \\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"view.title\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n    </a>\\\\n  </h4>\\\\n</div>\\\\n<div class=\\\\\\\"panel-collapse collapse\\\\\\\">\\\\n  <div class=\\\\\\\"panel-body\\\\\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"yield\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</div>\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"carousel\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.CollectionView\\\", {hash:{\\n    'tagName': (\\\"ol\\\"),\\n    'class': (\\\"carousel-indicators\\\"),\\n    'contentBinding': (\\\"view.content\\\"),\\n    'itemViewClass': (\\\"Ember.Widgets.CarouselIndicator\\\")\\n  },hashTypes:{'tagName': \\\"STRING\\\",'class': \\\"STRING\\\",'contentBinding': \\\"STRING\\\",'itemViewClass': \\\"STRING\\\"},hashContexts:{'tagName': depth0,'class': depth0,'contentBinding': depth0,'itemViewClass': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n<div class=\\\\\\\"carousel-inner\\\\\\\">\\\\n  \\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"yield\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n</div>\\\\n<a class=\\\\\\\"left carousel-control\\\\\\\"  href=\\\\\\\"#\\\\\\\" \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"prev\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">â¹</a>\\\\n<a class=\\\\\\\"right carousel-control\\\\\\\" href=\\\\\\\"#\\\\\\\" \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"next\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">âº</a>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"color-picker-cell\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  \\n\\n\\n  data.buffer.push(\\\"<div class=\\\\\\\"no-color-indicator-holder\\\\\\\"></div>\\\");\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"color-picker\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.Widgets.ColorPickerCell\\\", {hash:{\\n    'colorBinding': (\\\"selectedColor\\\"),\\n    'classNames': (\\\"color-picker-cell-transparent\\\")\\n  },hashTypes:{'colorBinding': \\\"STRING\\\",'classNames': \\\"STRING\\\"},hashContexts:{'colorBinding': depth0,'classNames': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  return buffer;\\n  }\\n\\nfunction program3(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.Widgets.ColorPickerCell\\\", {hash:{\\n    'colorBinding': (\\\"selectedColor\\\")\\n  },hashTypes:{'colorBinding': \\\"STRING\\\"},hashContexts:{'colorBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  return buffer;\\n  }\\n\\nfunction program5(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n      <div class=\\\\\\\"color-row clearfix\\\\\\\">\\\\n        \\\");\\n  stack1 = helpers.each.call(depth0, \\\"color\\\", \\\"in\\\", \\\"row\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0,depth0,depth0],types:[\\\"ID\\\",\\\"ID\\\",\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n      </div>\\\\n      <hr>\\\\n    \\\");\\n  return buffer;\\n  }\\nfunction program6(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n          \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.Widgets.ColorPickerCell\\\", {hash:{\\n    'colorBinding': (\\\"color\\\")\\n  },hashTypes:{'colorBinding': \\\"STRING\\\"},hashContexts:{'colorBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n        \\\");\\n  return buffer;\\n  }\\n\\n  data.buffer.push(\\\"<div class=\\\\\\\"dropdown\\\\\\\">\\\\n  <a class=\\\\\\\"clearfix color-picker-dropdown-button\\\\\\\" data-toggle=\\\\\\\"dropdown\\\\\\\" href=\\\\\\\"#\\\\\\\">\\\\n    \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"isColorTransparent\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n    <span class=\\\\\\\"pull-right fa fa-caret-down color-picker-dropdown-caret\\\\\\\"></span>\\\\n  </a>\\\\n  <div \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":dropdown-menu :color-picker-dropdown dropdownClass\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    role=\\\\\\\"menu\\\\\\\" aria-labelledby=\\\\\\\"dLabel\\\\\\\">\\\\n    \\\");\\n  stack1 = helpers.each.call(depth0, \\\"row\\\", \\\"in\\\", \\\"colorRows\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\\\"ID\\\",\\\"ID\\\",\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n    <form \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":color-picker-custom-form isCustomColorValid:valid:invalid\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n      <div class=\\\\\\\"form-group form-group-sm\\\\\\\">\\\\n        <div class=\\\\\\\"input-group\\\\\\\">\\\\n          <span \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":input-group-addon\\\\n            :color-picker-custom-preview isCustomColor:active\\\"),\\n    'style': (\\\"customColorCSS\\\")\\n  },hashTypes:{'class': \\\"STRING\\\",'style': \\\"STRING\\\"},hashContexts:{'class': depth0,'style': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"></span>\\\\n          \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.TextField\\\", {hash:{\\n    'valueBinding': (\\\"customColor\\\"),\\n    'class': (\\\"form-control input-sm\\\"),\\n    'type': (\\\"text\\\"),\\n    'placeholder': (\\\"HEX code\\\")\\n  },hashTypes:{'valueBinding': \\\"STRING\\\",'class': \\\"STRING\\\",'type': \\\"STRING\\\",'placeholder': \\\"STRING\\\"},hashContexts:{'valueBinding': depth0,'class': depth0,'type': depth0,'placeholder': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n        </div>\\\\n      </div>\\\\n    </form>\\\\n  </div>\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"component-default-content\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1;\\n\\n\\n  data.buffer.push(\\\"<p>\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"content\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</p>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"editable-label\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"view.innerTextField\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  }\\n\\nfunction program3(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  <span \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"editLabel\\\", {hash:{\\n    'target': (\\\"view\\\")\\n  },hashTypes:{'target': \\\"STRING\\\"},hashContexts:{'target': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"view.displayName\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</span>\\\\n\\\");\\n  return buffer;\\n  }\\n\\n  stack1 = helpers['if'].call(depth0, \\\"view.isEditing\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"font-chooser-item\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(\\\"<div \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'style': (\\\"view.style\\\")\\n  },hashTypes:{'style': \\\"STRING\\\"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n  \\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"view.label\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"modal-footer\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-primary :btn-confirm isValid::disabled\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"sendConfirm\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"confirmText\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  </button>\\\\n\\\");\\n  return buffer;\\n  }\\n\\nfunction program3(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-cancel\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"sendCancel\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"cancelText\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  </button>\\\\n\\\");\\n  return buffer;\\n  }\\n\\nfunction program5(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-close\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"sendClose\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"closeText\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  </button>\\\\n\\\");\\n  return buffer;\\n  }\\n\\n  stack1 = helpers['if'].call(depth0, \\\"confirmText\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\\n\\\");\\n  stack1 = helpers['if'].call(depth0, \\\"cancelText\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\\n\\\");\\n  stack1 = helpers['if'].call(depth0, \\\"closeText\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"modal\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(\\\"<div \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":modal-dialog sizeClass\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n  <div class=\\\\\\\"modal-content\\\\\\\">\\\\n    <div class=\\\\\\\"modal-header\\\\\\\">\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"_headerViewClass\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    </div>\\\\n    <div class=\\\\\\\"modal-body\\\\\\\">\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"_contentViewClass\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    </div>\\\\n    <div class=\\\\\\\"modal-footer\\\\\\\">\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"_footerViewClass\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    </div>\\\\n  </div>\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"modal_header\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(\\\"<button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"close\\\\\\\" \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"sendClose\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">&times;</button>\\\\n<h4 class=\\\\\\\"modal-title\\\\\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"headerText\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</h4>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"multi-select-item\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(\\\"<div>\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"view.label\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</div>\\\\n<a class=\\\\\\\"ember-select-search-choice-close\\\\\\\" href=\\\\\\\"#\\\\\\\"\\\\n  \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"removeSelectItem\\\", \\\"view.content\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\\\"STRING\\\",\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\">Ã\\\\n</a>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"multi-select\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n    <span class=\\\\\\\"ember-select-no-results\\\\\\\">No results match \\\\\\\"\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"query\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\\\\"</span>\\\\n  \\\");\\n  return buffer;\\n  }\\n\\n  data.buffer.push(\\\"<div class=\\\\\\\"ember-select-container ember-select-multi dropdown-toggle js-dropdown-toggle\\\\\\\">\\\\n  <ul \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":form-control :ember-select-choices choicesFieldClass\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.each.call(depth0, \\\"selections\\\", {hash:{\\n    'itemViewClass': (\\\"view.selectionItemView\\\")\\n  },hashTypes:{'itemViewClass': \\\"STRING\\\"},hashContexts:{'itemViewClass': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    <li class=\\\\\\\"ember-select-search-field\\\\\\\">\\\\n      \\\\n      <span class=\\\\\\\"invisible-placeholder\\\\\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"invisiblePlaceholderText\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</span>\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"searchView\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    </li>\\\\n  </ul>\\\\n</div>\\\\n\\\\n<div class=\\\\\\\"dropdown-menu js-dropdown-menu\\\\\\\">\\\\n  \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"listView\\\", {hash:{\\n    'tagName': (\\\"ul\\\"),\\n    'classNames': (\\\"ember-select-results\\\"),\\n    'heightBinding': (\\\"dropdownHeight\\\"),\\n    'rowHeightBinding': (\\\"rowHeight\\\"),\\n    'contentBinding': (\\\"groupedContent\\\"),\\n    'itemViewClassBinding': (\\\"itemView\\\")\\n  },hashTypes:{'tagName': \\\"STRING\\\",'classNames': \\\"STRING\\\",'heightBinding': \\\"STRING\\\",'rowHeightBinding': \\\"STRING\\\",'contentBinding': \\\"STRING\\\",'itemViewClassBinding': \\\"STRING\\\"},hashContexts:{'tagName': depth0,'classNames': depth0,'heightBinding': depth0,'rowHeightBinding': depth0,'contentBinding': depth0,'itemViewClassBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"hasNoResults\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"non-editable-text-pill-configuration\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\\n    'valueBinding': (\\\"content.text\\\"),\\n    'placeholder': (\\\"Enter custom text\\\"),\\n    'class': (\\\"form-control\\\")\\n  },hashTypes:{'valueBinding': \\\"STRING\\\",'placeholder': \\\"STRING\\\",'class': \\\"STRING\\\"},hashContexts:{'valueBinding': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \\\"input\\\", options))));\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"popover-link-popover\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  <h4 class=\\\\\\\"popover-title\\\\\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"title\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</h4>\\\\n\\\");\\n  return buffer;\\n  }\\n\\n  data.buffer.push(\\\"<div class=\\\\\\\"arrow\\\\\\\" \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'style': (\\\"view.arrowStyle\\\")\\n  },hashTypes:{'style': \\\"STRING\\\"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"></div>\\\\n\\\");\\n  stack1 = helpers['if'].call(depth0, \\\"title\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n<div class=\\\\\\\"popover-content\\\\\\\">\\\\n  \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"view._contentViewClass\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"popover\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  <h4 class=\\\\\\\"popover-title\\\\\\\">\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"title\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</h4>\\\\n\\\");\\n  return buffer;\\n  }\\n\\n  data.buffer.push(\\\"<div class=\\\\\\\"arrow\\\\\\\" \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'style': (\\\"arrowStyle\\\")\\n  },hashTypes:{'style': \\\"STRING\\\"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"></div>\\\\n\\\");\\n  stack1 = helpers['if'].call(depth0, \\\"title\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n<div class=\\\\\\\"popover-content\\\\\\\">\\\\n  \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"view._contentViewClass\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"radio-button-layout\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.Widgets.RadioButtonComponent\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"yield\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"select-item-layout\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"view.content.name\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  }\\n\\nfunction program3(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"yield\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  }\\n\\n  stack1 = helpers['if'].call(depth0, \\\"view.content.isGroupOption\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"select-item\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  <span \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'title': (\\\"view.label\\\")\\n  },hashTypes:{'title': \\\"ID\\\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n    \\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"view.label\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  </span>\\\\n\\\");\\n  return buffer;\\n  }\\n\\nfunction program3(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"view.label\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  }\\n\\n  stack1 = helpers['if'].call(depth0, \\\"controller.titleOnOptions\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"select\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"selectedItemView\\\", {hash:{\\n    'contentBinding': (\\\"selection\\\")\\n  },hashTypes:{'contentBinding': \\\"STRING\\\"},hashContexts:{'contentBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n      <i \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\"view.dropdownToggleIcon\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"></i>\\\\n    \\\");\\n  return buffer;\\n  }\\n\\nfunction program3(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n      <span>\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"prompt\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</span>\\\\n      <i \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\"view.dropdownToggleIcon\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"></i>\\\\n    \\\");\\n  return buffer;\\n  }\\n\\nfunction program5(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n    <div class=\\\\\\\"ember-select-search\\\\\\\">\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"searchView\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    </div>\\\\n  \\\");\\n  return buffer;\\n  }\\n\\nfunction program7(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"listView\\\", {hash:{\\n    'tagName': (\\\"ul\\\"),\\n    'classNames': (\\\"ember-select-results\\\"),\\n    'heightBinding': (\\\"dropdownHeight\\\"),\\n    'rowHeightBinding': (\\\"rowHeight\\\"),\\n    'contentBinding': (\\\"groupedContent\\\"),\\n    'itemViewClassBinding': (\\\"itemView\\\")\\n  },hashTypes:{'tagName': \\\"STRING\\\",'classNames': \\\"STRING\\\",'heightBinding': \\\"STRING\\\",'rowHeightBinding': \\\"STRING\\\",'contentBinding': \\\"STRING\\\",'itemViewClassBinding': \\\"STRING\\\"},hashContexts:{'tagName': depth0,'classNames': depth0,'heightBinding': depth0,'rowHeightBinding': depth0,'contentBinding': depth0,'itemViewClassBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"hasNoResults\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  return buffer;\\n  }\\nfunction program8(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n      <span class=\\\\\\\"ember-select-no-results\\\\\\\">No results match \\\\\\\"\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"query\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\\\\"</span>\\\\n    \\\");\\n  return buffer;\\n  }\\n\\nfunction program10(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"selectMenuView\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  return buffer;\\n  }\\n\\n  data.buffer.push(\\\"<div class=\\\\\\\"ember-select-container dropdown-toggle js-dropdown-toggle\\\\\\\" \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"toggleDropdown\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n  <a \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":form-control :ember-select-choice buttonClass disabled:disabled\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n    \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"selection\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  </a>\\\\n</div>\\\\n\\\\n<div \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":dropdown-menu :js-dropdown-menu dropdownMenuClass\\\\n  isDropdownMenuPulledRight:pull-right\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n  \\\");\\n  stack1 = helpers.unless.call(depth0, \\\"isSelect\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"showDropdown\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"selectMenuView\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"text-editor-config\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(escapeExpression((helper = helpers['select-component'] || (depth0 && depth0['select-component']),options={hash:{\\n    'content': (\\\"fontNames\\\"),\\n    'placeholder': (\\\"Select a Font\\\"),\\n    'selection': (\\\"textEditor.selectedFontName\\\"),\\n    'class': (\\\"ember-text-editor-font-family-select js-ember-text-editor-font-family-select\\\"),\\n    'isSelect': (\\\"true\\\"),\\n    'buttonClass': (\\\"btn btn-default btn-sm btn-form text-left\\\"),\\n    'itemViewClass': (\\\"fontChooserItemViewClass\\\"),\\n    'userSelected': (\\\"applyFontName\\\")\\n  },hashTypes:{'content': \\\"ID\\\",'placeholder': \\\"STRING\\\",'selection': \\\"ID\\\",'class': \\\"STRING\\\",'isSelect': \\\"STRING\\\",'buttonClass': \\\"STRING\\\",'itemViewClass': \\\"ID\\\",'userSelected': \\\"STRING\\\"},hashContexts:{'content': depth0,'placeholder': depth0,'selection': depth0,'class': depth0,'isSelect': depth0,'buttonClass': depth0,'itemViewClass': depth0,'userSelected': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \\\"select-component\\\", options))));\\n  data.buffer.push(\\\"\\\\n\\\\n\\\");\\n  data.buffer.push(escapeExpression((helper = helpers['select-component'] || (depth0 && depth0['select-component']),options={hash:{\\n    'content': (\\\"fontSizes\\\"),\\n    'placeholder': (\\\"Select Font Size\\\"),\\n    'optionLabelPath': (\\\"name\\\"),\\n    'optionValuePath': (\\\"size\\\"),\\n    'value': (\\\"textEditor.selectedFontSize\\\"),\\n    'sortLabels': (false),\\n    'class': (\\\"ember-text-editor-font-size-select\\\"),\\n    'isSelect': (\\\"true\\\"),\\n    'buttonClass': (\\\"btn btn-default btn-sm\\\"),\\n    'userSelected': (\\\"applyFontSize\\\")\\n  },hashTypes:{'content': \\\"ID\\\",'placeholder': \\\"STRING\\\",'optionLabelPath': \\\"STRING\\\",'optionValuePath': \\\"STRING\\\",'value': \\\"ID\\\",'sortLabels': \\\"BOOLEAN\\\",'class': \\\"STRING\\\",'isSelect': \\\"STRING\\\",'buttonClass': \\\"STRING\\\",'userSelected': \\\"STRING\\\"},hashContexts:{'content': depth0,'placeholder': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'value': depth0,'sortLabels': depth0,'class': depth0,'isSelect': depth0,'buttonClass': depth0,'userSelected': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \\\"select-component\\\", options))));\\n  data.buffer.push(\\\"\\\\n\\\\n\\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.Widgets.ColorPicker\\\", {hash:{\\n    'selectedColor': (\\\"textEditor.selectedForeColor\\\"),\\n    'class': (\\\"btn btn-default btn-sm\\\"),\\n    'userSelected': (\\\"applyForeColor\\\")\\n  },hashTypes:{'selectedColor': \\\"ID\\\",'class': \\\"STRING\\\",'userSelected': \\\"STRING\\\"},hashContexts:{'selectedColor': depth0,'class': depth0,'userSelected': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n\\\\n<div class=\\\\\\\"btn-group\\\\\\\">\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isBold:active :js-btn-bold\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"toggleBold\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-bold\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isItalic:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"toggleItalic\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-italic\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isUnderline:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"toggleUnderline\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-underline\\\\\\\"></i>\\\\n  </button>\\\\n</div>\\\\n\\\\n<div class=\\\\\\\"btn-group\\\\\\\">\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isJustifyLeft:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"justifyLeft\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-align-left\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isJustifyCenter:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"justifyCenter\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-align-center\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isJustifyRight:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"justifyRight\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-align-right\\\\\\\"></i>\\\\n  </button>\\\\n</div>\\\\n\\\\n<div class=\\\\\\\"btn-group\\\\\\\">\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-sm\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"insertOrderedList\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-list-ol\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-sm\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"insertUnorderedList\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-list-ul\\\\\\\"></i>\\\\n  </button>\\\\n</div>\\\\n\\\\n<div class=\\\\\\\"btn-group\\\\\\\">\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-sm\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"outdent\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-outdent\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-sm\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"indent\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-indent\\\\\\\"></i>\\\\n  </button>\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"text-editor-pill-menu\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n<div class=\\\\\\\"ember-select-container dropdown-toggle\\\\\\\" \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"toggleDropdown\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n  <a \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":ember-select-choice buttonClass\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n    \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"selection\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  </a>\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  }\\nfunction program2(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"selectedItemView\\\", {hash:{\\n    'contentBinding': (\\\"selection\\\")\\n  },hashTypes:{'contentBinding': \\\"STRING\\\"},hashContexts:{'contentBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n      <i \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\"view.dropdownToggleIcon\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"></i>\\\\n    \\\");\\n  return buffer;\\n  }\\n\\nfunction program4(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n      <span>\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"prompt\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"</span>\\\\n      <i \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\"view.dropdownToggleIcon\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"></i>\\\\n    \\\");\\n  return buffer;\\n  }\\n\\nfunction program6(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n    <div class=\\\\\\\"ember-select-search\\\\\\\">\\\\n      \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"searchView\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n    </div>\\\\n  \\\");\\n  return buffer;\\n  }\\n\\nfunction program8(depth0,data) {\\n  \\n  var buffer = '', stack1;\\n  data.buffer.push(\\\"\\\\n    <span class=\\\\\\\"ember-select-no-results\\\\\\\">No results match \\\\\\\"\\\");\\n  stack1 = helpers._triageMustache.call(depth0, \\\"query\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\\\\"</span>\\\\n  \\\");\\n  return buffer;\\n  }\\n\\nfunction program10(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"selectMenuView\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  return buffer;\\n  }\\n\\n  stack1 = helpers['if'].call(depth0, \\\"showButton\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\\n<div \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":dropdown-menu dropdownMenuClass\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\">\\\\n  \\\");\\n  stack1 = helpers.unless.call(depth0, \\\"isSelect\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"listView\\\", {hash:{\\n    'tagName': (\\\"ul\\\"),\\n    'classNames': (\\\"ember-select-results\\\"),\\n    'heightBinding': (\\\"dropdownHeight\\\"),\\n    'rowHeightBinding': (\\\"rowHeight\\\"),\\n    'contentBinding': (\\\"groupedContent\\\"),\\n    'itemViewClassBinding': (\\\"itemView\\\")\\n  },hashTypes:{'tagName': \\\"STRING\\\",'classNames': \\\"STRING\\\",'heightBinding': \\\"STRING\\\",'rowHeightBinding': \\\"STRING\\\",'contentBinding': \\\"STRING\\\",'itemViewClassBinding': \\\"STRING\\\"},hashContexts:{'tagName': depth0,'classNames': depth0,'heightBinding': depth0,'rowHeightBinding': depth0,'contentBinding': depth0,'itemViewClassBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"hasNoResults\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n  \\\");\\n  stack1 = helpers['if'].call(depth0, \\\"selectMenuView\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n</div>\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"text-editor-with-non-editable-config\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(escapeExpression((helper = helpers['select-component'] || (depth0 && depth0['select-component']),options={hash:{\\n    'content': (\\\"fontNames\\\"),\\n    'placeholder': (\\\"Select a Font\\\"),\\n    'selection': (\\\"textEditor.selectedFontName\\\"),\\n    'class': (\\\"ember-text-editor-font-family-select js-ember-text-editor-font-family-select\\\"),\\n    'isSelect': (\\\"true\\\"),\\n    'buttonClass': (\\\"btn btn-default btn-sm btn-form text-left\\\"),\\n    'itemViewClass': (\\\"fontChooserItemViewClass\\\"),\\n    'userSelected': (\\\"applyFontName\\\")\\n  },hashTypes:{'content': \\\"ID\\\",'placeholder': \\\"STRING\\\",'selection': \\\"ID\\\",'class': \\\"STRING\\\",'isSelect': \\\"STRING\\\",'buttonClass': \\\"STRING\\\",'itemViewClass': \\\"ID\\\",'userSelected': \\\"STRING\\\"},hashContexts:{'content': depth0,'placeholder': depth0,'selection': depth0,'class': depth0,'isSelect': depth0,'buttonClass': depth0,'itemViewClass': depth0,'userSelected': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \\\"select-component\\\", options))));\\n  data.buffer.push(\\\"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\");\\n  data.buffer.push(escapeExpression((helper = helpers['select-component'] || (depth0 && depth0['select-component']),options={hash:{\\n    'content': (\\\"fontSizes\\\"),\\n    'placeholder': (\\\"Select Font Size\\\"),\\n    'optionLabelPath': (\\\"name\\\"),\\n    'optionValuePath': (\\\"size\\\"),\\n    'value': (\\\"textEditor.selectedFontSize\\\"),\\n    'sortLabels': (false),\\n    'class': (\\\"ember-text-editor-font-size-select\\\"),\\n    'isSelect': (\\\"true\\\"),\\n    'buttonClass': (\\\"btn btn-default btn-sm\\\"),\\n    'userSelected': (\\\"applyFontSize\\\")\\n  },hashTypes:{'content': \\\"ID\\\",'placeholder': \\\"STRING\\\",'optionLabelPath': \\\"STRING\\\",'optionValuePath': \\\"STRING\\\",'value': \\\"ID\\\",'sortLabels': \\\"BOOLEAN\\\",'class': \\\"STRING\\\",'isSelect': \\\"STRING\\\",'buttonClass': \\\"STRING\\\",'userSelected': \\\"STRING\\\"},hashContexts:{'content': depth0,'placeholder': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'value': depth0,'sortLabels': depth0,'class': depth0,'isSelect': depth0,'buttonClass': depth0,'userSelected': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \\\"select-component\\\", options))));\\n  data.buffer.push(\\\"\\\\n\\\\n\\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.Widgets.ColorPicker\\\", {hash:{\\n    'selectedColor': (\\\"textEditor.selectedForeColor\\\"),\\n    'class': (\\\"btn btn-default btn-sm\\\"),\\n    'userSelected': (\\\"applyForeColor\\\")\\n  },hashTypes:{'selectedColor': \\\"ID\\\",'class': \\\"STRING\\\",'userSelected': \\\"STRING\\\"},hashContexts:{'selectedColor': depth0,'class': depth0,'userSelected': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n\\\\n<div class=\\\\\\\"btn-group\\\\\\\">\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isBold:active :js-btn-bold\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"toggleBold\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-bold\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isItalic:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"toggleItalic\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-italic\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isUnderline:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"toggleUnderline\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-underline\\\\\\\"></i>\\\\n  </button>\\\\n</div>\\\\n\\\\n<div class=\\\\\\\"btn-group\\\\\\\">\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isJustifyLeft:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"justifyLeft\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-align-left\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isJustifyCenter:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"justifyCenter\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-align-center\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\\n    'class': (\\\":btn :btn-default :btn-sm textEditor.isJustifyRight:active\\\")\\n  },hashTypes:{'class': \\\"STRING\\\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\\n  data.buffer.push(\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"justifyRight\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-align-right\\\\\\\"></i>\\\\n  </button>\\\\n</div>\\\\n\\\\n<div class=\\\\\\\"btn-group\\\\\\\">\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-sm\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"insertOrderedList\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-list-ol\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-sm\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"insertUnorderedList\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-list-ul\\\\\\\"></i>\\\\n  </button>\\\\n</div>\\\\n\\\\n<div class=\\\\\\\"btn-group\\\\\\\">\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-sm\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"outdent\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-outdent\\\\\\\"></i>\\\\n  </button>\\\\n  <button type=\\\\\\\"button\\\\\\\" class=\\\\\\\"btn btn-default btn-sm\\\\\\\"\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \\\"indent\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"STRING\\\"],data:data})));\\n  data.buffer.push(\\\">\\\\n    <i class=\\\\\\\"fa fa-indent\\\\\\\"></i>\\\\n  </button>\\\\n</div>\\\\n\\\\n\\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.Widgets.PillSelect\\\", {hash:{\\n    'class': (\\\"insert-non-editable-btn\\\"),\\n    'isSelect': (\\\"pillHideSearchBox\\\"),\\n    'query': (\\\"query\\\"),\\n    'showDropdown': (\\\"showConfigPopover\\\"),\\n    'content': (\\\"_pillOptions\\\"),\\n    'optionLabelPath': (\\\"label\\\"),\\n    'optionValuePath': (\\\"value\\\"),\\n    'prompt': (\\\"Insert Non-Editable\\\"),\\n    'selection': (\\\"selectedPillOption\\\"),\\n    'buttonClass': (\\\"btn btn-default btn-sm\\\"),\\n    'viewName': (\\\"pillChooser\\\"),\\n    'userSelected': (\\\"insertPill\\\")\\n  },hashTypes:{'class': \\\"STRING\\\",'isSelect': \\\"ID\\\",'query': \\\"ID\\\",'showDropdown': \\\"ID\\\",'content': \\\"ID\\\",'optionLabelPath': \\\"STRING\\\",'optionValuePath': \\\"STRING\\\",'prompt': \\\"STRING\\\",'selection': \\\"ID\\\",'buttonClass': \\\"STRING\\\",'viewName': \\\"STRING\\\",'userSelected': \\\"STRING\\\"},hashContexts:{'class': depth0,'isSelect': depth0,'query': depth0,'showDropdown': depth0,'content': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'prompt': depth0,'selection': depth0,'buttonClass': depth0,'viewName': depth0,'userSelected': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"text-editor-with-non-editable\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', escapeExpression=this.escapeExpression;\\n\\n\\n  data.buffer.push(\\\"<iframe class=\\\\\\\"text-editor-frame\\\\\\\" src=\\\\\\\"about:blank\\\\\\\">\\\\n</iframe>\\\\n\\\\n\\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"Ember.Widgets.PillSelect\\\", {hash:{\\n    'class': (\\\"insert-non-editable-btn\\\"),\\n    'isSelect': (\\\"pillHideSearchBox\\\"),\\n    'query': (\\\"query\\\"),\\n    'showDropdown': (\\\"showConfigPopover\\\"),\\n    'content': (\\\"_pillOptions\\\"),\\n    'optionLabelPath': (\\\"label\\\"),\\n    'optionValuePath': (\\\"value\\\"),\\n    'prompt': (\\\"Insert Non-Editable\\\"),\\n    'selection': (\\\"selectedPillOption\\\"),\\n    'buttonClass': (\\\"btn btn-default btn-sm\\\"),\\n    'viewName': (\\\"pillChooserInLine\\\"),\\n    'userSelected': (\\\"insertPill\\\"),\\n    'showButton': (false)\\n  },hashTypes:{'class': \\\"STRING\\\",'isSelect': \\\"ID\\\",'query': \\\"ID\\\",'showDropdown': \\\"ID\\\",'content': \\\"ID\\\",'optionLabelPath': \\\"STRING\\\",'optionValuePath': \\\"STRING\\\",'prompt': \\\"STRING\\\",'selection': \\\"ID\\\",'buttonClass': \\\"STRING\\\",'viewName': \\\"STRING\\\",'userSelected': \\\"STRING\\\",'showButton': \\\"BOOLEAN\\\"},hashContexts:{'class': depth0,'isSelect': depth0,'query': depth0,'showDropdown': depth0,'content': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'prompt': depth0,'selection': depth0,'buttonClass': depth0,'viewName': depth0,'userSelected': depth0,'showButton': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"text-editor\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  \\n\\n\\n  data.buffer.push(\\\"<iframe class=\\\\\\\"text-editor-frame\\\\\\\" src=\\\\\\\"about:blank\\\\\\\">\\\\n</iframe>\\\\n\\\");\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"typeahead\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\\n\\nfunction program1(depth0,data) {\\n  \\n  var buffer = '';\\n  data.buffer.push(\\\"\\\\n  <div class=\\\\\\\"dropdown-menu\\\\\\\">\\\\n    \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"listView\\\", {hash:{\\n    'tagName': (\\\"ul\\\"),\\n    'classNames': (\\\"ember-typeahead-results\\\"),\\n    'heightBinding': (\\\"dropdownHeight\\\"),\\n    'rowHeightBinding': (\\\"rowHeight\\\"),\\n    'contentBinding': (\\\"groupedContent\\\"),\\n    'itemViewClassBinding': (\\\"itemView\\\")\\n  },hashTypes:{'tagName': \\\"STRING\\\",'classNames': \\\"STRING\\\",'heightBinding': \\\"STRING\\\",'rowHeightBinding': \\\"STRING\\\",'contentBinding': \\\"STRING\\\",'itemViewClassBinding': \\\"STRING\\\"},hashContexts:{'tagName': depth0,'classNames': depth0,'heightBinding': depth0,'rowHeightBinding': depth0,'contentBinding': depth0,'itemViewClassBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n  </div>\\\\n\\\");\\n  return buffer;\\n  }\\n\\n  data.buffer.push(\\\"<div>\\\\n  \\\");\\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \\\"searchView\\\", {hash:{\\n    'classBinding': (\\\"searchFieldClass\\\")\\n  },hashTypes:{'classBinding': \\\"STRING\\\"},hashContexts:{'classBinding': depth0},contexts:[depth0],types:[\\\"ID\\\"],data:data})));\\n  data.buffer.push(\\\"\\\\n</div>\\\\n\\\");\\n  stack1 = helpers.unless.call(depth0, \\\"hasNoResults\\\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\nEmber.TEMPLATES[\\\"view-parent-view-content\\\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\\nthis.compilerInfo = [4,'>= 1.0.0'];\\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\\n  var buffer = '', stack1;\\n\\n\\n  stack1 = helpers._triageMustache.call(depth0, \\\"view.parentView.content\\\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\\\"ID\\\"],data:data});\\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\\n  data.buffer.push(\\\"\\\\n\\\");\\n  return buffer;\\n  \\n});\\n\\n})();//@ sourceURL=build/src/templates.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.StyleBindingsMixin = Ember.Mixin.create({\\n  concatenatedProperties: ['styleBindings'],\\n  attributeBindings: ['style'],\\n  unitType: 'px',\\n  createStyleString: function(styleName, property) {\\n    var value;\\n    value = this.get(property);\\n    if (value === void 0) {\\n      return;\\n    }\\n    if (Ember.typeOf(value) === 'number') {\\n      value = value + this.get('unitType');\\n    }\\n    return \\\"\\\" + styleName + \\\":\\\" + value + \\\";\\\";\\n  },\\n  applyStyleBindings: function() {\\n    var lookup, properties, styleBindings, styleComputed, styles,\\n      _this = this;\\n    styleBindings = this.styleBindings;\\n    if (!styleBindings) {\\n      return;\\n    }\\n    lookup = {};\\n    styleBindings.forEach(function(binding) {\\n      var property, style, _ref;\\n      _ref = binding.split(':'), property = _ref[0], style = _ref[1];\\n      return lookup[style || property] = property;\\n    });\\n    styles = _.keys(lookup);\\n    properties = _.values(lookup);\\n    styleComputed = Ember.computed(function() {\\n      var styleString, styleTokens;\\n      styleTokens = styles.map(function(style) {\\n        return _this.createStyleString(style, lookup[style]);\\n      });\\n      styleString = styleTokens.join('');\\n      if (styleString.length !== 0) {\\n        return styleString;\\n      }\\n    });\\n    styleComputed.property.apply(styleComputed, properties);\\n    return Ember.defineProperty(this, 'style', styleComputed);\\n  },\\n  init: function() {\\n    this.applyStyleBindings();\\n    return this._super();\\n  }\\n});\\n\\nEmber.Widgets.BodyEventListener = Ember.Mixin.create({\\n  bodyElementSelector: 'html',\\n  bodyClick: Ember.K,\\n  didInsertElement: function() {\\n    this._super();\\n    return Ember.run.next(this, this._setupDocumentHandlers);\\n  },\\n  willDestroyElement: function() {\\n    this._super();\\n    return this._removeDocumentHandlers();\\n  },\\n  _setupDocumentHandlers: function() {\\n    var _this = this;\\n    if (this._clickHandler) {\\n      return;\\n    }\\n    this._clickHandler = function(event) {\\n      if ((_this.get('_state') || _this.get('state')) === 'inDOM' && Ember.isEmpty(_this.$().has($(event.target)))) {\\n        return _this.bodyClick();\\n      }\\n    };\\n    return $(this.get('bodyElementSelector')).on(\\\"click\\\", this._clickHandler);\\n  },\\n  _removeDocumentHandlers: function() {\\n    $(this.get('bodyElementSelector')).off(\\\"click\\\", this._clickHandler);\\n    return this._clickHandler = null;\\n  }\\n});\\n\\n\\n})();//@ sourceURL=build/src/mixins.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.AccordionComponent = Ember.Component.extend({\\n  classNames: 'panel-group',\\n  activeIndex: 0\\n});\\n\\nEmber.Widgets.AccordionItem = Ember.View.extend({\\n  defaultTemplate: Ember.Handlebars.compile('{{view.content}}'),\\n  layoutName: 'accordion-group-layout',\\n  classNames: 'panel panel-default',\\n  title: 'Untitled Accordion Group',\\n  index: 0,\\n  isActive: false,\\n  content: Ember.computed.alias('parentView.content'),\\n  isActiveDidChange: Ember.observer(function() {\\n    this.set('isActive', this.get('parentView.activeIndex') === this.get('index'));\\n    if (this.get('isActive')) {\\n      return this.show();\\n    } else {\\n      return this.hide();\\n    }\\n  }, 'parentView.activeIndex'),\\n  didInsertElement: function() {\\n    var index;\\n    index = this.get('parentView').$('.panel').index(this.$());\\n    this.set('index', index);\\n    return this.isActiveDidChange();\\n  },\\n  click: function(event) {\\n    if (!(this.$(event.target).closest('.panel-heading').length > 0)) {\\n      return;\\n    }\\n    if (this.get('isActive')) {\\n      return this.set('parentView.activeIndex', null);\\n    } else {\\n      return this.set('parentView.activeIndex', this.get('index'));\\n    }\\n  },\\n  hide: function() {\\n    var $accordionBody,\\n      _this = this;\\n    $accordionBody = this.$('.panel-collapse');\\n    $accordionBody.height($accordionBody.height())[0].offsetHeight;\\n    $accordionBody.removeClass('collapse').removeClass('in').addClass('collapsing');\\n    return $accordionBody.height(0).one($.support.transition.end, function() {\\n      return $accordionBody.removeClass('collapsing').addClass('collapse');\\n    });\\n  },\\n  show: function() {\\n    var $accordionBody,\\n      _this = this;\\n    $accordionBody = this.$('.panel-collapse');\\n    $accordionBody.removeClass('collapse').addClass('collapsing').height(0);\\n    $accordionBody.height($accordionBody[0]['scrollHeight']);\\n    return this.$().one($.support.transition.end, function() {\\n      return $accordionBody.removeClass('collapsing').addClass('in').height('auto');\\n    });\\n  }\\n});\\n\\nEmber.Handlebars.helper('accordion-component', Ember.Widgets.AccordionComponent);\\n\\nEmber.Handlebars.helper('accordion-item', Ember.Widgets.AccordionItem);\\n\\n\\n})();//@ sourceURL=build/src/accordion.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.CarouselComponent = Ember.Component.extend({\\n  layoutName: 'carousel',\\n  classNames: ['carousel', 'slide'],\\n  classNameBindings: Ember.A(['sliding']),\\n  activeIndex: 0,\\n  didInsertElement: function() {\\n    if (!this.get('content')) {\\n      return this.set('content', Ember.A(new Array(this.$('.item').length)));\\n    }\\n  },\\n  actions: {\\n    prev: function() {\\n      var activeIndex, contentLength, nextIndex;\\n      if (this.get('sliding')) {\\n        return;\\n      }\\n      activeIndex = this.get('activeIndex');\\n      contentLength = this.get('content.length');\\n      nextIndex = activeIndex - 1;\\n      nextIndex = nextIndex < 0 ? contentLength - 1 : nextIndex;\\n      return this.slide('prev', nextIndex);\\n    },\\n    next: function() {\\n      var activeIndex, contentLength, nextIndex;\\n      if (this.get('sliding')) {\\n        return;\\n      }\\n      activeIndex = this.get('activeIndex');\\n      contentLength = this.get('content.length');\\n      nextIndex = activeIndex + 1;\\n      nextIndex = nextIndex >= contentLength ? 0 : nextIndex;\\n      return this.slide('next', nextIndex);\\n    }\\n  },\\n  to: function(pos) {\\n    var direction;\\n    if (this.get('sliding')) {\\n      return;\\n    }\\n    if (!((0 <= pos && pos < this.get('content.length')))) {\\n      return;\\n    }\\n    direction = pos > this.get('activeIndex') ? 'next' : 'prev';\\n    return this.slide(direction, pos);\\n  },\\n  slide: function(type, nextIndex) {\\n    var $active, $next, direction,\\n      _this = this;\\n    if (this.get('activeIndex') === nextIndex) {\\n      return;\\n    }\\n    direction = type === 'next' ? 'left' : 'right';\\n    $active = $(this.$('.item').get(this.get('activeIndex')));\\n    $next = $(this.$('.item').get(nextIndex));\\n    this.set('sliding', true);\\n    $next.addClass(type);\\n    $next[0].offsetWidth;\\n    $active.addClass(direction);\\n    $next.addClass(direction);\\n    return $next.one($.support.transition.end, function() {\\n      return Ember.run(_this, function() {\\n        this.set('activeIndex', nextIndex);\\n        $next.removeClass([type, direction].join(' ')).addClass('active');\\n        $active.removeClass(['active', direction].join(' '));\\n        return this.set('sliding', false);\\n      });\\n    });\\n  }\\n});\\n\\nEmber.Widgets.CarouselIndicator = Ember.View.extend({\\n  classNameBindings: 'isActive:active',\\n  isActive: Ember.computed(function() {\\n    return this.get('contentIndex') === this.get('controller.activeIndex');\\n  }).property('contentIndex', 'controller.activeIndex'),\\n  click: function() {\\n    return this.get('controller').to(this.get('contentIndex'));\\n  }\\n});\\n\\nEmber.Widgets.CarouselItem = Ember.View.extend({\\n  classNames: 'item'\\n});\\n\\nEmber.Handlebars.helper('carousel-component', Ember.Widgets.CarouselComponent);\\n\\nEmber.Handlebars.helper('carousel-item', Ember.Widgets.CarouselItem);\\n\\n\\n})();//@ sourceURL=build/src/carousel.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.EditableLabel = Ember.View.extend({\\n  templateName: 'editable-label',\\n  classNames: ['editable-label'],\\n  placeholder: '',\\n  isEditing: false,\\n  value: null,\\n  displayName: Ember.computed(function() {\\n    if (Ember.isNone(this.get('value')) || this.get('value') === '') {\\n      return this.get('placeholder');\\n    } else {\\n      return this.get('value');\\n    }\\n  }).property('value', 'placeholder'),\\n  innerTextField: Ember.TextField.extend({\\n    valueBinding: Ember.Binding.oneWay('parentView.value'),\\n    didInsertElement: function() {\\n      return this.$().focus();\\n    },\\n    blur: function() {\\n      this.set('parentView.isEditing', false);\\n      return this.set('parentView.value', this.get('value'));\\n    }\\n  }),\\n  editLabel: function() {\\n    return this.set('isEditing', true);\\n  }\\n});\\n\\nEmber.Handlebars.helper('editable-label-component', Ember.Widgets.EditableLabel);\\n\\n\\n})();//@ sourceURL=build/src/editable_label.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.ModalComponent = Ember.Component.extend(Ember.Widgets.StyleBindingsMixin, {\\n  layoutName: 'modal',\\n  classNames: ['modal'],\\n  classNameBindings: ['isShowing:in', 'hasCloseButton::has-no-close-button', 'fade'],\\n  modalPaneBackdrop: '<div class=\\\"modal-backdrop\\\"></div>',\\n  bodyElementSelector: '.modal-backdrop',\\n  enforceModality: false,\\n  escToCancel: true,\\n  backdrop: true,\\n  isShowing: false,\\n  hasCloseButton: true,\\n  fade: true,\\n  headerText: \\\"Modal Header\\\",\\n  confirmText: \\\"Confirm\\\",\\n  cancelText: \\\"Cancel\\\",\\n  closeText: null,\\n  content: \\\"\\\",\\n  size: \\\"normal\\\",\\n  isValid: true,\\n  confirm: Ember.K,\\n  cancel: Ember.K,\\n  close: Ember.K,\\n  headerViewClass: Ember.View.extend({\\n    templateName: 'modal_header'\\n  }),\\n  contentViewClass: Ember.View.extend({\\n    template: Ember.Handlebars.compile(\\\"<p>{{content}}</p>\\\")\\n  }),\\n  footerViewClass: Ember.View.extend({\\n    templateName: 'modal-footer'\\n  }),\\n  _headerViewClass: Ember.computed(function() {\\n    var headerViewClass;\\n    headerViewClass = this.get('headerViewClass');\\n    if (typeof headerViewClass === 'string') {\\n      return Ember.get(headerViewClass);\\n    } else {\\n      return headerViewClass;\\n    }\\n  }).property('headerViewClass'),\\n  _contentViewClass: Ember.computed(function() {\\n    var contentViewClass;\\n    contentViewClass = this.get('contentViewClass');\\n    if (typeof contentViewClass === 'string') {\\n      return Ember.get(contentViewClass);\\n    } else {\\n      return contentViewClass;\\n    }\\n  }).property('contentViewClass'),\\n  _footerViewClass: Ember.computed(function() {\\n    var footerViewClass;\\n    footerViewClass = this.get('footerViewClass');\\n    if (typeof footerViewClass === 'string') {\\n      return Ember.get(footerViewClass);\\n    } else {\\n      return footerViewClass;\\n    }\\n  }).property('footerViewClass'),\\n  sizeClass: Ember.computed(function() {\\n    switch (this.get('size')) {\\n      case 'large':\\n        return 'modal-lg';\\n      case 'small':\\n        return 'modal-sm';\\n      default:\\n        return '';\\n    }\\n  }).property('size'),\\n  actions: {\\n    sendCancel: function() {\\n      var cancel;\\n      if (!this.get('isShowing')) {\\n        return;\\n      }\\n      cancel = this.get('cancel');\\n      if (typeof cancel === 'function') {\\n        this.cancel(this);\\n      } else {\\n        this.sendAction('cancel');\\n      }\\n      return this.hide();\\n    },\\n    sendConfirm: function() {\\n      var confirm;\\n      if (!this.get('isShowing')) {\\n        return;\\n      }\\n      confirm = this.get('confirm');\\n      if (typeof confirm === 'function') {\\n        this.confirm(this);\\n      } else {\\n        this.sendAction('confirm');\\n      }\\n      return this.hide();\\n    },\\n    sendClose: function() {\\n      var close;\\n      if (!this.get('isShowing')) {\\n        return;\\n      }\\n      close = this.get('close');\\n      if (typeof close === 'function') {\\n        this.close(this);\\n      } else {\\n        this.sendAction('close');\\n      }\\n      return this.hide();\\n    }\\n  },\\n  didInsertElement: function() {\\n    this._super();\\n    if (this.get('fade')) {\\n      this.$()[0].offsetWidth;\\n    }\\n    if (this.get('backdrop')) {\\n      this._appendBackdrop();\\n    }\\n    Ember.run.next(this, function() {\\n      return this.set('isShowing', true);\\n    });\\n    $(document.body).addClass('modal-open');\\n    return this._setupDocumentHandlers();\\n  },\\n  willDestroyElement: function() {\\n    this._super();\\n    this._removeDocumentHandlers();\\n    if (this._backdrop) {\\n      return this._backdrop.remove();\\n    }\\n  },\\n  keyHandler: Ember.computed(function() {\\n    var _this = this;\\n    return function(event) {\\n      if (event.which === 27 && _this.get('escToCancel')) {\\n        return _this.send('sendCancel');\\n      }\\n    };\\n  }),\\n  click: function(event) {\\n    if (event.target !== event.currentTarget) {\\n      return;\\n    }\\n    if (!this.get('enforceModality')) {\\n      return this.hide();\\n    }\\n  },\\n  hide: function() {\\n    var _this = this;\\n    this.set('isShowing', false);\\n    $(document.body).removeClass('modal-open');\\n    if (this._backdrop) {\\n      this._backdrop.removeClass('in');\\n    }\\n    if (this.get('fade')) {\\n      return this.$().one($.support.transition.end, function() {\\n        return Ember.run(_this, _this.destroy);\\n      });\\n    } else {\\n      return Ember.run(this, this.destroy);\\n    }\\n  },\\n  _appendBackdrop: function() {\\n    var modalPaneBackdrop, parentLayer;\\n    parentLayer = this.$().parent();\\n    modalPaneBackdrop = this.get('modalPaneBackdrop');\\n    if (this.get('fade')) {\\n      this._backdrop = jQuery(modalPaneBackdrop).addClass('fade');\\n    }\\n    this._backdrop.appendTo(parentLayer);\\n    return Ember.run.next(this, function() {\\n      return this._backdrop.addClass('in');\\n    });\\n  },\\n  _setupDocumentHandlers: function() {\\n    var _this = this;\\n    this._super();\\n    if (!this._hideHandler) {\\n      this._hideHandler = function() {\\n        return _this.hide();\\n      };\\n      $(document).on('modal:hide', this._hideHandler);\\n    }\\n    return $(document).on('keyup', this.get('keyHandler'));\\n  },\\n  _removeDocumentHandlers: function() {\\n    this._super();\\n    $(document).off('modal:hide', this._hideHandler);\\n    this._hideHandler = null;\\n    return $(document).off('keyup', this.get('keyHandler'));\\n  }\\n});\\n\\nEmber.Widgets.ModalComponent.reopenClass({\\n  rootElement: '.ember-application',\\n  poppedModal: null,\\n  hideAll: function() {\\n    return $(document).trigger('modal:hide');\\n  },\\n  popup: function(options) {\\n    var modal, rootElement;\\n    if (options == null) {\\n      options = {};\\n    }\\n    this.hideAll();\\n    rootElement = options.rootElement || this.rootElement;\\n    modal = this.create(options);\\n    if (modal.get('targetObject.container')) {\\n      modal.set('container', modal.get('targetObject.container'));\\n    }\\n    modal.appendTo(rootElement);\\n    return modal;\\n  }\\n});\\n\\nEmber.Handlebars.helper('modal-component', Ember.Widgets.ModalComponent);\\n\\n\\n})();//@ sourceURL=build/src/modal.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.PopoverMixin = Ember.Mixin.create(Ember.Widgets.StyleBindingsMixin, Ember.Widgets.BodyEventListener, {\\n  layoutName: 'popover',\\n  classNames: ['popover'],\\n  classNameBindings: ['isShowing:in', 'fade', 'placement'],\\n  styleBindings: ['left', 'top', 'display', 'visibility'],\\n  targetElement: null,\\n  contentViewClass: null,\\n  fade: true,\\n  escToCancel: true,\\n  placement: 'top',\\n  display: 'block',\\n  visibility: 'hidden',\\n  debounceTime: 100,\\n  left: 0,\\n  top: 0,\\n  marginTop: 23,\\n  marginLeft: 10,\\n  isShowing: false,\\n  inserted: false,\\n  title: '',\\n  content: '',\\n  _resizeHandler: null,\\n  _scrollHandler: null,\\n  _contentViewClass: Ember.computed(function() {\\n    if (this.get('contentViewClass')) {\\n      return this.get('contentViewClass');\\n    }\\n    return Ember.View.extend({\\n      content: Ember.computed.alias('parentView.content'),\\n      templateName: 'view-parent-view-content'\\n    });\\n  }).property('contentViewClass'),\\n  didInsertElement: function() {\\n    this._super();\\n    this.snapToPosition();\\n    this.set('visibility', 'visible');\\n    return this.set('isShowing', true);\\n  },\\n  bodyClick: function() {\\n    return this.hide();\\n  },\\n  hide: function() {\\n    var _this = this;\\n    if (this.get('isDestroyed')) {\\n      return;\\n    }\\n    this.set('isShowing', false);\\n    if (this.get('fade')) {\\n      return this.$().one($.support.transition.end, function() {\\n        return Ember.run(_this, _this.destroy);\\n      });\\n    } else {\\n      return Ember.run(this, this.destroy);\\n    }\\n  },\\n  /*\\n    Calculate the offset of the given iframe relative to the top window.\\n    - Walks up the iframe chain, checking the offset of each one till it reaches top\\n    - Only works with friendly iframes.\\n    - Takes into account scrolling, but comes up with a result relative to\\n    top iframe, regardless of being visibile withing intervening frames.\\n  \\n    @param window win    the iframe we're interested in (e.g. window)\\n    @param object pos   an object containing the offset so far:\\n    { left: [x], top: [y] }\\n    (optional - initializes with 0,0 if undefined)\\n    @return pos object above\\n  \\n    via http://stackoverflow.com/a/9676655\\n  */\\n\\n  computeFrameOffset: function(win, pos) {\\n    var found, frame, frames, rect, _i, _len;\\n    if (pos == null) {\\n      pos = {\\n        top: 0,\\n        left: 0\\n      };\\n    }\\n    frames = win.parent.document.getElementsByTagName(\\\"iframe\\\");\\n    found = false;\\n    for (_i = 0, _len = frames.length; _i < _len; _i++) {\\n      frame = frames[_i];\\n      if (frame.contentWindow === win) {\\n        found = true;\\n        break;\\n      }\\n    }\\n    if (found) {\\n      rect = frame.getBoundingClientRect();\\n      pos.left += rect.left;\\n      pos.top += rect.top;\\n      if (win !== top) {\\n        this.computeFrameOffset(win.parent, pos);\\n      }\\n    }\\n    return pos;\\n  },\\n  getOffset: function($target) {\\n    var doc, pos, win;\\n    pos = $target.offset();\\n    doc = $target[0].ownerDocument;\\n    win = doc.defaultView;\\n    return this.computeFrameOffset(win, pos);\\n  },\\n  snapToPosition: function() {\\n    var $target, actualHeight, actualWidth, pos;\\n    $target = $(this.get('targetElement'));\\n    if ((this.get('_state') || this.get('state')) !== 'inDOM' || Ember.isEmpty($target)) {\\n      return;\\n    }\\n    actualWidth = this.$()[0].offsetWidth;\\n    actualHeight = this.$()[0].offsetHeight;\\n    pos = this.getOffset($target);\\n    pos.width = $target[0].offsetWidth;\\n    pos.height = $target[0].offsetHeight;\\n    switch (this.get('placement')) {\\n      case 'bottom':\\n        this.set('top', pos.top + pos.height);\\n        this.set('left', pos.left + pos.width / 2 - actualWidth / 2);\\n        break;\\n      case 'top':\\n        this.set('top', pos.top - actualHeight);\\n        this.set('left', pos.left + pos.width / 2 - actualWidth / 2);\\n        break;\\n      case 'top-right':\\n        this.set('top', pos.top);\\n        this.set('left', pos.left + pos.width);\\n        break;\\n      case 'top-left':\\n        this.set('top', pos.top);\\n        this.set('left', pos.left - actualWidth);\\n        break;\\n      case 'bottom-right':\\n        this.set('top', pos.top + pos.height);\\n        this.set('left', pos.left + pos.width - actualWidth);\\n        break;\\n      case 'bottom-left':\\n        this.set('top', pos.top + pos.height);\\n        this.set('left', pos.left);\\n        break;\\n      case 'left':\\n        this.set('top', pos.top - this.get('marginTop'));\\n        this.set('left', pos.left - actualWidth);\\n        break;\\n      case 'right':\\n        this.set('top', pos.top - this.get('marginTop'));\\n        this.set('left', pos.left + pos.width);\\n        break;\\n    }\\n    this.correctIfOffscreen();\\n    return this.positionArrow();\\n  },\\n  positionArrow: function() {\\n    var $target, arrowSize, left, pos, top;\\n    $target = $(this.get('targetElement'));\\n    pos = this.getOffset($target);\\n    pos.width = $target[0].offsetWidth;\\n    pos.height = $target[0].offsetHeight;\\n    arrowSize = 22;\\n    switch (this.get('placement')) {\\n      case 'left':\\n      case 'right':\\n        top = pos.top + pos.height / 2 - this.get('top') - arrowSize / 2;\\n        return this.set('arrowStyle', \\\"margin-top:\\\" + top + \\\"px;\\\");\\n      case 'top':\\n      case 'bottom':\\n        left = pos.left + pos.width / 2 - this.get('left') - arrowSize / 2;\\n        return this.set('arrowStyle', \\\"margin-left:\\\" + left + \\\"px;\\\");\\n    }\\n  },\\n  correctIfOffscreen: function() {\\n    var actualHeight, actualWidth, bodyHeight, bodyWidth;\\n    bodyWidth = $('body').width();\\n    bodyHeight = $('body').height();\\n    actualWidth = this.$()[0].offsetWidth;\\n    actualHeight = this.$()[0].offsetHeight;\\n    if (this.get('left') + actualWidth > bodyWidth) {\\n      this.set('left', bodyWidth - actualWidth - this.get('marginLeft'));\\n    }\\n    if (this.get('left') < 0) {\\n      this.set('left', this.get('marginLeft'));\\n    }\\n    if (this.get('top') + actualHeight > bodyHeight) {\\n      this.set('top', bodyHeight - actualHeight - this.get('marginTop'));\\n    }\\n    if (this.get('top') < 0) {\\n      return this.set('top', this.get('marginTop'));\\n    }\\n  },\\n  keyHandler: Ember.computed(function() {\\n    var _this = this;\\n    return function(event) {\\n      if (event.which === 27 && _this.get('escToCancel')) {\\n        return _this.hide();\\n      }\\n    };\\n  }),\\n  debounceSnapToPosition: Ember.computed(function() {\\n    var _this = this;\\n    return function() {\\n      return Ember.run.debounce(_this, _this.snapToPosition, _this.get('debounceTime'));\\n    };\\n  }),\\n  _setupDocumentHandlers: function() {\\n    var _this = this;\\n    this._super();\\n    if (!this._hideHandler) {\\n      this._hideHandler = function() {\\n        return _this.hide();\\n      };\\n      $(document).on('popover:hide', this._hideHandler);\\n    }\\n    if (!this._resizeHandler) {\\n      this._resizeHandler = this.get('debounceSnapToPosition');\\n      $(document).on('resize', this._resizeHandler);\\n    }\\n    if (!this._scrollHandler) {\\n      this._scrollHandler = this.get('debounceSnapToPosition');\\n      $(document).on('scroll', this._scrollHandler);\\n    }\\n    return $(document).on('keyup', this.get('keyHandler'));\\n  },\\n  _removeDocumentHandlers: function() {\\n    this._super();\\n    $(document).off('popover:hide', this._hideHandler);\\n    this._hideHandler = null;\\n    $(document).off('resize', this._resizeHandler);\\n    this._resizeHandler = null;\\n    $(document).off('scroll', this._scrollHandler);\\n    return this._scrollHandler = null;\\n  }\\n});\\n\\nEmber.Widgets.PopoverComponent = Ember.Component.extend(Ember.Widgets.PopoverMixin);\\n\\nEmber.Widgets.PopoverComponent.reopenClass({\\n  rootElement: '.ember-application',\\n  hideAll: function() {\\n    return $(document).trigger('popover:hide');\\n  },\\n  popup: function(options) {\\n    var popover, rootElement;\\n    this.hideAll();\\n    rootElement = options.rootElement || this.rootElement;\\n    popover = this.create(options);\\n    if (popover.get('targetObject.container')) {\\n      popover.set('container', popover.get('targetObject.container'));\\n    }\\n    popover.appendTo(rootElement);\\n    return popover;\\n  }\\n});\\n\\nEmber.Handlebars.helper('popover-component', Ember.Widgets.PopoverComponent);\\n\\n\\n})();//@ sourceURL=build/src/popover.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.PopoverLinkComponent = Ember.Component.extend({\\n  classNames: ['popover-link'],\\n  classNameBindings: ['disabled'],\\n  placement: 'top',\\n  content: null,\\n  title: null,\\n  contentViewClass: null,\\n  disabled: false,\\n  popoverClassNames: [],\\n  rootElement: '.ember-application',\\n  fade: true,\\n  _contentViewClass: Ember.computed(function() {\\n    var contentViewClass;\\n    contentViewClass = this.get('contentViewClass');\\n    if (typeof contentViewClass === 'string') {\\n      return Ember.get(contentViewClass);\\n    }\\n    return contentViewClass;\\n  }).property('contentViewClass'),\\n  click: function(event) {\\n    var popover, popoverView;\\n    if (this.get('disabled')) {\\n      return;\\n    }\\n    popoverView = Ember.View.extend(Ember.Widgets.PopoverMixin, {\\n      layoutName: 'popover-link-popover',\\n      classNames: this.get('popoverClassNames'),\\n      controller: this,\\n      targetElement: this.get('element'),\\n      container: this.get('container'),\\n      placement: Ember.computed.alias('controller.placement'),\\n      title: Ember.computed.alias('controller.title'),\\n      contentViewClass: this.get('_contentViewClass'),\\n      fade: this.get('fade')\\n    });\\n    popover = popoverView.create();\\n    return popover.appendTo(this.get('rootElement'));\\n  }\\n});\\n\\nEmber.Handlebars.helper('popover-link-component', Ember.Widgets.PopoverLinkComponent);\\n\\n\\n})();//@ sourceURL=build/src/popover_link.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.SelectOptionView = Ember.ListItemView.extend({\\n  tagName: 'li',\\n  templateName: 'select-item',\\n  layoutName: 'select-item-layout',\\n  classNames: 'ember-select-result-item',\\n  classNameBindings: Ember.A(['content.isGroupOption:ember-select-group', 'isHighlighted:highlighted']),\\n  labelPath: Ember.computed.alias('controller.optionLabelPath'),\\n  isHighlighted: Ember.computed(function() {\\n    return this.get('controller.highlighted') === this.get('content');\\n  }).property('controller.highlighted', 'content'),\\n  labelPathDidChange: Ember.observer(function() {\\n    var labelPath, path;\\n    labelPath = this.get('labelPath');\\n    path = labelPath ? \\\"content.\\\" + labelPath : 'content';\\n    Ember.defineProperty(this, 'label', Ember.computed.alias(path));\\n    return this.notifyPropertyChange('label');\\n  }, 'content', 'labelPath'),\\n  didInsertElement: function() {\\n    this._super();\\n    return this.labelPathDidChange();\\n  },\\n  updateContext: function(context) {\\n    this._super(context);\\n    return this.set('content', context);\\n  },\\n  click: function() {\\n    if (this.get('content.isGroupOption')) {\\n      return;\\n    }\\n    this.set('controller.selection', this.get('content'));\\n    this.get('controller').userDidSelect(this.get('content'));\\n    if (this.get('controller.showDropdown')) {\\n      this.get('controller').send('hideDropdown');\\n      return false;\\n    }\\n  },\\n  mouseEnter: function() {\\n    if (this.get('content.isGroupOption')) {\\n      return;\\n    }\\n    return this.set('controller.highlighted', this.get('content'));\\n  }\\n});\\n\\nEmber.Widgets.SelectComponent = Ember.Component.extend(Ember.Widgets.BodyEventListener, Ember.AddeparMixins.ResizeHandlerMixin, {\\n  layoutName: 'select',\\n  classNames: 'ember-select',\\n  attributeBindings: Ember.A(['tabindex']),\\n  classNameBindings: Ember.A(['showDropdown:open', 'isDropup:dropup']),\\n  itemViewClass: 'Ember.Widgets.SelectOptionView',\\n  prompt: 'Select a Value',\\n  placeholder: void 0,\\n  disabled: false,\\n  highlightedIndex: -1,\\n  tabindex: -1,\\n  showDropdown: false,\\n  dropdownHeight: 300,\\n  rowHeight: 26,\\n  sortLabels: true,\\n  titleOnOptions: false,\\n  isSelect: false,\\n  isDropup: false,\\n  isDropdownMenuPulledRight: false,\\n  dropdownToggleIcon: 'fa fa-caret-down',\\n  buttonClass: 'btn btn-default',\\n  dropdownMenuClass: '',\\n  content: Ember.A([]),\\n  selection: null,\\n  query: '',\\n  optionLabelPath: '',\\n  optionValuePath: '',\\n  optionGroupPath: '',\\n  optionDefaultPath: '',\\n  selectMenuView: null,\\n  updateDropdownLayout: Ember.observer(function() {\\n    var dropdownButton, dropdownButtonHeight, dropdownButtonOffset, dropdownMargin, dropdownMenu, dropdownMenuBottom, dropdownMenuHeight, dropdownMenuOffset, dropdownMenuWidth, dropupMenuTop;\\n    if ((this.get('_state') || this.get('state')) !== 'inDOM' || this.get('showDropdown') === false) {\\n      return;\\n    }\\n    this.$('.js-dropdown-menu').css('visibility', 'hidden');\\n    dropdownButton = this.$('.js-dropdown-toggle')[0];\\n    dropdownButtonHeight = this.$(dropdownButton).outerHeight();\\n    dropdownButtonOffset = this.$(dropdownButton).offset();\\n    dropdownMenu = this.$('.js-dropdown-menu')[0];\\n    dropdownMenuHeight = this.$(dropdownMenu).outerHeight();\\n    dropdownMenuWidth = this.$(dropdownMenu).outerWidth();\\n    dropdownMenuOffset = this.$(dropdownMenu).offset();\\n    dropdownMargin = 15;\\n    if (this.get('isDropup')) {\\n      dropdownMenuBottom = dropdownButtonOffset.top + dropdownButtonHeight + dropdownMenuHeight + dropdownMargin;\\n    } else {\\n      dropdownMenuBottom = dropdownMenuOffset.top + dropdownMenuHeight;\\n    }\\n    dropupMenuTop = dropdownButtonOffset.top - dropdownMenuHeight - dropdownMargin;\\n    this.set('isDropup', dropupMenuTop > window.scrollY && dropdownMenuBottom > window.innerHeight);\\n    this.set('isDropdownMenuPulledRight', dropdownButtonOffset.left + dropdownMenuWidth + dropdownMargin > window.innerWidth);\\n    return this.$('.js-dropdown-menu').css('visibility', 'visible');\\n  }, 'showDropdown'),\\n  onResizeEnd: function() {\\n    return Ember.run(this, this.updateDropdownLayout);\\n  },\\n  itemView: Ember.computed(function() {\\n    var itemViewClass;\\n    itemViewClass = this.get('itemViewClass');\\n    if (typeof itemViewClass === 'string') {\\n      return Ember.get(itemViewClass);\\n    }\\n    return itemViewClass;\\n  }).property('itemViewClass'),\\n  selectedItemView: Ember.computed(function() {\\n    return this.get('itemView').extend({\\n      tagName: 'span',\\n      labelPath: Ember.computed.alias('controller.optionLabelPath'),\\n      context: Ember.computed.alias('controller.selection')\\n    });\\n  }).property('itemView'),\\n  selectedLabel: Ember.computed(function() {\\n    return Ember.get(this.get('selection'), this.get('optionLabelPath'));\\n  }).property('selection', 'optionLabelPath'),\\n  searchView: Ember.TextField.extend({\\n    placeholder: Ember.computed.alias('parentView.placeholder'),\\n    valueBinding: 'parentView.query',\\n    showDropdownDidChange: Ember.observer(function() {\\n      return Ember.run.schedule('afterRender', this, function() {\\n        if ((this.get('_state') || this.get('state')) === 'inDOM') {\\n          return this.$().focus();\\n        }\\n      });\\n    }, 'parentView.showDropdown')\\n  }),\\n  listView: Ember.ListView.extend({\\n    style: Ember.computed(function() {\\n      var height;\\n      height = Math.min(this.get('height'), this.get('totalHeight'));\\n      return \\\"height: \\\" + height + \\\"px\\\";\\n    }).property('height', 'totalHeight')\\n  }),\\n  preparedContent: Ember.computed(function() {\\n    if (this.get('sortLabels')) {\\n      return this.get('sortedFilteredContent');\\n    } else {\\n      return this.get('filteredContent');\\n    }\\n  }).property('sortLabels', 'filteredContent', 'sortedFilteredContent'),\\n  contentProxy: Ember.computed(function() {\\n    var ContentProxy, matcher, optionLabelPath, query,\\n      _this = this;\\n    matcher = function(searchText, item) {\\n      return _this.matcher(searchText, item);\\n    };\\n    optionLabelPath = this.get('optionLabelPath');\\n    query = this.get('query');\\n    ContentProxy = Ember.ObjectProxy.extend({\\n      filteredContent: Ember.computed(function() {\\n        return (this.get('content') || []).filter(function(item) {\\n          return matcher(query, item);\\n        });\\n      }).property(\\\"content.@each.\\\" + optionLabelPath),\\n      sortedFilteredContent: Ember.computed(function() {\\n        var _this = this;\\n        return _.sortBy(this.get('filteredContent'), function(item) {\\n          var _ref;\\n          return (_ref = Ember.get(item, optionLabelPath)) != null ? _ref.toLowerCase() : void 0;\\n        });\\n      }).property(\\\"filteredContent\\\")\\n    });\\n    return ContentProxy.create({\\n      content: this.get('content')\\n    });\\n  }).property('content', 'optionLabelPath', 'query'),\\n  filteredContent: Ember.computed.alias('contentProxy.filteredContent'),\\n  sortedFilteredContent: Ember.computed.alias('contentProxy.sortedFilteredContent'),\\n  groupedContent: Ember.computed(function() {\\n    var content, groups, path, result;\\n    path = this.get('optionGroupPath');\\n    content = this.get('preparedContent');\\n    if (!path) {\\n      return content;\\n    }\\n    groups = _.groupBy(content, function(item) {\\n      return Ember.get(item, path);\\n    });\\n    result = Ember.A();\\n    _.keys(groups).sort().forEach(function(key) {\\n      result.pushObject(Ember.Object.create({\\n        isGroupOption: true,\\n        name: key\\n      }));\\n      return result.pushObjects(groups[key]);\\n    });\\n    return result;\\n  }).property('preparedContent', 'optionGroupPath', 'labels.[]'),\\n  hasNoResults: Ember.computed.empty('filteredContent'),\\n  value: Ember.computed(function(key, value) {\\n    var selection, valuePath;\\n    if (arguments.length === 2) {\\n      valuePath = this.get('optionValuePath');\\n      selection = value;\\n      if (valuePath) {\\n        selection = this.get('content').findProperty(valuePath, value);\\n      }\\n      this.set('selection', selection);\\n      return value;\\n    } else {\\n      valuePath = this.get('optionValuePath');\\n      selection = this.get('selection');\\n      if (valuePath) {\\n        return Ember.get(selection, valuePath);\\n      } else {\\n        return selection;\\n      }\\n    }\\n  }).property('selection'),\\n  didInsertElement: function() {\\n    this._super();\\n    return this.setDefaultSelection();\\n  },\\n  matcher: function(searchText, item) {\\n    var escapedSearchText, label, regex;\\n    if (!searchText) {\\n      return true;\\n    }\\n    label = Ember.get(item, this.get('optionLabelPath'));\\n    escapedSearchText = searchText.replace(/[-[\\\\]{}()*+?.,\\\\\\\\^$|#\\\\s]/g, \\\"\\\\\\\\$&\\\");\\n    regex = new RegExp(escapedSearchText, 'i');\\n    return regex.test(label);\\n  },\\n  setDefaultSelection: Ember.observer(function() {\\n    var content, defaultPath;\\n    if (this.get('selection')) {\\n      return;\\n    }\\n    content = this.get('content');\\n    defaultPath = this.get('optionDefaultPath');\\n    if (!(content && defaultPath)) {\\n      return;\\n    }\\n    return this.set('selection', content.findProperty(defaultPath));\\n  }, 'content.@each'),\\n  selectableOptionsDidChange: Ember.observer(function() {\\n    var highlighted;\\n    if (this.get('showDropdown')) {\\n      highlighted = this.get('highlighted');\\n      if (!this.get('selectableOptions').contains(highlighted)) {\\n        return this.set('highlighted', this.get('selectableOptions.firstObject'));\\n      }\\n    }\\n  }, 'selectableOptions', 'showDropdown'),\\n  /*\\n    # SELECTION RELATED\\n  */\\n\\n  KEY_EVENTS: {\\n    8: 'deletePressed',\\n    27: 'escapePressed',\\n    13: 'enterPressed',\\n    38: 'upArrowPressed',\\n    40: 'downArrowPressed'\\n  },\\n  selectableOptions: Ember.computed(function() {\\n    return Ember.A((this.get('groupedContent') || []).filter(function(item) {\\n      return !Ember.get(item, 'isGroupOption');\\n    }));\\n  }).property('groupedContent'),\\n  highlighted: Ember.computed(function(key, value) {\\n    var content, index;\\n    content = this.get('selectableOptions') || Ember.A([]);\\n    value = value || Ember.A([]);\\n    if (arguments.length === 1) {\\n      index = this.get('highlightedIndex');\\n      value = content.objectAt(index);\\n    } else {\\n      index = content.indexOf(value);\\n      this.setHighlightedIndex(index, true);\\n    }\\n    return value;\\n  }).property('selectableOptions', 'highlightedIndex'),\\n  bodyClick: function() {\\n    return this.send('hideDropdown');\\n  },\\n  keyDown: function(event) {\\n    var map, method, _ref;\\n    if (!this.get('showDropdown')) {\\n      return this.set('showDropdown', true);\\n    }\\n    map = this.get('KEY_EVENTS');\\n    method = map[event.keyCode];\\n    if (method) {\\n      return (_ref = this.get(method)) != null ? _ref.apply(this, arguments) : void 0;\\n    }\\n  },\\n  deletePressed: Ember.K,\\n  escapePressed: function(event) {\\n    return this.send('hideDropdown');\\n  },\\n  enterPressed: function(event) {\\n    var item;\\n    item = this.get('highlighted');\\n    if (!Ember.isEmpty(item)) {\\n      this.set('selection', item);\\n    }\\n    if (!Ember.isEmpty(item)) {\\n      this.userDidSelect(item);\\n    }\\n    this.send('hideDropdown');\\n    return event.preventDefault();\\n  },\\n  upArrowPressed: function(event) {\\n    var index, sel;\\n    sel = this.get('highlightedIndex');\\n    index = event.ctrlKey || event.metaKey ? 0 : sel - 1;\\n    this.setHighlightedIndex(index, true);\\n    return event.preventDefault();\\n  },\\n  downArrowPressed: function(event) {\\n    var clen, index, sel;\\n    sel = this.get('highlightedIndex');\\n    clen = this.get('selectableOptions.length');\\n    index = event.ctrlKey || event.metaKey ? clen - 1 : sel + 1;\\n    this.setHighlightedIndex(index, true);\\n    return event.preventDefault();\\n  },\\n  setHighlightedIndex: function(index, ensureVisible) {\\n    if (!this.ensureIndex(index)) {\\n      return;\\n    }\\n    this.set('highlightedIndex', index);\\n    if (ensureVisible) {\\n      return this.ensureVisible(index);\\n    }\\n  },\\n  ensureIndex: function(index) {\\n    var clen;\\n    clen = this.get('selectableOptions.length');\\n    return index >= 0 && index < clen;\\n  },\\n  ensureVisible: function(index) {\\n    var $listView, endIndex, item, listView, newIndex, numRows, startIndex;\\n    $listView = this.$('.ember-list-view');\\n    listView = Ember.View.views[$listView.attr('id')];\\n    if (!listView) {\\n      return;\\n    }\\n    startIndex = listView._startingIndex();\\n    numRows = listView._childViewCount() - 1;\\n    endIndex = startIndex + numRows;\\n    item = this.get('selectableOptions').objectAt(index);\\n    newIndex = this.get('groupedContent').indexOf(item);\\n    if (index === 0) {\\n      return $listView.scrollTop(0);\\n    } else if (newIndex < startIndex) {\\n      return $listView.scrollTop(newIndex * this.get('rowHeight'));\\n    } else if (newIndex >= endIndex) {\\n      return $listView.scrollTop((newIndex - numRows + 1.5) * this.get('rowHeight'));\\n    }\\n  },\\n  userDidSelect: function(selection) {\\n    return this.sendAction('userSelected', selection);\\n  },\\n  actions: {\\n    toggleDropdown: function(event) {\\n      if (this.get('disabled')) {\\n        return;\\n      }\\n      return this.toggleProperty('showDropdown');\\n    },\\n    hideDropdown: function(event) {\\n      return this.set('showDropdown', false);\\n    }\\n  }\\n});\\n\\nEmber.Handlebars.helper('select-component', Ember.Widgets.SelectComponent);\\n\\n\\n})();//@ sourceURL=build/src/select.js\")\n\neval(\"(function() {\\n\\nvar get, set;\\n\\nget = function(object, key) {\\n  if (!object) {\\n    return void 0;\\n  }\\n  if (!key) {\\n    return object;\\n  }\\n  return (typeof object.get === \\\"function\\\" ? object.get(key) : void 0) || object[key];\\n};\\n\\nset = function(object, key, value) {\\n  if (!(object && key)) {\\n    return;\\n  }\\n  return (typeof object.set === \\\"function\\\" ? object.set(key, value) : void 0) || (object[key] = value);\\n};\\n\\nEmber.Widgets.MultiSelectOptionView = Ember.View.extend({\\n  tagName: 'li',\\n  templateName: 'multi-select-item',\\n  classNames: 'ember-select-search-choice',\\n  labelPath: Ember.computed.alias('controller.optionLabelPath'),\\n  didInsertElement: function() {\\n    this._super();\\n    return this.labelPathDidChange();\\n  },\\n  labelPathDidChange: Ember.observer(function() {\\n    var labelPath, path;\\n    labelPath = this.get('labelPath');\\n    path = labelPath ? \\\"context.\\\" + labelPath : 'context';\\n    Ember.defineProperty(this, 'label', Ember.computed.alias(path));\\n    return this.notifyPropertyChange('label');\\n  }, 'context', 'labelPath')\\n});\\n\\nEmber.Widgets.MultiSelectComponent = Ember.Widgets.SelectComponent.extend({\\n  layoutName: 'multi-select',\\n  selections: void 0,\\n  choicesFieldClass: '',\\n  placeholder: void 0,\\n  persistentPlaceholder: void 0,\\n  values: Ember.computed(function(key, value) {\\n    var selections, valuePath;\\n    if (arguments.length === 2) {\\n      if (!value) {\\n        return;\\n      }\\n      valuePath = this.get('optionValuePath');\\n      this.set('selections', Ember.A(this.get('content').filter(function(item) {\\n        return value.contains(get(item, valuePath));\\n      })));\\n      return value;\\n    } else {\\n      valuePath = this.get('optionValuePath');\\n      selections = this.get('selections');\\n      if (valuePath) {\\n        return selections.getEach(valuePath);\\n      } else {\\n        return selections;\\n      }\\n    }\\n  }).property('selections.@each'),\\n  selectionItemView: Ember.Widgets.MultiSelectOptionView,\\n  invisiblePlaceholderText: Ember.computed(function() {\\n    if (this.get('query')) {\\n      return this.get('query');\\n    }\\n    if (this.get('selections.length')) {\\n      return this.get('persistentPlaceholder');\\n    }\\n    return this.get('placeholder') || this.get('persistentPlaceholder');\\n  }).property('query', 'placeholder', 'persistentPlaceholder', 'selections.length'),\\n  searchView: Ember.TextField.extend({\\n    \\\"class\\\": 'ember-select-input',\\n    valueBinding: 'parentView.query',\\n    focusIn: function(event) {\\n      return this.set('parentView.showDropdown', true);\\n    },\\n    placeholder: Ember.computed(function() {\\n      if (this.get('parentView.selections.length')) {\\n        return this.get('parentView.persistentPlaceholder');\\n      }\\n      return this.get('parentView.placeholder') || this.get('parentView.persistentPlaceholder');\\n    }).property('parentView.placeholder', 'parentView.persistentPlaceholder', 'parentView.selections.length')\\n  }),\\n  preparedContent: Ember.computed(function() {\\n    var content, selections,\\n      _this = this;\\n    content = this.get('content');\\n    selections = this.get('selections');\\n    if (!(content && selections)) {\\n      return Ember.A([]);\\n    }\\n    if (this.get('sortLabels')) {\\n      return this.get('sortedFilteredContent').filter(function(item) {\\n        return !selections.contains(item);\\n      });\\n    } else {\\n      return this.get('filteredContent').filter(function(item) {\\n        return !selections.contains(item);\\n      });\\n    }\\n  }).property('content.@each', 'filteredContent.[]', 'sortedFilteredContent.[]', 'selections.@each', 'sortLabels'),\\n  selectionDidChange: Ember.observer(function() {\\n    var selection, selections;\\n    selections = this.get('selections');\\n    selection = this.get('selection');\\n    this.set('selection', null);\\n    this.set('query', '');\\n    if (!Ember.isEmpty(selection) && !selections.contains(selection)) {\\n      return selections.pushObject(selection);\\n    }\\n  }, 'selection'),\\n  didInsertElement: function() {\\n    this._super();\\n    if (!this.get('selections')) {\\n      this.set('selections', Ember.A([]));\\n    }\\n    if (!this.get('values')) {\\n      return this.set('values', Ember.A([]));\\n    }\\n  },\\n  deletePressed: function(event) {\\n    if (event.target.selectionStart === 0) {\\n      return this.removeSelectItem(this.get('selections.lastObject'));\\n    }\\n  },\\n  removeSelectItem: function(item) {\\n    return this.get('selections').removeObject(item);\\n  },\\n  actions: {\\n    removeSelectItem: function(item) {\\n      return this.removeSelectItem(item);\\n    }\\n  }\\n});\\n\\nEmber.Handlebars.helper('multi-select-component', Ember.Widgets.MultiSelectComponent);\\n\\n\\n})();//@ sourceURL=build/src/multi_select.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.RadioButtonComponent = Ember.Component.extend({\\n  attributeBindings: ['type', 'checked', 'disabled'],\\n  classNames: ['radio-input'],\\n  tagName: 'input',\\n  type: 'radio',\\n  checked: Ember.computed.alias('parentView.checked'),\\n  disabled: Ember.computed.alias('parentView._disabled')\\n});\\n\\nEmber.Widgets.RadioButtonWrapperComponent = Ember.Component.extend({\\n  layoutName: 'radio-button-layout',\\n  value: null,\\n  disabled: false,\\n  selectedValue: Ember.computed.alias('parentView.selectedValue'),\\n  classNames: ['radio-button'],\\n  checked: false,\\n  _disabled: Ember.computed.or('parentView.disabled', 'disabled'),\\n  selectedValueChanged: Ember.on('init', Ember.observer(function() {\\n    var selectedValue;\\n    selectedValue = this.get('selectedValue');\\n    if (!Ember.isEmpty(selectedValue) && this.get('value') === selectedValue) {\\n      return this.set('checked', true);\\n    } else {\\n      return this.set('checked', false);\\n    }\\n  }, 'selectedValue')),\\n  click: function(event) {\\n    if (this.get('_disabled')) {\\n      return;\\n    }\\n    this.set('checked', true);\\n    return this.set('selectedValue', this.get('value'));\\n  }\\n});\\n\\nEmber.Widgets.RadioButtonGroupComponent = Ember.Component.extend({\\n  classNames: ['ember-radio-button-group'],\\n  selectedValue: null,\\n  disabled: false\\n});\\n\\nEmber.Handlebars.helper('radio-button-group-component', Ember.Widgets.RadioButtonGroupComponent);\\n\\nEmber.Handlebars.helper('radio-button', Ember.Widgets.RadioButtonWrapperComponent);\\n\\n\\n})();//@ sourceURL=build/src/radio_button.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.DomHelper = Ember.Mixin.create({\\n  KEY_CODES: {\\n    BACKSPACE: 8,\\n    DELETE: 46,\\n    DOWN: 40,\\n    ENTER: 13,\\n    LEFT: 37,\\n    RIGHT: 39,\\n    SPACEBAR: 32,\\n    TAB: 9,\\n    UP: 38,\\n    ESCAPE: 27\\n  },\\n  selectElement: function(element, collapseMode) {\\n    var range;\\n    if (collapseMode == null) {\\n      collapseMode = \\\"end\\\";\\n    }\\n    if (document.createRange) {\\n      range = document.createRange();\\n      range.selectNodeContents(element);\\n      if (collapseMode !== \\\"none\\\") {\\n        range.collapse(collapseMode === \\\"beginning\\\" ? true : false);\\n      }\\n      return this.activateRange(range);\\n    }\\n  },\\n  activateRange: function(range) {\\n    var selection;\\n    selection = window.getSelection();\\n    selection.removeAllRanges();\\n    selection.addRange(range);\\n    return range;\\n  },\\n  deleteRange: function(range, shouldDeleteContainer) {\\n    var endParent, startParent;\\n    if (shouldDeleteContainer == null) {\\n      shouldDeleteContainer = true;\\n    }\\n    startParent = range.startContainer.parentNode;\\n    endParent = range.endContainer.parentNode;\\n    range.deleteContents();\\n    if (this.isEmpty(startParent) && shouldDeleteContainer) {\\n      $(startParent).remove();\\n    }\\n    if (this.isEmpty(endParent) && shouldDeleteContainer) {\\n      return $(endParent).remove();\\n    }\\n  },\\n  insertHTMLAtRange: function(range, html) {\\n    return this.insertElementAtRange(range, this.createElementsFromString(html)[0]);\\n  },\\n  insertElementAtRange: function(range, node) {\\n    this.deleteRange(range, false);\\n    range.insertNode(node);\\n    return node;\\n  },\\n  getCurrentRange: function() {\\n    var idocument, iframe;\\n    iframe = this.$('iframe.text-editor-frame')[0];\\n    idocument = iframe.contentDocument || iframe.contentWindow.document;\\n    if (idocument.getSelection().rangeCount > 0) {\\n      return idocument.getSelection().getRangeAt(0);\\n    } else {\\n      return null;\\n    }\\n  },\\n  isEmpty: function(element) {\\n    var _ref;\\n    return element.children.length === 0 && element.childNodes.length <= 1 && ((_ref = element.childNodes[0]) != null ? _ref.length : void 0) === 0;\\n  },\\n  createElementsFromString: function(string) {\\n    return $(\\\"<div/>\\\").html(string).contents();\\n  },\\n  convertElementsToString: function(elements) {\\n    return $(\\\"<div/>\\\").html(elements).html();\\n  },\\n  getNonEmptySideNode: function(range, left, deep) {\\n    var index, node, nodeIsEmpty, sideNode, _ref;\\n    if (left == null) {\\n      left = true;\\n    }\\n    nodeIsEmpty = function(node) {\\n      var _ref;\\n      return (node != null ? (_ref = node.nodeValue) != null ? _ref.trim().length : void 0 : void 0) === 0;\\n    };\\n    node = range[left ? 'startContainer' : 'endContainer'];\\n    while (((sideNode = node[left ? 'previousSibling' : 'nextSibling']) === null || nodeIsEmpty(sideNode)) && !$(node).hasClass(this.EDITOR_CLASS)) {\\n      if (nodeIsEmpty(sideNode)) {\\n        node = node[left ? 'previousSibling' : 'nextSibling'];\\n      } else {\\n        node = node.parentNode;\\n      }\\n    }\\n    if (deep) {\\n      while ((sideNode != null ? (_ref = sideNode.children) != null ? _ref.length : void 0 : void 0) > 0) {\\n        index = left ? sideNode.children.length - 1 : 0;\\n        sideNode = sideNode.children[index];\\n      }\\n    }\\n    return sideNode;\\n  },\\n  getCharactersPrecedingCaret: function() {\\n    var precedingChars, range;\\n    range = this.getCurrentRange();\\n    if (range === null) {\\n      return \\\"\\\";\\n    }\\n    range.collapse(true);\\n    range.setStart(range.startContainer, 0);\\n    precedingChars = range.toString();\\n    return precedingChars;\\n  },\\n  deleteCharactersPrecedingCaret: function(length, shouldDeleteContainer) {\\n    var range;\\n    if (shouldDeleteContainer == null) {\\n      shouldDeleteContainer = true;\\n    }\\n    range = this.getCurrentRange();\\n    if (range === null) {\\n      return \\\"\\\";\\n    }\\n    range.collapse(true);\\n    range.setStart(range.startContainer, range.endOffset - length);\\n    return this.deleteRange(range, shouldDeleteContainer);\\n  },\\n  wrapInDiv: function(htmlElements) {\\n    var endSlice, isDiv, newElement, slicedElements, _results;\\n    isDiv = htmlElements.map(function(i, el) {\\n      var _ref;\\n      return ((_ref = el.tagName) != null ? _ref.toLowerCase() : void 0) === \\\"div\\\";\\n    });\\n    isDiv = isDiv.toArray();\\n    if (isDiv.every(function(elem) {\\n      return elem;\\n    })) {\\n      return;\\n    }\\n    if (htmlElements.length === 1 && htmlElements[0].className === \\\"rangySelectionBoundary\\\") {\\n      return;\\n    }\\n    _results = [];\\n    while (htmlElements.length > 0) {\\n      endSlice = isDiv.indexOf(true);\\n      if (endSlice === -1) {\\n        endSlice = isDiv.length;\\n      }\\n      if (endSlice > 0) {\\n        slicedElements = htmlElements.slice(0, endSlice);\\n        newElement = slicedElements.wrapAll('<div/>');\\n        slicedElements.wrapAll('<div/>').parent().replaceWith(newElement);\\n      } else {\\n        endSlice = 1;\\n      }\\n      htmlElements = htmlElements.slice(endSlice);\\n      _results.push(isDiv = isDiv.slice(endSlice));\\n    }\\n    return _results;\\n  }\\n});\\n\\n\\n})();//@ sourceURL=build/src/text_widget/dom_helper.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.TextEditorComponent = Ember.Component.extend({\\n  layoutName: 'text-editor',\\n  selectedFontName: 'Helvetica Neue',\\n  selectedFontSize: '2',\\n  selectedForeColor: 'rgb(0, 0, 0)',\\n  isToolbarVisible: true,\\n  EDITOR_CLASS: 'text-editor',\\n  PLACEHOLDER_TEXT: 'Click to edit',\\n  commands: Ember.A(['bold', 'italic', 'underline', 'fontName', 'fontSize', 'foreColor', 'indent', 'outdent', 'insertOrderedList', 'insertUnorderedList', 'justifyLeft', 'justifyCenter', 'justifyRight', 'strikeThrough']),\\n  iframeHeadContents: Ember.computed(function() {\\n    return \\\"<style>\\\\n  html,\\\\n  body {\\\\n    min-height: 0;\\\\n    min-width: 0;\\\\n    margin: 0;\\\\n    background: transparent;\\\\n    font-family: \\\\\\\"Helvetica Neue\\\\\\\";\\\\n  }\\\\n  .\\\" + this.EDITOR_CLASS + \\\" {\\\\n  min-height: 100%;\\\\n  -webkit-box-sizing: border-box;\\\\n  -moz-box-sizing: border-box;\\\\n  box-sizing: border-box;\\\\n  padding: 5px;\\\\n}\\\\n.\\\" + this.EDITOR_CLASS + \\\":focus {\\\\n    outline: none;\\\\n  }\\\\n  .non-editable {\\\\n    display: inline-block;\\\\n    padding: 0 5px;\\\\n    background-color: #e7e7e7;\\\\n    list-style-type: none;\\\\n    cursor: pointer;\\\\n  }\\\\n  [contentEditable=true]:empty:not(:focus):before {\\\\n    content: attr(data-ph);\\\\n    color: grey;\\\\n    font-style: italic;\\\\n  }\\\\n</style>\\\";\\n  }).property('EDITOR_CLASS'),\\n  iframeBodyContents: Ember.computed(function() {\\n    return '<div class=\\\"' + this.EDITOR_CLASS + '\\\" contenteditable=\\\"true\\\" data-ph=\\\"' + this.PLACEHOLDER_TEXT + '\\\"></div>';\\n  }).property('EDITOR_CLASS', 'PLACEHOLDER_TEXT'),\\n  getEditor: function() {\\n    return this.$('iframe.text-editor-frame').contents().find('.' + this.EDITOR_CLASS);\\n  },\\n  getDocument: function() {\\n    var iframe;\\n    iframe = this.$('iframe.text-editor-frame')[0];\\n    return iframe.contentDocument || iframe.contentWindow.document;\\n  },\\n  inEditor: function(range) {\\n    return this.$(range.endContainer).parents().has(range.startContainer).first().closest('.' + this.EDITOR_CLASS).length > 0;\\n  },\\n  isTargetInEditor: function(event) {\\n    return !Ember.isEmpty($(event.target).closest('.' + this.EDITOR_CLASS));\\n  },\\n  getOrCreateLastElementInEditor: function() {\\n    var editor, iframe;\\n    editor = this.getEditor()[0];\\n    if (editor === undefined) {\\n      iframe = this.$('iframe.text-editor-frame').contents();\\n      iframe.find('body').append(this.get('iframeBodyContents'));\\n      editor = this.getEditor()[0];\\n    }\\n    if (editor.childElementCount === 0) {\\n      this.insertHTMLAtRange(this.selectElement(editor), \\\"<div></div>\\\");\\n    }\\n    return editor.children[editor.children.length - 1];\\n  },\\n  didInsertElement: function() {\\n    var iframe,\\n      _this = this;\\n    this._super();\\n    iframe = this.$('iframe.text-editor-frame').contents();\\n    iframe.find('body').append(this.get('iframeBodyContents'));\\n    iframe.find('head').append(this.get('iframeHeadContents'));\\n    this.getDocument().execCommand('styleWithCSS', true, true);\\n    iframe = this.$('iframe.text-editor-frame')[0];\\n    iframe.contentWindow.onkeyup = function(event) {\\n      return _this.keyUp(event);\\n    };\\n    iframe.contentWindow.onkeydown = function(event) {\\n      return _this.keyDown(event);\\n    };\\n    iframe.contentWindow.onmouseup = function(event) {\\n      return _this.mouseUp(event);\\n    };\\n    iframe.contentWindow.onmousedown = function(event) {\\n      return _this.mouseDown(event);\\n    };\\n    iframe.contentWindow.onclick = function(event) {\\n      return _this.click(event);\\n    };\\n    return this.get('commands').forEach(function(command) {\\n      return _this.set(command, function(arg) {\\n        _this.getDocument().execCommand(command, true, arg);\\n        return _this.queryCommandState();\\n      });\\n    });\\n  },\\n  keyUp: function(event) {\\n    return this.queryCommandState();\\n  },\\n  mouseUp: function(event) {\\n    return this.queryCommandState();\\n  },\\n  queryCommandState: function() {\\n    var fontName, idocument;\\n    idocument = this.getDocument();\\n    this.set('isBold', idocument.queryCommandState('bold'));\\n    this.set('isItalic', idocument.queryCommandState('italic'));\\n    this.set('isUnderline', idocument.queryCommandState('underline'));\\n    this.set('isJustifyLeft', idocument.queryCommandState('justifyLeft'));\\n    this.set('isJustifyCenter', idocument.queryCommandState('justifyCenter'));\\n    this.set('isJustifyRight', idocument.queryCommandState('justifyRight'));\\n    fontName = idocument.queryCommandValue('fontName') || '';\\n    this.set('selectedFontName', fontName.replace(/^'/, '').replace(/'$/, ''));\\n    this.set('selectedFontSize', idocument.queryCommandValue('fontSize'));\\n    return this.set('selectedForeColor', idocument.queryCommandValue('foreColor'));\\n  },\\n  click: function(event) {\\n    return Ember.K;\\n  },\\n  keyDown: function(event) {\\n    return Ember.K;\\n  },\\n  mouseDown: function(event) {\\n    return Ember.K;\\n  }\\n});\\n\\n\\n})();//@ sourceURL=build/src/text_widget/text_editor.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.BaseNonEditablePill = Ember.Controller.extend(Ember.Widgets.DomHelper, {\\n  textEditor: null,\\n  params: Ember.computed(function() {\\n    return {};\\n  }),\\n  name: null,\\n  result: function() {\\n    return Ember.K;\\n  },\\n  configure: function() {\\n    return this.send('modalConfirm');\\n  },\\n  actions: {\\n    modalConfirm: function() {\\n      if (this.get('params.pillId')) {\\n        return this.get('textEditor').updatePill(this);\\n      } else {\\n        this.set('params.pillId', this.get('textEditor').getNewPillId());\\n        this.set('params.type', \\\"\\\" + this.constructor);\\n        return this.get('textEditor').insertPill(this);\\n      }\\n    },\\n    modalCancel: function() {\\n      return Ember.K;\\n    }\\n  },\\n  updateContent: function() {\\n    return $(this.get('pillElement')).text(this.result());\\n  },\\n  render: function() {\\n    var key, span, value, _ref;\\n    span = this.createElementsFromString(\\\"<span></span>\\\");\\n    span.addClass('non-editable');\\n    span.attr({\\n      'title': this.get('name')\\n    });\\n    _ref = this.get('params');\\n    for (key in _ref) {\\n      value = _ref[key];\\n      span.attr('data-' + Ember.String.dasherize(key), value);\\n    }\\n    this.set('pillElement', span);\\n    this.updateContent(span);\\n    return span[0];\\n  }\\n});\\n\\nEmber.Widgets.NonEditableTextPill = Ember.Widgets.BaseNonEditablePill.extend({\\n  name: \\\"Custom Text\\\",\\n  text: Ember.computed.alias('params.text'),\\n  result: function() {\\n    return this.get('params.text');\\n  },\\n  configure: function() {\\n    var modal;\\n    return modal = Ember.Widgets.ModalComponent.popup({\\n      content: this,\\n      targetObject: this,\\n      confirm: \\\"modalConfirm\\\",\\n      cancel: \\\"modalCancel\\\",\\n      contentViewClass: Ember.View.extend({\\n        templateName: 'non-editable-text-pill-configuration'\\n      }),\\n      headerText: this.get('name'),\\n      confirmText: \\\"Insert\\\"\\n    });\\n  }\\n});\\n\\nEmber.Widgets.TodaysDatePill = Ember.Widgets.BaseNonEditablePill.extend({\\n  name: \\\"Today's Date\\\",\\n  result: function() {\\n    return Date();\\n  }\\n});\\n\\nEmber.Widgets.PillSelect = Ember.Widgets.SelectComponent.extend({\\n  templateName: 'text-editor-pill-menu',\\n  isSelect: true,\\n  showButton: true\\n});\\n\\nEmber.Widgets.PillInsertMixin = Ember.Mixin.create({\\n  pillOptions: Ember.A([Ember.Widgets.TodaysDatePill, Ember.Widgets.NonEditableTextPill]),\\n  _pillOptions: Ember.computed(function() {\\n    var _this = this;\\n    return Ember.A(this.getWithDefault('pillOptions', []).map(function(option) {\\n      return {\\n        label: option.create().name,\\n        value: option\\n      };\\n    }));\\n  }).property('pillOptions'),\\n  actions: {\\n    insertPill: function(pillOption) {\\n      var selectedPillOption;\\n      selectedPillOption = pillOption.value.create({\\n        textEditor: this.get('textEditor') || this\\n      });\\n      selectedPillOption.configure();\\n      return this.set('selectedPillOption', null);\\n    }\\n  }\\n});\\n\\n\\n})();//@ sourceURL=build/src/text_widget/non_editable_pill.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.TextEditorConfigComponent = Ember.Component.extend({\\n  layoutName: 'text-editor-config',\\n  classNames: Ember.A(['ember-text-editor-toolbar']),\\n  selectedFontName: 'Helvetica Neue',\\n  selectedFontSize: '2',\\n  selectedForeColor: 'rgb(0, 0, 0)',\\n  textEditor: null,\\n  fontNames: Ember.A(['Arial', 'Calibri', 'Cambria', 'Consolas', 'Corsiva', 'Courier New', 'Georgia', 'Helvetica Neue', 'Helvetica', 'Sans-Serif', 'Serif', 'Syncopate', 'Times New Roman', 'Trebuchet MS', 'Verdana']),\\n  fontSizes: Ember.A([\\n    {\\n      size: '1',\\n      name: '8'\\n    }, {\\n      size: '2',\\n      name: '10'\\n    }, {\\n      size: '3',\\n      name: '12'\\n    }, {\\n      size: '4',\\n      name: '14'\\n    }, {\\n      size: '5',\\n      name: '18'\\n    }, {\\n      size: '6',\\n      name: '24'\\n    }, {\\n      size: '7',\\n      name: '36'\\n    }\\n  ]),\\n  fontChooserItemViewClass: Ember.Widgets.SelectOptionView.extend({\\n    templateName: 'font-chooser-item',\\n    style: Ember.computed(function() {\\n      return \\\"font-family:\\\" + (this.get('label')) + \\\";\\\";\\n    }).property('label')\\n  }),\\n  actions: {\\n    applyFontSize: function(options) {\\n      this.get('textEditor').fontSize(options.size);\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    applyFontName: function(font) {\\n      this.get('textEditor').fontName(font);\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    applyForeColor: function(color) {\\n      this.get('textEditor').foreColor(color);\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    toggleBold: function() {\\n      this.get('textEditor').bold();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    toggleItalic: function() {\\n      this.get('textEditor').italic();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    toggleUnderline: function() {\\n      this.get('textEditor').underline();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    justifyLeft: function() {\\n      this.get('textEditor').justifyLeft();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    justifyCenter: function() {\\n      this.get('textEditor').justifyCenter();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    justifyRight: function() {\\n      this.get('textEditor').justifyRight();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    insertOrderedList: function() {\\n      this.get('textEditor').insertOrderedList();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    insertUnorderedList: function() {\\n      this.get('textEditor').insertUnorderedList();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    outdent: function() {\\n      this.get('textEditor').outdent();\\n      return this.get('textEditor').getEditor().focus();\\n    },\\n    indent: function() {\\n      this.get('textEditor').indent();\\n      return this.get('textEditor').getEditor().focus();\\n    }\\n  }\\n});\\n\\nEmber.Widgets.TextEditorWithNonEditableConfigComponent = Ember.Widgets.TextEditorConfigComponent.extend(Ember.Widgets.PillInsertMixin, {\\n  templateName: 'text-editor-with-non-editable-config'\\n});\\n\\n\\n})();//@ sourceURL=build/src/text_widget/text_editor_config.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.TextEditorWithNonEditableComponent = Ember.Widgets.TextEditorComponent.extend(Ember.Widgets.DomHelper, Ember.Widgets.PillInsertMixin, {\\n  layoutName: 'text-editor-with-non-editable',\\n  pillOptions: Ember.A([Ember.Widgets.TodaysDatePill, Ember.Widgets.NonEditableTextPill]),\\n  getInsertSelectController: function() {\\n    return this.get('pillChooserInLine');\\n  },\\n  INVISIBLE_CHAR: '\\\\uFEFF',\\n  INSERT_PILL_CHAR: '=',\\n  insertPillRegex: Ember.computed(function() {\\n    return new RegExp(this.INSERT_PILL_CHAR + '[A-Za-z0-9_\\\\+\\\\-]*$', 'gi');\\n  }).property('INSERT_PILL_CHAR'),\\n  pillId: 0,\\n  mouseDownTarget: null,\\n  pillHideSearchBox: false,\\n  showConfigPopover: false,\\n  selectedPillOption: null,\\n  _getPillFromElement: function(pillElement) {\\n    var data, key, params, value;\\n    data = $(pillElement).data();\\n    if (!data.type) {\\n      return;\\n    }\\n    params = {};\\n    for (key in data) {\\n      value = data[key];\\n      params[key] = value;\\n    }\\n    return Ember.get(data.type).create({\\n      'textEditor': this,\\n      'params': params\\n    });\\n  },\\n  _getElementFromPill: function(pill) {\\n    var pillId;\\n    pillId = pill.get('params.pillId');\\n    return this.getEditor().find('.non-editable[data-pill-id=\\\"' + pillId + '\\\"]');\\n  },\\n  serialize: function() {\\n    var div, raw_html;\\n    raw_html = this.getEditor().html();\\n    div = $('<div/>').html(raw_html);\\n    $('.non-editable', div).empty();\\n    return div.html();\\n  },\\n  updateNonEditablePillContent: function() {\\n    var pill, pillElement, pillElements, _i, _len;\\n    pillElements = this.getEditor().find('.non-editable[data-pill-id]');\\n    for (_i = 0, _len = pillElements.length; _i < _len; _i++) {\\n      pillElement = pillElements[_i];\\n      pill = this._getPillFromElement(pillElement);\\n      if (!pill) {\\n        return;\\n      }\\n      $(pillElement).text(pill.result());\\n    }\\n  },\\n  _getCurrentCaretContainer: function(range) {\\n    return $(range != null ? range.startContainer.parentElement : void 0).closest('.non-editable-caret');\\n  },\\n  getNewPillId: function() {\\n    return this.incrementProperty('pillId');\\n  },\\n  updatePill: function(pill) {\\n    var pillElement;\\n    pillElement = this._getElementFromPill(pill);\\n    return $(pillElement).text(pill.result());\\n  },\\n  insertPill: function(pill) {\\n    var caretContainer, existingNonEditable, factor, matches, precedingCharacters, range;\\n    precedingCharacters = this.getCharactersPrecedingCaret(this.getEditor()[0]);\\n    matches = precedingCharacters.match(this.get('insertPillRegex'));\\n    if (matches) {\\n      this.deleteCharactersPrecedingCaret(matches[0].length, false);\\n    }\\n    range = this.getCurrentRange();\\n    if (!range || !this.inEditor(range)) {\\n      if (!(range = this.getCurrentRange()) || !this.inEditor(range)) {\\n        this.selectElement(this.getOrCreateLastElementInEditor());\\n      }\\n      range = this.getCurrentRange();\\n    }\\n    existingNonEditable = this._getNonEditableParent(range.startContainer) || this._getNonEditableParent(range.endContainer);\\n    if (existingNonEditable != null) {\\n      existingNonEditable.remove();\\n    }\\n    factor = this.insertElementAtRange(range, pill.render());\\n    caretContainer = this._insertCaretContainer(factor, false);\\n    this.selectElement(caretContainer);\\n    this._removeCaretContainers();\\n    this._moveSelection();\\n    this._wrapText();\\n    this.getEditor().focus();\\n    return this.selectElement(factor.nextSibling);\\n  },\\n  _isNonEditable: function(node) {\\n    return !Ember.isEmpty($(node).closest('.non-editable'));\\n  },\\n  _getNonEditableOnLeft: function(deep) {\\n    var currentRange, leftNode, _ref;\\n    if (deep == null) {\\n      deep = false;\\n    }\\n    if (!((currentRange = this.getCurrentRange()) && (leftNode = this.getNonEmptySideNode(currentRange, true, deep)))) {\\n      return;\\n    }\\n    if (currentRange.startOffset === 0 && this._isNonEditable(leftNode)) {\\n      return leftNode;\\n    } else if (currentRange.startOffset === 1 && this._isNonEditable(leftNode) && ((_ref = currentRange.startContainer.nodeValue) != null ? _ref.charAt(0) : void 0) === this.INVISIBLE_CHAR) {\\n      return leftNode;\\n    }\\n  },\\n  _getNonEditableOnRight: function(deep) {\\n    var currentRange, endContainer, rightNode;\\n    if (deep == null) {\\n      deep = false;\\n    }\\n    if (!((currentRange = this.getCurrentRange()) && (rightNode = this.getNonEmptySideNode(currentRange, false, deep)))) {\\n      return;\\n    }\\n    endContainer = currentRange.endContainer;\\n    if (currentRange.endOffset === endContainer.length && this._isNonEditable(rightNode)) {\\n      return rightNode;\\n    } else if (currentRange.endOffset === endContainer.length - 1 && endContainer.nodeValue.charAt(endContainer.nodeValue.length - 1) === this.INVISIBLE_CHAR && this._isNonEditable(rightNode)) {\\n      return rightNode;\\n    }\\n  },\\n  _isRangeWithinNonEditable: function(range) {\\n    var $endNode, $startNode;\\n    $startNode = $(range.startContainer.parentNode);\\n    $endNode = $(range.endContainer.parentNode);\\n    return $startNode.hasClass('non-editable') && $endNode.hasClass('non-editable') && $startNode[0] === $endNode[0];\\n  },\\n  _getNonEditableParent: function(node) {\\n    while (node) {\\n      if ($(node).hasClass('non-editable')) {\\n        return node;\\n      }\\n      node = node.parentElement;\\n    }\\n  },\\n  _insertCaretContainer: function(target, before) {\\n    var caretContainer;\\n    caretContainer = this.createElementsFromString('<span class=\\\"non-editable-caret\\\">' + this.INVISIBLE_CHAR + '</span>')[0];\\n    if (before) {\\n      $(caretContainer).insertBefore(target);\\n    } else {\\n      $(caretContainer).insertAfter(target);\\n    }\\n    return caretContainer;\\n  },\\n  _removeCaretContainer: function(caretContainer) {\\n    var child, contents, savedSelection;\\n    if (caretContainer.parentElement.innerHTML === '<span class=\\\"non-editable-caret\\\">' + this.INVISIBLE_CHAR + '</span>') {\\n      return $(caretContainer.parentElement).html('<br>');\\n    }\\n    if ((child = caretContainer.childNodes[0]) && child.nodeValue.charAt(0) === this.INVISIBLE_CHAR) {\\n      child = child.deleteData(0, 1);\\n    }\\n    savedSelection = rangy.saveSelection(this.$('iframe.text-editor-frame')[0].contentWindow);\\n    contents = $(caretContainer).contents();\\n    $(caretContainer).replaceWith(contents);\\n    return rangy.restoreSelection(savedSelection);\\n  },\\n  _removeCaretContainers: function() {\\n    var caretContainer, child, contents, currentCaretContainer, range, _ref, _results;\\n    range = this.getCurrentRange();\\n    currentCaretContainer = this._getCurrentCaretContainer(range);\\n    _results = [];\\n    while ((caretContainer = this.getEditor().find('.non-editable-caret').not(currentCaretContainer)[0])) {\\n      if (caretContainer.parentElement.innerHTML === '<span class=\\\"non-editable-caret\\\">' + this.INVISIBLE_CHAR + '</span>') {\\n        $(caretContainer.parentElement).html('<br>');\\n        continue;\\n      }\\n      child = caretContainer.childNodes[0];\\n      if (child && ((_ref = child.nodeValue) != null ? _ref.charAt(0) : void 0) === this.INVISIBLE_CHAR) {\\n        child = child.deleteData(0, 1);\\n      }\\n      contents = $(caretContainer).contents();\\n      $(caretContainer).replaceWith(contents);\\n      _results.push(caretContainer.childNodes[caretContainer.childNodes.length - 1]);\\n    }\\n    return _results;\\n  },\\n  _moveSelection: function() {\\n    var caretContainer, collapse, currentRange, element, hasSideContent, isCollapsed, nonEditableEnd, nonEditableStart, parentCaret, selection;\\n    hasSideContent = function(range, element, left) {\\n      var container, len, offset;\\n      container = range.startContainer;\\n      offset = range.startOffset;\\n      if (container.nodeType === 3) {\\n        len = container.nodeValue.length;\\n        if ((offset > 0 && offset < len) || (left ? offset === len : offset === 0)) {\\n          return;\\n        }\\n      }\\n      return element;\\n    };\\n    this._removeCaretContainers();\\n    if (!(currentRange = this.getCurrentRange())) {\\n      return;\\n    }\\n    isCollapsed = currentRange.collapsed;\\n    nonEditableStart = this._getNonEditableParent(currentRange.startContainer);\\n    nonEditableEnd = this._getNonEditableParent(currentRange.endContainer);\\n    parentCaret = this._getCurrentCaretContainer(currentRange);\\n    if (nonEditableStart || nonEditableEnd) {\\n      if (currentRange.collapsed) {\\n        if ((element = hasSideContent(currentRange, nonEditableStart || nonEditableEnd, true))) {\\n          caretContainer = this._insertCaretContainer(element, true);\\n        } else if ((element = hasSideContent(currentRange, nonEditableStart || nonEditableEnd, false))) {\\n          caretContainer = this._insertCaretContainer(element, false);\\n        }\\n        if (caretContainer) {\\n          collapse = $(caretContainer).is(\\\":first-child\\\") ? \\\"beginning\\\" : \\\"end\\\";\\n          this.selectElement(caretContainer, collapse);\\n          return;\\n        }\\n      }\\n      if (nonEditableStart) {\\n        currentRange.setStartBefore(nonEditableStart);\\n      }\\n      if (nonEditableEnd) {\\n        currentRange.setEndAfter(nonEditableEnd);\\n      }\\n      selection = window.getSelection();\\n      selection.removeAllRanges();\\n      return selection.addRange(currentRange);\\n    } else if ((parentCaret != null ? parentCaret.length : void 0) > 0 && !this._isNonEditable(this.getNonEmptySideNode(currentRange, true)) && !this._isNonEditable(this.getNonEmptySideNode(currentRange, false))) {\\n      return this._removeCaretContainer(parentCaret[0]);\\n    }\\n  },\\n  _showPillConfig: function(query) {\\n    this.set('showConfigPopover', true);\\n    this.set('pillHideSearchBox', true);\\n    return this.set('query', query);\\n  },\\n  _hidePillConfig: function() {\\n    this.set('showConfigPopover', false);\\n    this.set('pillHideSearchBox', false);\\n    return this.set('query', null);\\n  },\\n  _handlePillConfig: function() {\\n    var matches, precedingCharacters, query;\\n    precedingCharacters = this.getCharactersPrecedingCaret(this.getEditor()[0]);\\n    matches = precedingCharacters.match(this.get('insertPillRegex'));\\n    if (matches) {\\n      query = matches[0].split(\\\" \\\").reverse()[0].slice(1);\\n      return this._showPillConfig(query);\\n    } else {\\n      return this._hidePillConfig();\\n    }\\n  },\\n  keyDown: function(event) {\\n    var caret, endElement, handleLeftNodeCase, handleRightNodeCase, insertSelect, isCharacter, isCollapsed, keyCode, leftNode, leftNodeDeep, nonEditableParent, range, rightNode, rightNodeDeep, startElement,\\n      _this = this;\\n    if (!this.isTargetInEditor(event)) {\\n      return;\\n    }\\n    handleLeftNodeCase = function() {\\n      if (leftNode) {\\n        if (keyCode === _this.KEY_CODES.LEFT && isCollapsed) {\\n          _this.selectElement(leftNode, \\\"none\\\");\\n          return event.preventDefault();\\n        } else if (keyCode === _this.KEY_CODES.BACKSPACE) {\\n          return _this.selectElement(leftNode, \\\"none\\\");\\n        }\\n      } else if (leftNodeDeep && keyCode === _this.KEY_CODES.BACKSPACE) {\\n        return _this._insertCaretContainer(leftNodeDeep, false);\\n      }\\n    };\\n    handleRightNodeCase = function() {\\n      if (rightNode) {\\n        if (keyCode === _this.KEY_CODES.DELETE) {\\n          return _this.selectElement(rightNode, \\\"none\\\");\\n        } else if (keyCode === _this.KEY_CODES.RIGHT && isCollapsed) {\\n          _this.selectElement(rightNode, \\\"none\\\");\\n          return event.preventDefault();\\n        }\\n      } else if (rightNodeDeep && keyCode === _this.KEY_CODES.DELETE && !rightNode) {\\n        return _this._insertCaretContainer(rightNodeDeep, true);\\n      }\\n    };\\n    isCharacter = function(keyCode) {\\n      return keyCode >= 48 && keyCode <= 90 || keyCode >= 96 && keyCode <= 111 || keyCode >= 186 && keyCode <= 222;\\n    };\\n    keyCode = event.keyCode;\\n    if (this.showConfigPopover) {\\n      insertSelect = this.getInsertSelectController();\\n      if (keyCode === this.KEY_CODES.DOWN) {\\n        return insertSelect.downArrowPressed(event);\\n      } else if (keyCode === this.KEY_CODES.UP) {\\n        return insertSelect.upArrowPressed(event);\\n      } else if ((keyCode === this.KEY_CODES.ENTER || keyCode === this.KEY_CODES.TAB) && insertSelect.get('preparedContent').length > 0) {\\n        return insertSelect.enterPressed(event);\\n      } else if (keyCode === this.KEY_CODES.ESCAPE) {\\n        return insertSelect.escapePressed(event);\\n      }\\n    }\\n    this._moveSelection();\\n    range = this.getCurrentRange();\\n    isCollapsed = range.collapsed;\\n    startElement = range.startContainer;\\n    endElement = range.endContainer;\\n    nonEditableParent = this._isNonEditable(startElement) || this._isNonEditable(endElement);\\n    leftNode = this._getNonEditableOnLeft();\\n    rightNode = this._getNonEditableOnRight();\\n    leftNodeDeep = this._getNonEditableOnLeft(true);\\n    rightNodeDeep = this._getNonEditableOnRight(true);\\n    if ((event.metaKey || event.ctrlKey) && (keyCode !== this.KEY_CODES.DELETE && keyCode !== this.KEY_CODES.BACKSPACE)) {\\n      return;\\n    }\\n    if (isCharacter(keyCode) || keyCode === this.KEY_CODES.BACKSPACE || keyCode === this.KEY_CODES.DELETE) {\\n      if ((leftNode || rightNode) && !isCollapsed) {\\n        caret = this._insertCaretContainer(leftNode || rightNode, leftNode ? false : true);\\n        this.deleteRange(range);\\n        this.selectElement(caret);\\n      } else if (nonEditableParent) {\\n        this.deleteRange(range);\\n      }\\n      if ((keyCode === this.KEY_CODES.BACKSPACE || keyCode === this.KEY_CODES.DELETE) && !isCollapsed && nonEditableParent) {\\n        return event.preventDefault();\\n      }\\n    }\\n    handleLeftNodeCase();\\n    return handleRightNodeCase();\\n  },\\n  _wrapText: function() {\\n    var $editor, contents, savedSelection;\\n    $editor = this.getEditor();\\n    savedSelection = rangy.saveSelection(this.$('iframe.text-editor-frame')[0].contentWindow);\\n    contents = $editor.contents();\\n    this.wrapInDiv(contents);\\n    return rangy.restoreSelection(savedSelection);\\n  },\\n  keyUp: function(event) {\\n    if (!this.isTargetInEditor(event)) {\\n      return;\\n    }\\n    this._moveSelection();\\n    this._wrapText();\\n    if (event.keyCode !== this.KEY_CODES.ESCAPE) {\\n      this._handlePillConfig();\\n      return this._super();\\n    }\\n  },\\n  mouseDown: function(event) {\\n    if (!this.isTargetInEditor(event)) {\\n      return;\\n    }\\n    this.mouseDownTarget = event.target;\\n    return this._moveSelection();\\n  },\\n  mouseUp: function(event) {\\n    var currentRange;\\n    if (!this.isTargetInEditor(event)) {\\n      return;\\n    }\\n    this._moveSelection();\\n    this._wrapText();\\n    currentRange = this.getCurrentRange();\\n    if (this._isNonEditable(event.target) && event.target === this.mouseDownTarget && this._isRangeWithinNonEditable(currentRange)) {\\n      this.selectElement(event.target, \\\"none\\\");\\n      event.preventDefault();\\n    }\\n    return this._super();\\n  },\\n  click: function(event) {\\n    return Ember.K;\\n  }\\n});\\n\\n\\n})();//@ sourceURL=build/src/text_widget/text_editor_with_non_editable.js\")\n\neval(\"(function() {\\n\\nvar colorNameToHexMap, colorToHex, rgbToHex;\\n\\nrgbToHex = function(r, g, b) {\\n  return \\\"#\\\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\\n};\\n\\ncolorNameToHexMap = {\\n  aliceblue: \\\"#f0f8ff\\\",\\n  antiquewhite: \\\"#faebd7\\\",\\n  aqua: \\\"#00ffff\\\",\\n  aquamarine: \\\"#7fffd4\\\",\\n  azure: \\\"#f0ffff\\\",\\n  beige: \\\"#f5f5dc\\\",\\n  bisque: \\\"#ffe4c4\\\",\\n  black: \\\"#000000\\\",\\n  blanchedalmond: \\\"#ffebcd\\\",\\n  blue: \\\"#0000ff\\\",\\n  blueviolet: \\\"#8a2be2\\\",\\n  brown: \\\"#a52a2a\\\",\\n  burlywood: \\\"#deb887\\\",\\n  cadetblue: \\\"#5f9ea0\\\",\\n  chartreuse: \\\"#7fff00\\\",\\n  chocolate: \\\"#d2691e\\\",\\n  coral: \\\"#ff7f50\\\",\\n  cornflowerblue: \\\"#6495ed\\\",\\n  cornsilk: \\\"#fff8dc\\\",\\n  crimson: \\\"#dc143c\\\",\\n  cyan: \\\"#00ffff\\\",\\n  darkblue: \\\"#00008b\\\",\\n  darkcyan: \\\"#008b8b\\\",\\n  darkgoldenrod: \\\"#b8860b\\\",\\n  darkgray: \\\"#a9a9a9\\\",\\n  darkgreen: \\\"#006400\\\",\\n  darkkhaki: \\\"#bdb76b\\\",\\n  darkmagenta: \\\"#8b008b\\\",\\n  darkolivegreen: \\\"#556b2f\\\",\\n  darkorange: \\\"#ff8c00\\\",\\n  darkorchid: \\\"#9932cc\\\",\\n  darkred: \\\"#8b0000\\\",\\n  darksalmon: \\\"#e9967a\\\",\\n  darkseagreen: \\\"#8fbc8f\\\",\\n  darkslateblue: \\\"#483d8b\\\",\\n  darkslategray: \\\"#2f4f4f\\\",\\n  darkturquoise: \\\"#00ced1\\\",\\n  darkviolet: \\\"#9400d3\\\",\\n  deeppink: \\\"#ff1493\\\",\\n  deepskyblue: \\\"#00bfff\\\",\\n  dimgray: \\\"#696969\\\",\\n  dodgerblue: \\\"#1e90ff\\\",\\n  firebrick: \\\"#b22222\\\",\\n  floralwhite: \\\"#fffaf0\\\",\\n  forestgreen: \\\"#228b22\\\",\\n  fuchsia: \\\"#ff00ff\\\",\\n  gainsboro: \\\"#dcdcdc\\\",\\n  ghostwhite: \\\"#f8f8ff\\\",\\n  gold: \\\"#ffd700\\\",\\n  goldenrod: \\\"#daa520\\\",\\n  gray: \\\"#808080\\\",\\n  green: \\\"#008000\\\",\\n  greenyellow: \\\"#adff2f\\\",\\n  honeydew: \\\"#f0fff0\\\",\\n  hotpink: \\\"#ff69b4\\\",\\n  \\\"indianred \\\": \\\"#cd5c5c\\\",\\n  indigo: \\\"#4b0082\\\",\\n  ivory: \\\"#fffff0\\\",\\n  khaki: \\\"#f0e68c\\\",\\n  lavender: \\\"#e6e6fa\\\",\\n  lavenderblush: \\\"#fff0f5\\\",\\n  lawngreen: \\\"#7cfc00\\\",\\n  lemonchiffon: \\\"#fffacd\\\",\\n  lightblue: \\\"#add8e6\\\",\\n  lightcoral: \\\"#f08080\\\",\\n  lightcyan: \\\"#e0ffff\\\",\\n  lightgoldenrodyellow: \\\"#fafad2\\\",\\n  lightgrey: \\\"#d3d3d3\\\",\\n  lightgreen: \\\"#90ee90\\\",\\n  lightpink: \\\"#ffb6c1\\\",\\n  lightsalmon: \\\"#ffa07a\\\",\\n  lightseagreen: \\\"#20b2aa\\\",\\n  lightskyblue: \\\"#87cefa\\\",\\n  lightslategray: \\\"#778899\\\",\\n  lightsteelblue: \\\"#b0c4de\\\",\\n  lightyellow: \\\"#ffffe0\\\",\\n  lime: \\\"#00ff00\\\",\\n  limegreen: \\\"#32cd32\\\",\\n  linen: \\\"#faf0e6\\\",\\n  magenta: \\\"#ff00ff\\\",\\n  maroon: \\\"#800000\\\",\\n  mediumaquamarine: \\\"#66cdaa\\\",\\n  mediumblue: \\\"#0000cd\\\",\\n  mediumorchid: \\\"#ba55d3\\\",\\n  mediumpurple: \\\"#9370d8\\\",\\n  mediumseagreen: \\\"#3cb371\\\",\\n  mediumslateblue: \\\"#7b68ee\\\",\\n  mediumspringgreen: \\\"#00fa9a\\\",\\n  mediumturquoise: \\\"#48d1cc\\\",\\n  mediumvioletred: \\\"#c71585\\\",\\n  midnightblue: \\\"#191970\\\",\\n  mintcream: \\\"#f5fffa\\\",\\n  mistyrose: \\\"#ffe4e1\\\",\\n  moccasin: \\\"#ffe4b5\\\",\\n  navajowhite: \\\"#ffdead\\\",\\n  navy: \\\"#000080\\\",\\n  oldlace: \\\"#fdf5e6\\\",\\n  olive: \\\"#808000\\\",\\n  olivedrab: \\\"#6b8e23\\\",\\n  orange: \\\"#ffa500\\\",\\n  orangered: \\\"#ff4500\\\",\\n  orchid: \\\"#da70d6\\\",\\n  palegoldenrod: \\\"#eee8aa\\\",\\n  palegreen: \\\"#98fb98\\\",\\n  paleturquoise: \\\"#afeeee\\\",\\n  palevioletred: \\\"#d87093\\\",\\n  papayawhip: \\\"#ffefd5\\\",\\n  peachpuff: \\\"#ffdab9\\\",\\n  peru: \\\"#cd853f\\\",\\n  pink: \\\"#ffc0cb\\\",\\n  plum: \\\"#dda0dd\\\",\\n  powderblue: \\\"#b0e0e6\\\",\\n  purple: \\\"#800080\\\",\\n  red: \\\"#ff0000\\\",\\n  rosybrown: \\\"#bc8f8f\\\",\\n  royalblue: \\\"#4169e1\\\",\\n  saddlebrown: \\\"#8b4513\\\",\\n  salmon: \\\"#fa8072\\\",\\n  sandybrown: \\\"#f4a460\\\",\\n  seagreen: \\\"#2e8b57\\\",\\n  seashell: \\\"#fff5ee\\\",\\n  sienna: \\\"#a0522d\\\",\\n  silver: \\\"#c0c0c0\\\",\\n  skyblue: \\\"#87ceeb\\\",\\n  slateblue: \\\"#6a5acd\\\",\\n  slategray: \\\"#708090\\\",\\n  snow: \\\"#fffafa\\\",\\n  springgreen: \\\"#00ff7f\\\",\\n  steelblue: \\\"#4682b4\\\",\\n  tan: \\\"#d2b48c\\\",\\n  teal: \\\"#008080\\\",\\n  thistle: \\\"#d8bfd8\\\",\\n  tomato: \\\"#ff6347\\\",\\n  turquoise: \\\"#40e0d0\\\",\\n  violet: \\\"#ee82ee\\\",\\n  wheat: \\\"#f5deb3\\\",\\n  white: \\\"#ffffff\\\",\\n  whitesmoke: \\\"#f5f5f5\\\",\\n  yellow: \\\"#ffff00\\\",\\n  yellowgreen: \\\"#9acd32\\\"\\n};\\n\\ncolorToHex = function(color) {\\n  var blue, digits, green, opacity, red;\\n  if (!color) {\\n    return color;\\n  }\\n  if (color.substr(0, 1) === \\\"#\\\" || color === \\\"transparent\\\") {\\n    return color.toLowerCase();\\n  }\\n  if (color in colorNameToHexMap) {\\n    return colorNameToHexMap[color.toLowerCase()];\\n  }\\n  digits = /(.*?)rgb(a)?\\\\((\\\\d+), (\\\\d+), (\\\\d+)(, (\\\\d+))?\\\\)/.exec(color);\\n  if ((digits != null ? digits.length : void 0) === 8) {\\n    red = parseInt(digits[3]);\\n    green = parseInt(digits[4]);\\n    blue = parseInt(digits[5]);\\n    opacity = parseInt(digits[7]);\\n    if (opacity === 0) {\\n      return \\\"transparent\\\";\\n    }\\n    return rgbToHex(red, green, blue);\\n  }\\n  return void 0;\\n};\\n\\nEmber.Widgets.ColorPicker = Ember.Component.extend({\\n  layoutName: 'color-picker',\\n  classNames: ['color-picker-button'],\\n  colorPickerPlacement: 'right',\\n  dropdownClass: null,\\n  INITIAL_COLOR: '#0074D9',\\n  selectedColor: '#0074D9',\\n  selectedColorRGB: Ember.computed(function() {\\n    return colorToHex(this.get('selectedColor'));\\n  }).property('selectedColor'),\\n  customColor: '',\\n  isColorTransparent: Ember.computed.equal('selectedColorRGB', 'transparent'),\\n  colorRows: Ember.A([Ember.A(['#000000', '#111111', '#434343', '#666666', '#999999', '#AAAAAA', '#B7B7B7', '#CCCCCC', '#D9D9D9', '#EFEFEF', '#F3F3F3', '#FFFFFF']), Ember.A(['#001F3F', '#0074D9', '#7FDBFF', '#39CCCC', '#2ECC40', '#01FF70', '#FFDC00', '#FF851B', '#FF4136', '#85144B', '#B10DC9', 'transparent'])]),\\n  setCustomColor: Ember.observer(function() {\\n    if (this.get('isCustomColorValid') === true) {\\n      return this.set('selectedColor', this.get('customColor'));\\n    }\\n  }, 'customColor', 'isCustomColorValid'),\\n  isCustomColorValid: Ember.computed(function() {\\n    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(\\\"\\\" + (this.get('customColor')));\\n  }).property('customColor'),\\n  customColorCSS: Ember.computed(function() {\\n    return \\\"background-color: \\\" + (this.get('customColor'));\\n  }).property('customColor'),\\n  actions: {\\n    setColor: function(color) {\\n      this.set('customColor', '');\\n      return this.set('selectedColor', color);\\n    }\\n  },\\n  userDidSelect: function(selection) {\\n    return this.sendAction('userSelected', selection);\\n  }\\n});\\n\\nEmber.Widgets.ColorPickerCell = Ember.View.extend(Ember.Widgets.StyleBindingsMixin, {\\n  templateName: 'color-picker-cell',\\n  classNames: ['pull-left', 'color-picker-cell'],\\n  classNameBindings: Ember.A(['isActive:active:inactive']),\\n  styleBindings: 'color:background-color',\\n  color: null,\\n  isActive: Ember.computed(function() {\\n    return colorToHex(this.get('controller.selectedColor')) === colorToHex(this.get('color'));\\n  }).property('controller.selectedColor', 'color'),\\n  click: function(event) {\\n    this.get('controller').send('setColor', this.get('color'));\\n    return this.get('controller').userDidSelect(this.get('color'));\\n  }\\n});\\n\\n\\n})();//@ sourceURL=build/src/color_picker.js\")\n\neval(\"(function() {\\n\\n\\nEmber.Widgets.TypeaheadComponent = Ember.Widgets.SelectComponent.extend({\\n  layoutName: 'typeahead',\\n  searchFieldClass: 'form-control',\\n  searchView: Ember.TextField.extend({\\n    \\\"class\\\": 'ember-select-input',\\n    valueBinding: 'parentView.query',\\n    focusIn: function(event) {\\n      return this.set('parentView.showDropdown', true);\\n    }\\n  }),\\n  userDidSelect: function(selection) {\\n    this._super;\\n    return this.set('query', this.get('selection'));\\n  }\\n});\\n\\nEmber.Handlebars.helper('typeahead-component', Ember.Widgets.TypeaheadComponent);\\n\\n\\n})();//@ sourceURL=build/src/typeahead.js\")\n\n})();//@ sourceURL=dist/js/ember-widgets.js")

eval("(function() {\n\nEmber.TEMPLATES[\"_footer\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Overview &amp; Getting Started\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"API &amp; Documentation\");\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"Accordion\");\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  data.buffer.push(\"Carousel\");\n  }\n\nfunction program9(depth0,data) {\n  \n  \n  data.buffer.push(\"Modal\");\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  data.buffer.push(\"Popover\");\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  data.buffer.push(\"Select\");\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  data.buffer.push(\"Text Editor\");\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  data.buffer.push(\"Color Picker\");\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  data.buffer.push(\"Radio Button\");\n  }\n\nfunction program21(depth0,data) {\n  \n  \n  data.buffer.push(\"License\");\n  }\n\n  data.buffer.push(\"\\n<div class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <ul class=\\\"list-unstyled\\\">\\n          <li><h6>Ember Widgets</h6></li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.overview\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.overview\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.documentation\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.documentation\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <ul class=\\\"list-unstyled\\\">\\n          <li><h6>Widgets</h6></li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.accordion\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.accordion\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.carousel\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.carousel\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.modal\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.modal\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.popover\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.popover\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.select\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.select\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.textEditor\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.textEditor\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.colorPicker\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.colorPicker\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.radioButton\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.radioButton\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <ul class=\\\"list-unstyled\\\">\\n          <li><h6>Addepar Open Source</h6></li>\\n          <li><a target=\\\"_BLANK\\\" href=\\\"http://addepar.github.io/\\\">Home</a></li>\\n          <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"license\", options) : helperMissing.call(depth0, \"link-to\", \"license\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <ul class=\\\"list-unstyled\\\">\\n          <li><h6>About Addepar</h6></li>\\n          <li><a target=\\\"_BLANK\\\" href=\\\"http://www.addepar.com\\\">www.addepar.com</a></li>\\n          <li>\\n            <address>\\n              <br>\\n              <a target=\\\"_BLANK\\\" href=\\\"http://goo.gl/maps/446ui\\\"><strong>Addepar HQ</strong><br>\\n              1215 Terra Bella Ave<br>\\n              Mountain View, CA 94043</a><br><br>\\n\\n              <a target=\\\"_BLANK\\\" href=\\\"http://goo.gl/maps/xEiCM\\\"><strong>Addepar NY</strong><br>\\n              335 Madison Ave Suite 880<br>\\n              New York, NY 10017</a><br>\\n            </address>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 center-align\\\">\\n        <p>&copy; 2013 Addepar, Inc.</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"_navigation\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '';\n\n\n  data.buffer.push(\"\\n<nav class=\\\"navbar navbar-transparent addepar-navbar\\\" role=\\\"navigation\\\">\\n  <div class=\\\"navbar-header\\\">\\n    <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\">\\n      <span class=\\\"sr-only\\\">Toggle navigation</span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n    </button>\\n    <a class=\\\"navbar-brand\\\" href=\\\"http://addepar.github.io/\\\">\\n      <img id=\\\"logo_dark\\\" class=\\\"logo\\\" src=\\\"img/addepar_logo_light.png\\\" /><span class=\\\"navbar-title\\\">Open Source</span>\\n    </a>\\n  </div>\\n\\n  <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\">\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a href=\\\"http://addepar.github.io/ember-table\\\">Ember Table</a></li>\\n      <li><a href=\\\"http://addepar.github.io/ember-charts\\\">Ember Charts</a></li>\\n      <li><a href=\\\"#\\\">Ember Widgets</a></li>\\n    </ul>\\n  </div><!-- /.navbar-collapse -->\\n</nav>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"application\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"\\n\");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navigation\", options) : helperMissing.call(depth0, \"partial\", \"navigation\", options))));\n  data.buffer.push(\"\\n\\n\");\n  stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\\n\");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"footer\", options) : helperMissing.call(depth0, \"partial\", \"footer\", options))));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"custom-modal-content\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1;\n\n\n  data.buffer.push(\"<p>Isn't this one fine day \");\n  stack1 = helpers._triageMustache.call(depth0, \"content.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"?</p>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"custom-popover-content\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1;\n\n\n  data.buffer.push(\"Isn't this one fine day \");\n  stack1 = helpers._triageMustache.call(depth0, \"content.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"?\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '';\n  data.buffer.push(\"\\n  \\n  <div class=\\\"hero-container\\\">\\n    <div class=\\\"hero widgets-hero\\\">\\n      <div class=\\\"hero-overlay\\\"></div>\\n    </div>\\n    <div class=\\\"container hero-content-container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"span12 hero-tagline center-align hidden-tablet\\\">\\n          <h1 class=\\\"elevated\\\">Ember Widgets</h1>\\n          <p class=\\\"elevated\\\">\\n            A powerful and easy to use component library for Ember.js.\\n            <br><br>\\n            <a target=\\\"_BLANK\\\"\\n                href=\\\"https://github.com/Addepar/ember-widgets/releases\\\"\\n                class=\\\"addepar-btn addepar-btn-large addepar-btn-outline addepar-btn-white\\\">\\n              Download Ember-Widgets\\n            </a>\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '';\n  data.buffer.push(\"\\n  \\n  <div class=\\\"hero-container small-hero-container\\\">\\n    <div class=\\\"hero widgets-hero\\\">\\n      <div class=\\\"hero-overlay\\\"></div>\\n    </div>\\n  </div>\\n\");\n  return buffer;\n  }\n\n  stack1 = helpers['if'].call(depth0, \"showLargeHero\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    \");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"ember_widgets/sub_navigation\", options) : helperMissing.call(depth0, \"partial\", \"ember_widgets/sub_navigation\", options))));\n  data.buffer.push(\"\\n    \");\n  stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/_sub_navigation\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Overview\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"API &amp; Documentation\");\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"Accordion\");\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  data.buffer.push(\"Carousel\");\n  }\n\nfunction program9(depth0,data) {\n  \n  \n  data.buffer.push(\"Modal\");\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  data.buffer.push(\"Popover\");\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  data.buffer.push(\"Select\");\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  data.buffer.push(\"Text Editor\");\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  data.buffer.push(\"Color Picker\");\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  data.buffer.push(\"Radio Button\");\n  }\n\n  data.buffer.push(\"\\n<div class=\\\"col-md-2 sub-navigation-sidebar\\\">\\n  <ul class=\\\"list-unstyled github-navigation\\\">\\n    <li>\\n      <a class=\\\"btn btn-default\\\" target=\\\"_BLANK\\\" href=\\\"https://github.com/addepar/ember-widgets\\\">\\n        <i class=\\\"icon-github\\\"></i> View on GitHub\\n      </a>\\n    </li>\\n    <li>\\n      <iframe src=\\\"http://ghbtns.com/github-btn.html?user=addepar&amp;repo=ember-widgets&amp;type=watch&amp;count=true\\\" allowtransparency=\\\"true\\\" frameborder=\\\"0\\\" scrolling=\\\"0\\\" width=\\\"130\\\" height=\\\"30\\\"></iframe>\\n    </li>\\n  </ul>\\n  <hr>\\n  <ul class=\\\"list-unstyled project-navigation\\\">\\n    <li class=\\\"sub-title\\\">Ember Widgets</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.overview\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.overview\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.documentation\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.documentation\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n  </ul>\\n  <hr>\\n  <ul class=\\\"list-unstyled project-navigation\\\">\\n    <li class=\\\"sub-title\\\">Examples</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.accordion\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.accordion\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.carousel\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.carousel\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.modal\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.modal\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.popover\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.popover\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.select\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.select\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.textEditor\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.textEditor\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.colorPicker\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.colorPicker\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n    <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.radioButton\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.radioButton\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n  </ul>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/accordion\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, helper, options;\n  data.buffer.push(\"\\n          \");\n  stack1 = (helper = helpers['accordion-item'] || (depth0 && depth0['accordion-item']),options={hash:{\n    'isActive': (true),\n    'title': (\"Collapsible Group Item #1\")\n  },hashTypes:{'isActive': \"BOOLEAN\",'title': \"STRING\"},hashContexts:{'isActive': depth0,'title': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"accordion-item\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n          \");\n  stack1 = (helper = helpers['accordion-item'] || (depth0 && depth0['accordion-item']),options={hash:{\n    'title': (\"Collapsible Group Item #2\")\n  },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"accordion-item\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n          \");\n  stack1 = (helper = helpers['accordion-item'] || (depth0 && depth0['accordion-item']),options={hash:{\n    'title': (\"Collapsible Group Item #3\")\n  },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"accordion-item\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n        \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n            Anim pariatur cliche reprehenderit...\\n          \");\n  }\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Accordion <small> Ember.Widgets.Accordion</small></h2>\\n      <p class=\\\"elevated\\\">Displays collapsible content panels for presenting information in a limited amount of space. Click headers to expand/collapse content that is broken into logical sections, much like tabs.</p>\\n\\n      <div class=\\\"example-container\\\">\\n        \");\n  options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n  if (helper = helpers['accordion-component']) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0['accordion-component']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers['accordion-component']) { stack1 = blockHelperMissing.call(depth0, 'accordion-component', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-12 bumper-30\\\">\\n      <h4>Application.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;#accordion-component&#125;&#125;\\n  &#123;&#123;#accordion-item isActive=true title=&quot;Collapsible Group Item #1&quot;&#125;&#125;\\n    Anim pariatur cliche reprehenderit...\\n  &#123;&#123;/accordion-item&#125;&#125;\\n  &#123;&#123;#accordion-item title=&quot;Collapsible Group Item #2&quot;&#125;&#125;\\n    Anim pariatur cliche reprehenderit...\\n  &#123;&#123;/accordion-item&#125;&#125;\\n  &#123;&#123;#accordion-item title=&quot;Collapsible Group Item #3&quot;&#125;&#125;\\n    Anim pariatur cliche reprehenderit...\\n  &#123;&#123;/accordion-item&#125;&#125;\\n&#123;&#123;/accordion-component&#125;&#125;</pre>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/carousel\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, helper, options;\n  data.buffer.push(\"\\n          \");\n  stack1 = (helper = helpers['carousel-item'] || (depth0 && depth0['carousel-item']),options={hash:{\n    'class': (\"active\")\n  },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"carousel-item\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n          \");\n  options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}\n  if (helper = helpers['carousel-item']) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0['carousel-item']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers['carousel-item']) { stack1 = blockHelperMissing.call(depth0, 'carousel-item', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data}); }\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n          \");\n  options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data}\n  if (helper = helpers['carousel-item']) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0['carousel-item']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers['carousel-item']) { stack1 = blockHelperMissing.call(depth0, 'carousel-item', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[],types:[],data:data}); }\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n        \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n            <img src=\\\"img/bootstrap-mdo-sfmoma-01.jpg\\\" alt=\\\"\\\">\\n          \");\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n            <img src=\\\"img/bootstrap-mdo-sfmoma-02.jpg\\\" alt=\\\"\\\">\\n          \");\n  }\n\nfunction program6(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n            <img src=\\\"img/bootstrap-mdo-sfmoma-03.jpg\\\" alt=\\\"\\\">\\n          \");\n  }\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Carousel <small> Ember.Widgets.Carousel</small></h2>\\n      <p class=\\\"elevated\\\">The slideshow below shows a generic plugin and component for cycling through elements like a carousel.</p>\\n\\n      <div class=\\\"example-container\\\">\\n        \");\n  options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n  if (helper = helpers['carousel-component']) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0['carousel-component']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers['carousel-component']) { stack1 = blockHelperMissing.call(depth0, 'carousel-component', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-12 bumper-30\\\">\\n      <h4>Application.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;#carousel-component&#125;&#125;<br/>  &#123;&#123;#carousel-item class=&quot;active&quot;&#125;&#125;<br/>    &lt;img src=&quot;/gh_pages/img/bootstrap-mdo-sfmoma-01.jpg&quot; alt=&quot;&quot;&gt;<br/>  &#123;&#123;/carousel-item&#125;&#125;<br/>  &#123;&#123;#carousel-item&#125;&#125;<br/>    &lt;img src=&quot;/gh_pages/img/bootstrap-mdo-sfmoma-02.jpg&quot; alt=&quot;&quot;&gt;<br/>  &#123;&#123;/carousel-item&#125;&#125;<br/>  &#123;&#123;#carousel-item&#125;&#125;<br/>    &lt;img src=&quot;/gh_pages/img/bootstrap-mdo-sfmoma-03.jpg&quot; alt=&quot;&quot;&gt;<br/>  &#123;&#123;/carousel-item&#125;&#125;<br/>&#123;&#123;/carousel-component&#125;&#125;</pre>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/color_picker\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Color Picker <small> Ember.Widgets.ColorPicker </small></h2>\\n      <p class=\\\"elevated\\\">A simple component to select color from a given palette and the option to define a custom HEX.</p>\\n    </div>\\n\\n    <div class=\\\"col-md-3\\\">\\n      \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Widgets.ColorPicker\", {hash:{\n    'class': (\"btn btn-default\")\n  },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Comparison</button>\\n    </div>\\n\\n    <div class=\\\"col-md-3\\\">\\n      \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Widgets.ColorPicker\", {hash:{\n    'class': (\"btn btn-default\"),\n    'dropdownClass': (\"pull-right\")\n  },hashTypes:{'class': \"STRING\",'dropdownClass': \"STRING\"},hashContexts:{'class': depth0,'dropdownClass': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Comparison</button>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;view Ember.Widgets.ColorPicker&#125;&#125;\\n</pre>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-2\\\">\\n      \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Widgets.ColorPicker\", {hash:{\n    'class': (\"btn btn-default btn-expand\")\n  },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\n    </div>\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/documentation\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '';\n\n\n  data.buffer.push(\"\\n<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <h1>API</h1>\\n  <h2>Ember.Widgets.SelectComponent Options</h2>\\n  <table class=\\\"table ember-widgets-options\\\">\\n    <tr>\\n      <th style=\\\"width: 200px;\\\">Option</th>\\n      <th style=\\\"width: 150px;\\\">Default</th>\\n      <th>Description</th>\\n    </tr>\\n    <tr>\\n      <td>itemViewClass</td>\\n      <td>Ember.Widgets.SelectOptionView</td>\\n      <td><p>The view to be displayed in the rows of the select.</p></td>\\n    </tr>\\n    <tr>\\n      <td>prompt</td>\\n      <td>Select a Value</td>\\n      <td><p>The prompt to be displayed by default in the select, when\\n        nothing else is selected.</p></td>\\n    </tr>\\n    <tr>\\n      <td>placeholder</td>\\n      <td>undefined</td>\\n      <td><p>The placeholder text to be displayed in the search box when you\\n        click on the select.</p></td>\\n    </tr>\\n    <tr>\\n      <td>highlightedIndex</td>\\n      <td>-1</td>\\n      <td><p>The index of the select item that is highlighted.</p></td>\\n    </tr>\\n    <tr>\\n      <td>tabindex</td>\\n      <td>-1</td>\\n      <td><p>The tabindex of the component.</p></td>\\n    </tr>\\n    <tr>\\n      <td>showDropdown</td>\\n      <td>no</td>\\n      <td><p>If yes then shows a dropdown.</p></td>\\n    </tr>\\n    <tr>\\n      <td>dropdownHeight</td>\\n      <td>300</td>\\n      <td><p>The height of the dropdown.</p></td>\\n    </tr>\\n    <tr>\\n      <td>rowHeight</td>\\n      <td>26</td>\\n      <td><p>Row height in pixels for the lazy list. Important: rowHeight must be synched with the CSS</p></td>\\n    </tr>\\n    <tr>\\n      <td>sortLabels</td>\\n      <td>yes</td>\\n      <td><p>Option to indicate whether we should sort the labels</p></td>\\n    </tr>\\n    <tr>\\n      <td>isSelect</td>\\n      <td>no</td>\\n      <td><p>If isSelect is true, we will not show the search box</p></td>\\n    </tr>\\n    <tr>\\n      <td>isButton</td>\\n      <td>yes</td>\\n      <td><p>If is button is true, the select will look like a button</p></td>\\n    </tr>\\n    <tr>\\n      <td>dropdownToggleIcon</td>\\n      <td>icon-sort</td>\\n      <td><p>Font-awesome dependency - Change the icon when necessary</p></td>\\n    </tr>\\n    <tr>\\n      <td>content</td>\\n      <td>[]</td>\\n      <td><p>The list of options.</p></td>\\n    </tr>\\n    <tr>\\n      <td>selection</td>\\n      <td>null</td>\\n      <td><p>The option which is currently selected.</p></td>\\n    </tr>\\n    <tr>\\n      <td>optionLabelPath</td>\\n      <td>&#39;&#39;</td>\\n      <td><p>The path of the label, for options.</p></td>\\n    </tr>\\n    <tr>\\n      <td>optionValuePath</td>\\n      <td>&#39;&#39;</td>\\n      <td><p>The path of the value, for options.</p></td>\\n    </tr>\\n    <tr>\\n      <td>optionGroupPath</td>\\n      <td>&#39;&#39;</td>\\n      <td><p>The path of the group, for options.</p></td>\\n    </tr>\\n    <tr>\\n      <td>optionDefaultPath</td>\\n      <td>&#39;&#39;</td>\\n      <td><p>The path of the default option.</p></td>\\n    </tr>\\n  </table>\\n\\n  <hr>\\n  <h2>Ember.Widgets.MultiSelectComponent Options</h2>\\n  <table class=\\\"table ember-widgets-options\\\">\\n    <tr>\\n      <td>placeholder</td>\\n      <td>undefined</td>\\n      <td><p>The placeholder text to be displayed in multi-select search box\\n        before anything has been selected.</p></td>\\n    </tr>\\n    <tr>\\n      <td>persistentPlaceholder</td>\\n      <td>undefined</td>\\n      <td><p>The placeholder text to be displayed in multi-select search box,\\n        even if one or more options are already selected.</p></td>\\n    </tr>\\n  </table>\\n\\n  <hr>\\n  <h2>Ember.Widgets.PopoverComponent Options</h2>\\n  <table class=\\\"table ember-widgets-options\\\">\\n    <tr>\\n      <th style=\\\"width: 200px;\\\">Option</th>\\n      <th style=\\\"width: 150px;\\\">Default</th>\\n      <th>Description</th>\\n    </tr>\\n    <tr>\\n      <td>targetElement</td>\\n      <td>null</td>\\n      <td><p>The element this popover will be attached to.</p></td>\\n    </tr>\\n    <tr>\\n      <td>placement</td>\\n      <td>top</td>\\n      <td><p>The direction the popover will pop up. Other options are\\n        bottom, top-right, top-left, bottom-right, bottom-left, left,\\n        and right</p></td>\\n    </tr>\\n    <tr>\\n      <td>title</td>\\n      <td>''</td>\\n      <td><p>The title to be displayed on the popover.</p></td>\\n    </tr>\\n    <tr>\\n      <td>left</td>\\n      <td>0</td>\\n      <td><p>The left offset of the popover, in pixels.</p></td>\\n    </tr>\\n    <tr>\\n      <td>top</td>\\n      <td>0</td>\\n      <td><p>The top offset of the popover, in pixels.</p></td>\\n    </tr>\\n    <tr>\\n      <td>fade</td>\\n      <td>yes</td>\\n      <td><p>If this is yes then the modal fades in/out.</p></td>\\n    </tr>\\n  </table>\\n\\n  <hr>\\n  <h2>Ember.Widgets.ModalComponent Options</h2>\\n  <table class=\\\"table ember-widgets-options\\\">\\n    <tr>\\n      <th style=\\\"width: 200px;\\\">Option</th>\\n      <th style=\\\"width: 150px;\\\">Default</th>\\n      <th>Description</th>\\n    </tr>\\n    <tr>\\n      <td>backdrop</td>\\n      <td>yes</td>\\n      <td><p>If this is yes then the modal will be displayed with a\\n        semi-opaque backdrop.</p></td>\\n    </tr>\\n    <tr>\\n      <td>fade</td>\\n      <td>yes</td>\\n      <td><p>If this is yes then the modal fades in/out.</p></td>\\n    </tr>\\n    <tr>\\n      <td>escToCancel</td>\\n      <td>yes</td>\\n      <td><p>If this is yes then pressing ESC cancels the modal.</p></td>\\n    </tr>\\n    <tr>\\n      <td>headerText</td>\\n      <td>\\\"Modal Header\\\"</td>\\n      <td><p>The text that is displayed in the header of the modal.</p></td>\\n    </tr>\\n    <tr>\\n      <td>confirmText</td>\\n      <td>\\\"Confirm\\\"</td>\\n      <td><p>The text that is displayed in the confirmation button of\\n        the modal.</p></td>\\n    </tr>\\n    <tr>\\n      <td>cancelText</td>\\n      <td>\\\"Cancel\\\"</td>\\n      <td><p>The text that is displayed in the cancel button of the\\n        modal.</p></td>\\n    </tr>\\n    <tr>\\n      <td>bodyElementSelector</td>\\n      <td>'.modal-backdrop'</td>\\n      <td><p></p></td>\\n    </tr>\\n    <tr>\\n      <td>size</td>\\n      <td>'normal'</td>\\n      <td><p>The size of the bootstrap modal.  Other options are 'small'\\n        and 'large'.</p></td>\\n    </tr>\\n  </table>\\n\\n  <hr>\\n  <h2>Ember.Widgets.CarouselComponent Options</h2>\\n  <table class=\\\"table ember-widgets-options\\\">\\n    <tr>\\n      <th style=\\\"width: 200px;\\\">Option</th>\\n      <th style=\\\"width: 150px;\\\">Default</th>\\n      <th>Description</th>\\n    </tr>\\n    <tr>\\n      <td>activeIndex</td>\\n      <td>0</td>\\n      <td><p>The index of the carousel item which is currently being\\n        shown.</p></td>\\n    </tr>\\n  </table>\\n\\n\\n  layoutName: 'carousel'\\n  classNames: ['carousel', 'slide']\\n  classNameBindings: ['sliding']\\n\\n  <hr>\\n  <h2>Ember.Widgets.AccordionComponent Options</h2>\\n  <table class=\\\"table ember-widgets-options\\\">\\n    <tr>\\n      <th style=\\\"width: 200px;\\\">Option</th>\\n      <th style=\\\"width: 150px;\\\">Default</th>\\n      <th>Description</th>\\n    </tr>\\n    <tr>\\n      <td>activeIndex</td>\\n      <td>0</td>\\n      <td><p>The index of the accordian item which is currently being\\n        shown.</p></td>\\n    </tr>\\n  </table>\\n\\n  <hr>\\n  <h2>Ember.Widgets.RadioButtonGroupComponent Options</h2>\\n  <table class=\\\"table ember-widgets-options\\\">\\n    <tr>\\n      <th style=\\\"width: 200px;\\\">Option</th>\\n      <th style=\\\"width: 150px;\\\">Default</th>\\n      <th>Description</th>\\n    </tr>\\n    <tr>\\n      <td>selectedValue</td>\\n      <td>null</td>\\n      <td><p>The value of the currently selected button. To preselect a button\\n        set selectedValue to the value of that button in your template. As a use\\n        case example, bind selectedValue to a boolean variable and have two radio\\n        buttons with values true and false. The bound boolean variable can now switch\\n        values between true and false based on which radio button is chosen.</p></td>\\n    </tr>\\n    <tr>\\n      <td>disabled</td>\\n      <td>false</td>\\n      <td><p>Whether or not the entire radio button group is disabled.</p></td>\\n    </tr>\\n  </table>\\n\\n  <hr>\\n  <h2>Ember.Widgets.RadioButtonComponent Options</h2>\\n  <table class=\\\"table ember-widgets-options\\\">\\n    <tr>\\n      <th style=\\\"width: 200px;\\\">Option</th>\\n      <th style=\\\"width: 150px;\\\">Default</th>\\n      <th>Description</th>\\n    </tr>\\n      <td>value</td>\\n      <td>null</td>\\n      <td><p>The value that the button corresponds to.</p></td>\\n    </tr>\\n    <tr>\\n      <td>disabled</td>\\n      <td>false</td>\\n      <td><p>If the entire group is not disabled, whether or not this particular\\n        radio button is disabled.</p></td>\\n    </tr>\\n  </table>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/modal\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Modal <small> Ember.Widgets.Modal</small></h2>\\n      <p class=\\\"elevated\\\">The modal is an absolutely positioned dialog\\ncomponent which overlays the page. Typically, modals are pre-rendered\\ninto the page, even before they are needed. Our approach appends the\\nmodal when it is required and removes it once it is no longer visible.\\nWe designed it such that actions are sent to the application the same way <a\\nhref=\\\"http://emberjs.com/guides/components/sending-actions-from-components-to-your-application/\\\">components\\nsend them.</a> One caveat is that we need to pass in the current\\ncontroller as the target object to receive actions and to inherit the\\ncontainer.</p>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Modal with content property</h3>\\n      <div class=\\\"example-container\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showModal\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\">\\n          Show Modal\\n        </button>\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Application_controller.coffee</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-coffee\\\">App.ApplicationController = Ember.Controller.extend\\n  actions:\\n    showModal: ->\\n      Ember.Widgets.ModalComponent.popup\\n        targetObject: this\\n        confirm: \\\"modalConfirm\\\"\\n        cancel: \\\"modalCancel\\\"\\n        content: \\\"Isn't this one fine day?\\\"\\n\\n    modalConfirm: -> console.log(\\\"Modal Confirm!\\\")\\n\\n    modalCancel: -> console.log(\\\"Modal Cancel!\\\")\\n</pre>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Modal with contentViewClass</h3>\\n      <div class=\\\"example-container\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showModalWithCustomContent\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\">\\n          Show Modal With Custom Content\\n        </button>\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Application_controller.coffee</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-coffee\\\">App.ApplicationController = Ember.Controller.extend\\n  actions:\\n    showModal: ->\\n      Ember.Widgets.ModalComponent.popup\\n        targetObject: this\\n        confirm: \\\"modalConfirm\\\"\\n        cancel: \\\"modalCancel\\\"\\n        content: { name: \\\"Louis\\\" }\\n        contentViewClass: App.CustomModalContentView\\n\\n    modalConfirm: -> console.log(\\\"Modal Confirm!\\\")\\n\\n    modalCancel: -> console.log(\\\"Modal Cancel!\\\")\\n</pre>\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Custom_modal_content_view.coffee</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-coffee\\\">App.CustomModalContentView = Ember.View.extend\\n  templateName: 'custom-modal-content'\\n</pre>\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Custom-modal-content.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">Isn't this one fine day &#123;&#123;content.name&#125;&#125;?</pre>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Modal with custom size</h3>\\n      <div class=\\\"example-container\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" \");\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showSmallModal\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\">\\n          Show Modal\\n        </button>\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Application_controller.coffee</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-coffee\\\">App.ApplicationController = Ember.Controller.extend\\n  actions:\\n    showModal: ->\\n      Ember.Widgets.ModalComponent.popup\\n        targetObject: this\\n        confirm: \\\"modalConfirm\\\"\\n        cancel: \\\"modalCancel\\\"\\n        size: 'small'\\n        content: \\\"This is quite small isn't it?\\\"\\n\\n    modalConfirm: -> console.log(\\\"Modal Confirm!\\\")\\n\\n    modalCancel: -> console.log(\\\"Modal Cancel!\\\")\\n</pre>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/overview\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Accordion\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"Carousel\");\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"Modal\");\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  data.buffer.push(\"Popover\");\n  }\n\nfunction program9(depth0,data) {\n  \n  \n  data.buffer.push(\"Select &amp; Multi-Select\");\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  data.buffer.push(\"Text Editor\");\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  data.buffer.push(\"Color Picker\");\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  data.buffer.push(\"Radio Button\");\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          <div class=\\\"col-md-4\\\">\\n            <h4>Accordion</h4>\\n            <img class=\\\"preview-box\\\" src=\\\"img/preview_widgets_accordion.png\\\" />\\n          </div>\\n        \");\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          <div class=\\\"col-md-4\\\">\\n            <h4>Carousel</h4>\\n            <img class=\\\"preview-box\\\" src=\\\"img/preview_widgets_carousel.png\\\" />\\n          </div>\\n        \");\n  }\n\nfunction program21(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          <div class=\\\"col-md-4\\\">\\n            <h4>Modal</h4>\\n            <img class=\\\"preview-box\\\" src=\\\"img/preview_widgets_modal.png\\\" />\\n          </div>\\n        \");\n  }\n\nfunction program23(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          <div class=\\\"col-md-4\\\">\\n            <h4>Popover</h4>\\n            <img class=\\\"preview-box\\\" src=\\\"img/preview_widgets_popover.png\\\" />\\n          </div>\\n        \");\n  }\n\nfunction program25(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          <div class=\\\"col-md-4\\\">\\n            <h4>Select &amp; Multi-Select</h4>\\n            <img class=\\\"preview-box\\\" src=\\\"img/preview_widgets_select.png\\\" />\\n          </div>\\n        \");\n  }\n\n  data.buffer.push(\"\\n<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h1>Ember Widgets</h1>\\n      <p class=\\\"elevated\\\">A component library built with the <a\\n        target=\\\"_BLANK\\\" href=\\\"http://emberjs.com/\\\">Ember.js</a>\\n      framework. Includes easy to extend components such as select,\\n      popover, modal, carousel, and accordion. This library is built on\\n      bootstrap 3.0 CSS and represents our ideas about component best\\n      practices.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Features</h3>\\n      <ul class=\\\"styled\\\">\\n        <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.accordion\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.accordion\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.carousel\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.carousel\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.modal\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.modal\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.popover\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.popover\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.select\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.select\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.textEditor\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.textEditor\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.colorPicker\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.colorPicker\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n        <li>\");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.radioButton\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.radioButton\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"</li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Dependencies</h3>\\n      <ul class=\\\"styled\\\">\\n        <li><a target=\\\"_BLANK\\\" href=\\\"http://emberjs.com/\\\">Ember.js</a></li>\\n        <li><a target=\\\"_BLANK\\\" href=\\\"http://emberjs.com/list-view/\\\">List-View</a></li>\\n        <li><a target=\\\"_BLANK\\\" href=\\\"http://getbootstrap.com/\\\">Bootstrap (V3)</a></li>\\n        <li><a target=\\\"_BLANK\\\" href=\\\"http://lodash.com/\\\">Lo-Dash</a></li>\\n        <li><a target=\\\"_BLANK\\\" href=\\\"http://jquery.com/\\\">jQuery</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <hr>\\n      <h1>Widgets</h1>\\n      <p class=\\\"elevated\\\">The examples below demonstrate how you can extend and customize the widgets.</p>\\n      <div class=\\\"row ember-widgets-examples\\\">\\n        \");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.accordion\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.accordion\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n        \");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.carousel\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.carousel\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n        \");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.modal\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.modal\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n        \");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(23, program23, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.popover\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.popover\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n        \");\n  stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(25, program25, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"emberWidgets.select\", options) : helperMissing.call(depth0, \"link-to\", \"emberWidgets.select\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <hr>\\n      <h1>Getting Started</h1>\\n      <p>You will need <a target=\\\"_BLANK\\\" href=\\\"http://nodejs.org/\\\">node</a> installed as a development dependency.</p>\\n      <p><a target=\\\"_BLANK\\\" href=\\\"https://github.com/Addepar/ember-widgets/\\\">Clone it from Github</a> or <a target=\\\"_BLANK\\\" href=\\\"https://github.com/Addepar/ember-widgets/releases\\\">download the ZIP repo</a></p>\\n      <div class=\\\"highlight\\\">\\n<pre><code>$ npm install -g grunt-cli\\n$ npm install\\n$ grunt\\n$ node examples.js</code></pre>\\n      <p>Go to your browser and navigate to localhost:8000/gh_pages</p>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <hr>\\n      <h1>Contributing</h1>\\n      <p>You can contribute to this project in one of two ways:\\n      <ul class=\\\"styled\\\">\\n        <li>Browse the ember-widgets <a target=\\\"_BLANK\\\" href=\\\"https://github.com/Addepar/ember-widgets/issues?state=open\\\">issues</a> and report bugs</li>\\n        <li>Clone the ember-widgets repo, make some changes according to our development guidelines and issue a pull-request with your changes.</li>\\n      </ul>\\n      <p>We keep the ember-widgets.js code to the minimum necessary, giving users as much control as possible.</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <hr>\\n      <h1>Changelog</h1>\\n      <p>The current version is 0.2.0.\\n      <p>For the full list of changes, please see <a target=\\\"_BLANK\\\" href=\\\"https://github.com/Addepar/ember-widgets/blob/master/CHANGELOG.md\\\">CHANGELOG.md</a>.</p>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <hr>\\n      <h1>Acknowledgements</h1>\\n      <p><a target=\\\"_BLANK\\\" href=\\\"https://github.com/Addepar/ember-widgets/graphs/contributors\\\">List of Contributors on Github</a></p>\\n      <p>With lots of help from the Ember.js team</p>\\n      <p><a target=\\\"_BLANK\\\" href=\\\"https://twitter.com/wycats\\\">wycats</a>, <a target=\\\"_BLANK\\\" href=\\\"https://twitter.com/tomdale\\\">tomdale</a>, <a target=\\\"_BLANK\\\" href=\\\"https://twitter.com/ebryn\\\">ebryn</a></p>\\n    </div>\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/popover\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          Show Popover Top\\n        \");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          Show Popover Top-Right\\n        \");\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          Show Popover Right\\n        \");\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          Show Popover Bottom-Right\\n        \");\n  }\n\nfunction program9(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          Show Popover Bottom\\n        \");\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          Show Popover Bottom-Left\\n        \");\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          Show Popover Left\\n        \");\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n          Show Popover Top-Left\\n        \");\n  }\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Popover <small> Ember.Widgets.Popover</small></h2>\\n      <p class=\\\"elevated\\\">Add small overlays of content to any element\\nfor displaying additional information. We created the popover link as a\\ncomponent which can either hold a content string specified in the handlebar\\nhelper or point to a custom view class for more sophisticated look and\\nfeel.</p>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Simple Popover</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  stack1 = (helper = helpers['popover-link-component'] || (depth0 && depth0['popover-link-component']),options={hash:{\n    'tagName': (\"button\"),\n    'class': (\"btn btn-primary\"),\n    'title': (\"Hello\"),\n    'content': (\"Hello World!\")\n  },hashTypes:{'tagName': \"STRING\",'class': \"STRING\",'title': \"STRING\",'content': \"STRING\"},hashContexts:{'tagName': depth0,'class': depth0,'title': depth0,'content': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"popover-link-component\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Application.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;#popover-link-component tagName=&quot;button&quot;\\n  class=&quot;btn btn-primary&quot; title=&quot;Hello&quot;\\n  content=&quot;Hello World&quot;&#125;&#125;\\n  Show Popover Button-Left\\n&#123;&#123;/popover-link-component&#125;&#125;</pre>\\n      </div>\\n\\n      <hr>\\n\\n      <h3>Popover with contentViewClass</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  stack1 = (helper = helpers['popover-link-component'] || (depth0 && depth0['popover-link-component']),options={hash:{\n    'tagName': (\"button\"),\n    'class': (\"btn btn-primary\"),\n    'placement': (\"top-right\"),\n    'contentBinding': (\"model\"),\n    'title': (\"Derp\"),\n    'contentViewClass': (\"App.CustomPopoverContentView\")\n  },hashTypes:{'tagName': \"STRING\",'class': \"STRING\",'placement': \"STRING\",'contentBinding': \"STRING\",'title': \"STRING\",'contentViewClass': \"STRING\"},hashContexts:{'tagName': depth0,'class': depth0,'placement': depth0,'contentBinding': depth0,'title': depth0,'contentViewClass': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"popover-link-component\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n\\n      <hr>\\n\\n      <h3>Popover with contentViewClass</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  stack1 = (helper = helpers['popover-link-component'] || (depth0 && depth0['popover-link-component']),options={hash:{\n    'tagName': (\"button\"),\n    'class': (\"btn btn-primary\"),\n    'placement': (\"right\"),\n    'contentBinding': (\"model\"),\n    'title': (\"Derp\"),\n    'contentViewClass': (\"App.CustomPopoverContentView\")\n  },hashTypes:{'tagName': \"STRING\",'class': \"STRING\",'placement': \"STRING\",'contentBinding': \"STRING\",'title': \"STRING\",'contentViewClass': \"STRING\"},hashContexts:{'tagName': depth0,'class': depth0,'placement': depth0,'contentBinding': depth0,'title': depth0,'contentViewClass': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"popover-link-component\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n\\n      <hr>\\n\\n      <h3>Popover with contentViewClass</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  stack1 = (helper = helpers['popover-link-component'] || (depth0 && depth0['popover-link-component']),options={hash:{\n    'tagName': (\"button\"),\n    'class': (\"btn btn-primary\"),\n    'placement': (\"bottom-right\"),\n    'contentBinding': (\"model\"),\n    'title': (\"Derp\"),\n    'contentViewClass': (\"App.CustomPopoverContentView\")\n  },hashTypes:{'tagName': \"STRING\",'class': \"STRING\",'placement': \"STRING\",'contentBinding': \"STRING\",'title': \"STRING\",'contentViewClass': \"STRING\"},hashContexts:{'tagName': depth0,'class': depth0,'placement': depth0,'contentBinding': depth0,'title': depth0,'contentViewClass': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"popover-link-component\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n\\n      <hr>\\n\\n      <h3>Popover with contentViewClass</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  stack1 = (helper = helpers['popover-link-component'] || (depth0 && depth0['popover-link-component']),options={hash:{\n    'tagName': (\"button\"),\n    'class': (\"btn btn-primary\"),\n    'placement': (\"bottom\"),\n    'contentBinding': (\"model\"),\n    'title': (\"Derp\"),\n    'contentViewClass': (\"App.CustomPopoverContentView\")\n  },hashTypes:{'tagName': \"STRING\",'class': \"STRING\",'placement': \"STRING\",'contentBinding': \"STRING\",'title': \"STRING\",'contentViewClass': \"STRING\"},hashContexts:{'tagName': depth0,'class': depth0,'placement': depth0,'contentBinding': depth0,'title': depth0,'contentViewClass': depth0},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"popover-link-component\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n\\n      <hr>\\n\\n      <h3>Popover with contentViewClass</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  stack1 = (helper = helpers['popover-link-component'] || (depth0 && depth0['popover-link-component']),options={hash:{\n    'tagName': (\"button\"),\n    'class': (\"btn btn-primary\"),\n    'placement': (\"bottom-left\"),\n    'contentBinding': (\"model\"),\n    'title': (\"Derp\"),\n    'contentViewClass': (\"App.CustomPopoverContentView\")\n  },hashTypes:{'tagName': \"STRING\",'class': \"STRING\",'placement': \"STRING\",'contentBinding': \"STRING\",'title': \"STRING\",'contentViewClass': \"STRING\"},hashContexts:{'tagName': depth0,'class': depth0,'placement': depth0,'contentBinding': depth0,'title': depth0,'contentViewClass': depth0},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"popover-link-component\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n\\n      <hr>\\n\\n      <h3>Popover with contentViewClass</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  stack1 = (helper = helpers['popover-link-component'] || (depth0 && depth0['popover-link-component']),options={hash:{\n    'tagName': (\"button\"),\n    'class': (\"btn btn-primary\"),\n    'placement': (\"left\"),\n    'contentBinding': (\"model\"),\n    'title': (\"Derp\"),\n    'contentViewClass': (\"App.CustomPopoverContentView\")\n  },hashTypes:{'tagName': \"STRING\",'class': \"STRING\",'placement': \"STRING\",'contentBinding': \"STRING\",'title': \"STRING\",'contentViewClass': \"STRING\"},hashContexts:{'tagName': depth0,'class': depth0,'placement': depth0,'contentBinding': depth0,'title': depth0,'contentViewClass': depth0},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"popover-link-component\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Popover with contentViewClass</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  stack1 = (helper = helpers['popover-link-component'] || (depth0 && depth0['popover-link-component']),options={hash:{\n    'tagName': (\"button\"),\n    'class': (\"btn btn-primary\"),\n    'placement': (\"top-left\"),\n    'contentBinding': (\"model\"),\n    'title': (\"Derp\"),\n    'contentViewClass': (\"App.CustomPopoverContentView\")\n  },hashTypes:{'tagName': \"STRING\",'class': \"STRING\",'placement': \"STRING\",'contentBinding': \"STRING\",'title': \"STRING\",'contentViewClass': \"STRING\"},hashContexts:{'tagName': depth0,'class': depth0,'placement': depth0,'contentBinding': depth0,'title': depth0,'contentViewClass': depth0},inverse:self.noop,fn:self.program(15, program15, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"popover-link-component\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Application.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;#popover-link-component tagName=&quot;button&quot;\\n  class=&quot;btn btn-primary&quot; placement=&quot;bottom-left&quot;\\n  contentViewClass=&quot;App.CustomPopoverContentView&quot;&#125;&#125;\\n  Show Popover Button-Left\\n&#123;&#123;/popover-link-component&#125;&#125;</pre>\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Custom-popover-content.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">Isn't this one fine day &#123;&#123;content.name&#125;&#125;?</pre>\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Custom_popover_content_view.coffee</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-coffee\\\">App.CustomPopoverContentView = Ember.View.extend\\n  templateName: 'custom-popover-content'</pre>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/radio_button\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, helper, options;\n  data.buffer.push(\"\\n          <div class=\\\"radio-row\\\">\\n            \");\n  stack1 = (helper = helpers['radio-button'] || (depth0 && depth0['radio-button']),options={hash:{\n    'value': (true)\n  },hashTypes:{'value': \"BOOLEAN\"},hashContexts:{'value': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n          </div>\\n          <div class=\\\"radio-row\\\">\\n            \");\n  stack1 = (helper = helpers['radio-button'] || (depth0 && depth0['radio-button']),options={hash:{\n    'value': (false)\n  },hashTypes:{'value': \"BOOLEAN\"},hashContexts:{'value': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options));\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n          </div>\\n        \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n              <span class=\\\"form-label radio-label\\\">True</span>\\n            \");\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n              <span class=\\\"form-label radio-label\\\">False</span>\\n            \");\n  }\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Radio Button <small>Ember.Widgets.RadioButton</small></h2>\\n      <p class=\\\"elevated\\\">Allows selection of one choice from multiple possibilities.</p>\\n      <div class=\\\"example-container\\\">\\n        \");\n  options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n  if (helper = helpers['radio-button-group-component']) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0['radio-button-group-component']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers['radio-button-group-component']) { stack1 = blockHelperMissing.call(depth0, 'radio-button-group-component', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12 bumper-30\\\">\\n      <h4>Application.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;#radio-button-group-component&#125;&#125;\\n  &lt;div class=&quot;radio-row&quot;&gt;\\n    &#123;&#123;#radio-button value=true&#125;&#125;\\n      &lt;span class=&quot;form-label radio-label&quot;&gt;True&lt;/span&gt;\\n    &#123;&#123;/radio-button&#125;&#125;\\n  &lt;/div&gt;\\n  &lt;div class=&quot;radio-row&quot;&gt;\\n    &#123;&#123;#radio-button value=false&#125;&#125;\\n      &lt;span class=&quot;form-label radio-label&quot;&gt;False&lt;/span&gt;\\n    &#123;&#123;/radio-button&#125;&#125;\\n  &lt;/div&gt;\\n&#123;&#123;/radio-button-group-component&#125;&#125;</pre>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/select\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <h2>Select <small> Ember.Widgets.Select</small></h2>\\n  <p class=\\\"elevated\\\">Ember select is a Ember.js based replacement for select boxes. It supports searching, remote data sets, and infinite scrolling of results. This component&#39;s design was inspired by the excellent <a target=\\\"_BLANK\\\" href=\\\"http://harvesthq.github.io/chosen/\\\">Chosen</a> jquery plugin and <a target=\\\"_BLANK\\\" href=\\\"http://ivaynberg.github.io/select2/\\\">Select2</a>. Uses the <a target=\\\"_BLANK\\\" href=\\\"https://github.com/emberjs/list-view\\\">ember list view</a> for lazily rendering large arrays of content.</p>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Select with Selection Binding</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  data.buffer.push(escapeExpression((helper = helpers['select-component'] || (depth0 && depth0['select-component']),options={hash:{\n    'contentBinding': (\"model\"),\n    'prompt': (\"Select a Country\"),\n    'optionLabelPath': (\"name\"),\n    'optionValuePath': (\"name\"),\n    'selectionBinding': (\"selection\"),\n    'placeholder': (\"Search\")\n  },hashTypes:{'contentBinding': \"STRING\",'prompt': \"STRING\",'optionLabelPath': \"STRING\",'optionValuePath': \"STRING\",'selectionBinding': \"STRING\",'placeholder': \"STRING\"},hashContexts:{'contentBinding': depth0,'prompt': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'selectionBinding': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"select-component\", options))));\n  data.buffer.push(\"\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Application.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;select-component\\n  contentBinding=\\\"model\\\"\\n  prompt=\\\"Select a Country\\\"\\n  optionLabelPath=\\\"name\\\"\\n  optionValuePath=\\\"name\\\"\\n  selectionBinding=\\\"selection\\\"\\n  placeholder=\\\"Search\\\"\\n&#125;&#125;</pre>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Multi-Select</h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  data.buffer.push(escapeExpression((helper = helpers['multi-select-component'] || (depth0 && depth0['multi-select-component']),options={hash:{\n    'contentBinding': (\"model\"),\n    'optionLabelPath': (\"name\"),\n    'optionValuePath': (\"code\"),\n    'classNames': (\"multi-select-example\"),\n    'placeholder': (\"Select a country...\")\n  },hashTypes:{'contentBinding': \"STRING\",'optionLabelPath': \"STRING\",'optionValuePath': \"STRING\",'classNames': \"STRING\",'placeholder': \"STRING\"},hashContexts:{'contentBinding': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'classNames': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"multi-select-component\", options))));\n  data.buffer.push(\"\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Application.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;multi-select-component\\n  contentBinding=\\\"model\\\"\\n  optionLabelPath=\\\"name\\\"\\n  optionValuePath=\\\"code\\\"\\n  classNames=\\\"multi-select-example\\\"\\n  placeholder=\\\"Select a country...\\\"\\n&#125;&#125;</pre>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <h3>Multi-Select <small>Small</small></h3>\\n      <div class=\\\"example-container\\\">\\n        \");\n  data.buffer.push(escapeExpression((helper = helpers['multi-select-component'] || (depth0 && depth0['multi-select-component']),options={hash:{\n    'contentBinding': (\"model\"),\n    'optionLabelPath': (\"name\"),\n    'optionValuePath': (\"code\"),\n    'classNames': (\"multi-select-example\"),\n    'choicesFieldClass': (\"input-xs\")\n  },hashTypes:{'contentBinding': \"STRING\",'optionLabelPath': \"STRING\",'optionValuePath': \"STRING\",'classNames': \"STRING\",'choicesFieldClass': \"STRING\"},hashContexts:{'contentBinding': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'classNames': depth0,'choicesFieldClass': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"multi-select-component\", options))));\n  data.buffer.push(\"\\n      </div>\\n\\n      <h4 class=\\\"bumper-30\\\">Application.hbs</h4>\\n      <div class=\\\"highlight\\\">\\n<pre class=\\\"prettyprint lang-html\\\">&#123;&#123;multi-select-component\\n  contentBinding=\\\"model\\\"\\n  optionLabelPath=\\\"name\\\"\\n  optionValuePath=\\\"code\\\"\\n  classNames=\\\"multi-select-example\\\"\\n  choicesFieldClass=\\\"input-xs\\\"\\n&#125;&#125;</pre>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/text_editor\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Text Editor <small> Ember.Widgets.TextEditorComponent </small></h2>\\n      <p class=\\\"elevated\\\">Text editor that supports non editable text.</p>\\n    </div>\\n    <div class=\\\"col-md-12\\\">\\n      \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Widgets.TextEditorConfigComponent\", {hash:{\n    'textEditor': (\"view.textEditorA\")\n  },hashTypes:{'textEditor': \"ID\"},hashContexts:{'textEditor': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\n      \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Widgets.TextEditorComponent\", {hash:{\n    'viewName': (\"textEditorA\")\n  },hashTypes:{'viewName': \"STRING\"},hashContexts:{'viewName': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Text Editor <small> Ember.Widgets.TextEditorWithNonEditableComponent </small></h2>\\n      <p class=\\\"elevated\\\">Text editor that supports non editable text.</p>\\n    </div>\\n    <div class=\\\"col-md-12\\\">\\n      \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Widgets.TextEditorWithNonEditableConfigComponent\", {hash:{\n    'textEditor': (\"view.textEditorB\")\n  },hashTypes:{'textEditor': \"ID\"},hashContexts:{'textEditor': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\n      \");\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Widgets.TextEditorWithNonEditableComponent\", {hash:{\n    'viewName': (\"textEditorB\")\n  },hashTypes:{'viewName': \"STRING\"},hashContexts:{'viewName': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n  data.buffer.push(\"\\n    </div>\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"ember_widgets/typahead\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  \n\n\n  data.buffer.push(\"<div class=\\\"col-md-10 col-md-offset-2 left-border main-content-container\\\">\\n  <h2>Typeahead <small> Ember.Widgets.Typeahead</small></h2>\\n  <p class=\\\"elevated\\\">TBD</p>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n    <p>Soon...</p>\\n    </div>\\n  </div>\\n</div>\\n\");\n  \n});\n\nEmber.TEMPLATES[\"license\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"\\n\");\n  data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navigation\", options) : helperMissing.call(depth0, \"partial\", \"navigation\", options))));\n  data.buffer.push(\"\\n\\n\\n<div class=\\\"hero-container small-hero-container\\\">\\n  <div class=\\\"hero widgets-hero\\\">\\n    <div class=\\\"hero-overlay\\\"></div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"section\\\">\\n  <div class=\\\"container main-content-container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-md-offset-3 section-title\\\">\\n        <h1>Code &amp; Documentation Licensing</h1>\\n      </div>\\n      <div class=\\\"col-md-6 col-md-offset-3\\\">\\n        <p>The majority of open source software exclusively developed by Addepar is licensed under the liberal terms of the Apache License, Version 2.0. The documentation is generally available under the Creative Commons Attribution 3.0 Unported License. In the end, you are free to use, modify and distribute any documentation, source code or examples within our open source projects as long as you adhere to the licensing conditions present within the projects.</p>\\n        <p>Also note that our engineers like to hack on their own open source projects in their free time. For code provided by our engineers outside of our official repositories on GitHub, Addepar does not grant any type of license, whether express or implied, to such code.</p>\\n     </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n  return buffer;\n  \n});\n\n})();//@ sourceURL=build/app/templates.js")

eval("(function() {\n\n\nwindow.countries = Ember.A([\n  {\n    name: 'Afghanistan',\n    code: 'AF'\n  }, {\n    name: 'Aland Islands',\n    code: 'AX'\n  }, {\n    name: 'Albania',\n    code: 'AL'\n  }, {\n    name: 'Algeria',\n    code: 'DZ'\n  }, {\n    name: 'American Samoa',\n    code: 'AS'\n  }, {\n    name: 'Andorra',\n    code: 'AD'\n  }, {\n    name: 'Angola',\n    code: 'AO'\n  }, {\n    name: 'Anguilla',\n    code: 'AI'\n  }, {\n    name: 'Antarctica',\n    code: 'AQ'\n  }, {\n    name: 'Antigua and Barbuda',\n    code: 'AG'\n  }, {\n    name: 'Argentina',\n    code: 'AR'\n  }, {\n    name: 'Armenia',\n    code: 'AM'\n  }, {\n    name: 'Aruba',\n    code: 'AW'\n  }, {\n    name: 'Australia',\n    code: 'AU'\n  }, {\n    name: 'Austria',\n    code: 'AT'\n  }, {\n    name: 'Azerbaijan',\n    code: 'AZ'\n  }, {\n    name: 'Bahamas',\n    code: 'BS'\n  }, {\n    name: 'Bahrain',\n    code: 'BH'\n  }, {\n    name: 'Bangladesh',\n    code: 'BD'\n  }, {\n    name: 'Barbados',\n    code: 'BB'\n  }, {\n    name: 'Belarus',\n    code: 'BY'\n  }, {\n    name: 'Belgium',\n    code: 'BE'\n  }, {\n    name: 'Belize',\n    code: 'BZ'\n  }, {\n    name: 'Benin',\n    code: 'BJ'\n  }, {\n    name: 'Bermuda',\n    code: 'BM'\n  }, {\n    name: 'Bhutan',\n    code: 'BT'\n  }, {\n    name: 'Bolivia',\n    code: 'BO'\n  }, {\n    name: 'Bosnia and Herzegovina',\n    code: 'BA'\n  }, {\n    name: 'Botswana',\n    code: 'BW'\n  }, {\n    name: 'Bouvet Island',\n    code: 'BV'\n  }, {\n    name: 'Brazil',\n    code: 'BR'\n  }, {\n    name: 'British Indian Ocean Territory',\n    code: 'IO'\n  }, {\n    name: 'Brunei Darussalam',\n    code: 'BN'\n  }, {\n    name: 'Bulgaria',\n    code: 'BG'\n  }, {\n    name: 'Burkina Faso',\n    code: 'BF'\n  }, {\n    name: 'Burundi',\n    code: 'BI'\n  }, {\n    name: 'Cambodia',\n    code: 'KH'\n  }, {\n    name: 'Cameroon',\n    code: 'CM'\n  }, {\n    name: 'Canada',\n    code: 'CA'\n  }, {\n    name: 'Cape Verde',\n    code: 'CV'\n  }, {\n    name: 'Cayman Islands',\n    code: 'KY'\n  }, {\n    name: 'Central African Republic',\n    code: 'CF'\n  }, {\n    name: 'Chad',\n    code: 'TD'\n  }, {\n    name: 'Chile',\n    code: 'CL'\n  }, {\n    name: 'China',\n    code: 'CN'\n  }, {\n    name: 'Christmas Island',\n    code: 'CX'\n  }, {\n    name: 'Cocos (Keeling) Islands',\n    code: 'CC'\n  }, {\n    name: 'Colombia',\n    code: 'CO'\n  }, {\n    name: 'Comoros',\n    code: 'KM'\n  }, {\n    name: 'Congo',\n    code: 'CG'\n  }, {\n    name: 'Congo, The Democratic Republic of the',\n    code: 'CD'\n  }, {\n    name: 'Cook Islands',\n    code: 'CK'\n  }, {\n    name: 'Costa Rica',\n    code: 'CR'\n  }, {\n    name: 'Cote D\\'Ivoire',\n    code: 'CI'\n  }, {\n    name: 'Croatia',\n    code: 'HR'\n  }, {\n    name: 'Cuba',\n    code: 'CU'\n  }, {\n    name: 'Cyprus',\n    code: 'CY'\n  }, {\n    name: 'Czech Republic',\n    code: 'CZ'\n  }, {\n    name: 'Denmark',\n    code: 'DK'\n  }, {\n    name: 'Djibouti',\n    code: 'DJ'\n  }, {\n    name: 'Dominica',\n    code: 'DM'\n  }, {\n    name: 'Dominican Republic',\n    code: 'DO'\n  }, {\n    name: 'Ecuador',\n    code: 'EC'\n  }, {\n    name: 'Egypt',\n    code: 'EG'\n  }, {\n    name: 'El Salvador',\n    code: 'SV'\n  }, {\n    name: 'Equatorial Guinea',\n    code: 'GQ'\n  }, {\n    name: 'Eritrea',\n    code: 'ER'\n  }, {\n    name: 'Estonia',\n    code: 'EE'\n  }, {\n    name: 'Ethiopia',\n    code: 'ET'\n  }, {\n    name: 'Falkland Islands (Malvinas)',\n    code: 'FK'\n  }, {\n    name: 'Faroe Islands',\n    code: 'FO'\n  }, {\n    name: 'Fiji',\n    code: 'FJ'\n  }, {\n    name: 'Finland',\n    code: 'FI'\n  }, {\n    name: 'France',\n    code: 'FR'\n  }, {\n    name: 'French Guiana',\n    code: 'GF'\n  }, {\n    name: 'French Polynesia',\n    code: 'PF'\n  }, {\n    name: 'French Southern Territories',\n    code: 'TF'\n  }, {\n    name: 'Gabon',\n    code: 'GA'\n  }, {\n    name: 'Gambia',\n    code: 'GM'\n  }, {\n    name: 'Georgia',\n    code: 'GE'\n  }, {\n    name: 'Germany',\n    code: 'DE'\n  }, {\n    name: 'Ghana',\n    code: 'GH'\n  }, {\n    name: 'Gibraltar',\n    code: 'GI'\n  }, {\n    name: 'Greece',\n    code: 'GR'\n  }, {\n    name: 'Greenland',\n    code: 'GL'\n  }, {\n    name: 'Grenada',\n    code: 'GD'\n  }, {\n    name: 'Guadeloupe',\n    code: 'GP'\n  }, {\n    name: 'Guam',\n    code: 'GU'\n  }, {\n    name: 'Guatemala',\n    code: 'GT'\n  }, {\n    name: 'Guernsey',\n    code: 'GG'\n  }, {\n    name: 'Guinea',\n    code: 'GN'\n  }, {\n    name: 'Guinea-Bissau',\n    code: 'GW'\n  }, {\n    name: 'Guyana',\n    code: 'GY'\n  }, {\n    name: 'Haiti',\n    code: 'HT'\n  }, {\n    name: 'Heard Island and Mcdonald Islands',\n    code: 'HM'\n  }, {\n    name: 'Holy See (Vatican City State)',\n    code: 'VA'\n  }, {\n    name: 'Honduras',\n    code: 'HN'\n  }, {\n    name: 'Hong Kong',\n    code: 'HK'\n  }, {\n    name: 'Hungary',\n    code: 'HU'\n  }, {\n    name: 'Iceland',\n    code: 'IS'\n  }, {\n    name: 'India',\n    code: 'IN'\n  }, {\n    name: 'Indonesia',\n    code: 'ID'\n  }, {\n    name: 'Iran, Islamic Republic Of',\n    code: 'IR'\n  }, {\n    name: 'Iraq',\n    code: 'IQ'\n  }, {\n    name: 'Ireland',\n    code: 'IE'\n  }, {\n    name: 'Isle of Man',\n    code: 'IM'\n  }, {\n    name: 'Israel',\n    code: 'IL'\n  }, {\n    name: 'Italy',\n    code: 'IT'\n  }, {\n    name: 'Jamaica',\n    code: 'JM'\n  }, {\n    name: 'Japan',\n    code: 'JP'\n  }, {\n    name: 'Jersey',\n    code: 'JE'\n  }, {\n    name: 'Jordan',\n    code: 'JO'\n  }, {\n    name: 'Kazakhstan',\n    code: 'KZ'\n  }, {\n    name: 'Kenya',\n    code: 'KE'\n  }, {\n    name: 'Kiribati',\n    code: 'KI'\n  }, {\n    name: 'Korea, Democratic People\\'S Republic of',\n    code: 'KP'\n  }, {\n    name: 'Korea, Republic of',\n    code: 'KR'\n  }, {\n    name: 'Kuwait',\n    code: 'KW'\n  }, {\n    name: 'Kyrgyzstan',\n    code: 'KG'\n  }, {\n    name: 'Lao People\\'S Democratic Republic',\n    code: 'LA'\n  }, {\n    name: 'Latvia',\n    code: 'LV'\n  }, {\n    name: 'Lebanon',\n    code: 'LB'\n  }, {\n    name: 'Lesotho',\n    code: 'LS'\n  }, {\n    name: 'Liberia',\n    code: 'LR'\n  }, {\n    name: 'Libyan Arab Jamahiriya',\n    code: 'LY'\n  }, {\n    name: 'Liechtenstein',\n    code: 'LI'\n  }, {\n    name: 'Lithuania',\n    code: 'LT'\n  }, {\n    name: 'Luxembourg',\n    code: 'LU'\n  }, {\n    name: 'Macao',\n    code: 'MO'\n  }, {\n    name: 'Macedonia, The Former Yugoslav Republic of',\n    code: 'MK'\n  }, {\n    name: 'Madagascar',\n    code: 'MG'\n  }, {\n    name: 'Malawi',\n    code: 'MW'\n  }, {\n    name: 'Malaysia',\n    code: 'MY'\n  }, {\n    name: 'Maldives',\n    code: 'MV'\n  }, {\n    name: 'Mali',\n    code: 'ML'\n  }, {\n    name: 'Malta',\n    code: 'MT'\n  }, {\n    name: 'Marshall Islands',\n    code: 'MH'\n  }, {\n    name: 'Martinique',\n    code: 'MQ'\n  }, {\n    name: 'Mauritania',\n    code: 'MR'\n  }, {\n    name: 'Mauritius',\n    code: 'MU'\n  }, {\n    name: 'Mayotte',\n    code: 'YT'\n  }, {\n    name: 'Mexico',\n    code: 'MX'\n  }, {\n    name: 'Micronesia, Federated States of',\n    code: 'FM'\n  }, {\n    name: 'Moldova, Republic of',\n    code: 'MD'\n  }, {\n    name: 'Monaco',\n    code: 'MC'\n  }, {\n    name: 'Mongolia',\n    code: 'MN'\n  }, {\n    name: 'Montserrat',\n    code: 'MS'\n  }, {\n    name: 'Morocco',\n    code: 'MA'\n  }, {\n    name: 'Mozambique',\n    code: 'MZ'\n  }, {\n    name: 'Myanmar',\n    code: 'MM'\n  }, {\n    name: 'Namibia',\n    code: 'NA'\n  }, {\n    name: 'Nauru',\n    code: 'NR'\n  }, {\n    name: 'Nepal',\n    code: 'NP'\n  }, {\n    name: 'Netherlands',\n    code: 'NL'\n  }, {\n    name: 'Netherlands Antilles',\n    code: 'AN'\n  }, {\n    name: 'New Caledonia',\n    code: 'NC'\n  }, {\n    name: 'New Zealand',\n    code: 'NZ'\n  }, {\n    name: 'Nicaragua',\n    code: 'NI'\n  }, {\n    name: 'Niger',\n    code: 'NE'\n  }, {\n    name: 'Nigeria',\n    code: 'NG'\n  }, {\n    name: 'Niue',\n    code: 'NU'\n  }, {\n    name: 'Norfolk Island',\n    code: 'NF'\n  }, {\n    name: 'Northern Mariana Islands',\n    code: 'MP'\n  }, {\n    name: 'Norway',\n    code: 'NO'\n  }, {\n    name: 'Oman',\n    code: 'OM'\n  }, {\n    name: 'Pakistan',\n    code: 'PK'\n  }, {\n    name: 'Palau',\n    code: 'PW'\n  }, {\n    name: 'Palestinian Territory, Occupied',\n    code: 'PS'\n  }, {\n    name: 'Panama',\n    code: 'PA'\n  }, {\n    name: 'Papua New Guinea',\n    code: 'PG'\n  }, {\n    name: 'Paraguay',\n    code: 'PY'\n  }, {\n    name: 'Peru',\n    code: 'PE'\n  }, {\n    name: 'Philippines',\n    code: 'PH'\n  }, {\n    name: 'Pitcairn',\n    code: 'PN'\n  }, {\n    name: 'Poland',\n    code: 'PL'\n  }, {\n    name: 'Portugal',\n    code: 'PT'\n  }, {\n    name: 'Puerto Rico',\n    code: 'PR'\n  }, {\n    name: 'Qatar',\n    code: 'QA'\n  }, {\n    name: 'Reunion',\n    code: 'RE'\n  }, {\n    name: 'Romania',\n    code: 'RO'\n  }, {\n    name: 'Russian Federation',\n    code: 'RU'\n  }, {\n    name: 'RWANDA',\n    code: 'RW'\n  }, {\n    name: 'Saint Helena',\n    code: 'SH'\n  }, {\n    name: 'Saint Kitts and Nevis',\n    code: 'KN'\n  }, {\n    name: 'Saint Lucia',\n    code: 'LC'\n  }, {\n    name: 'Saint Pierre and Miquelon',\n    code: 'PM'\n  }, {\n    name: 'Saint Vincent and the Grenadines',\n    code: 'VC'\n  }, {\n    name: 'Samoa',\n    code: 'WS'\n  }, {\n    name: 'San Marino',\n    code: 'SM'\n  }, {\n    name: 'Sao Tome and Principe',\n    code: 'ST'\n  }, {\n    name: 'Saudi Arabia',\n    code: 'SA'\n  }, {\n    name: 'Senegal',\n    code: 'SN'\n  }, {\n    name: 'Serbia and Montenegro',\n    code: 'CS'\n  }, {\n    name: 'Seychelles',\n    code: 'SC'\n  }, {\n    name: 'Sierra Leone',\n    code: 'SL'\n  }, {\n    name: 'Singapore',\n    code: 'SG'\n  }, {\n    name: 'Slovakia',\n    code: 'SK'\n  }, {\n    name: 'Slovenia',\n    code: 'SI'\n  }, {\n    name: 'Solomon Islands',\n    code: 'SB'\n  }, {\n    name: 'Somalia',\n    code: 'SO'\n  }, {\n    name: 'South Africa',\n    code: 'ZA'\n  }, {\n    name: 'South Georgia and the South Sandwich Islands',\n    code: 'GS'\n  }, {\n    name: 'Spain',\n    code: 'ES'\n  }, {\n    name: 'Sri Lanka',\n    code: 'LK'\n  }, {\n    name: 'Sudan',\n    code: 'SD'\n  }, {\n    name: 'Suriname',\n    code: 'SR'\n  }, {\n    name: 'Svalbard and Jan Mayen',\n    code: 'SJ'\n  }, {\n    name: 'Swaziland',\n    code: 'SZ'\n  }, {\n    name: 'Sweden',\n    code: 'SE'\n  }, {\n    name: 'Switzerland',\n    code: 'CH'\n  }, {\n    name: 'Syrian Arab Republic',\n    code: 'SY'\n  }, {\n    name: 'Taiwan, Province of China',\n    code: 'TW'\n  }, {\n    name: 'Tajikistan',\n    code: 'TJ'\n  }, {\n    name: 'Tanzania, United Republic of',\n    code: 'TZ'\n  }, {\n    name: 'Thailand',\n    code: 'TH'\n  }, {\n    name: 'Timor-Leste',\n    code: 'TL'\n  }, {\n    name: 'Togo',\n    code: 'TG'\n  }, {\n    name: 'Tokelau',\n    code: 'TK'\n  }, {\n    name: 'Tonga',\n    code: 'TO'\n  }, {\n    name: 'Trinidad and Tobago',\n    code: 'TT'\n  }, {\n    name: 'Tunisia',\n    code: 'TN'\n  }, {\n    name: 'Turkey',\n    code: 'TR'\n  }, {\n    name: 'Turkmenistan',\n    code: 'TM'\n  }, {\n    name: 'Turks and Caicos Islands',\n    code: 'TC'\n  }, {\n    name: 'Tuvalu',\n    code: 'TV'\n  }, {\n    name: 'Uganda',\n    code: 'UG'\n  }, {\n    name: 'Ukraine',\n    code: 'UA'\n  }, {\n    name: 'United Arab Emirates',\n    code: 'AE'\n  }, {\n    name: 'United Kingdom',\n    code: 'GB'\n  }, {\n    name: 'United States',\n    code: 'US'\n  }, {\n    name: 'United States Minor Outlying Islands',\n    code: 'UM'\n  }, {\n    name: 'Uruguay',\n    code: 'UY'\n  }, {\n    name: 'Uzbekistan',\n    code: 'UZ'\n  }, {\n    name: 'Vanuatu',\n    code: 'VU'\n  }, {\n    name: 'Venezuela',\n    code: 'VE'\n  }, {\n    name: 'Viet Nam',\n    code: 'VN'\n  }, {\n    name: 'Virgin Islands, British',\n    code: 'VG'\n  }, {\n    name: 'Virgin Islands, U.S.',\n    code: 'VI'\n  }, {\n    name: 'Wallis and Futuna',\n    code: 'WF'\n  }, {\n    name: 'Western Sahara',\n    code: 'EH'\n  }, {\n    name: 'Yemen',\n    code: 'YE'\n  }, {\n    name: 'Zambia',\n    code: 'ZM'\n  }, {\n    name: 'Zimbabwe',\n    code: 'ZW'\n  }\n]);\n\n\n})();//@ sourceURL=build/app/data/ember_widgets/countries.js")

eval("(function() {\n\nwindow.App = Ember.Application.create({\n  LOG_TRANSITIONS: false\n});\n\n\n})();//@ sourceURL=build/app/app.js")

eval("(function() {\n\n\nApp.CodePrettyPrintMixin = Ember.Mixin.create({\n  didInsertElement: function() {\n    this._super();\n    return Ember.run.next(this, function() {\n      return prettyPrint();\n    });\n  }\n});\n\nApp.LargeHeroAffixMixin = Ember.Mixin.create({\n  didInsertElement: function() {\n    this._super();\n    $('.sub-navigation-sidebar').affix({\n      offset: {\n        top: 500,\n        bottom: 450\n      }\n    });\n    return $('.sub-navigation-sidebar').data('bs.affix').options.offset.top = 500;\n  }\n});\n\nApp.SmallHeroAffixMixin = Ember.Mixin.create({\n  didInsertElement: function() {\n    this._super();\n    $('.sub-navigation-sidebar').affix({\n      offset: {\n        top: 150,\n        bottom: 450\n      }\n    });\n    return $('.sub-navigation-sidebar').data('bs.affix').options.offset.top = 150;\n  }\n});\n\n\n})();//@ sourceURL=build/app/views/mixins.js")

eval("(function() {\n\n\nApp.EmberWidgetsOverviewView = Ember.View.extend(App.LargeHeroAffixMixin);\n\nApp.EmberWidgetsDocumentationView = Ember.View.extend(App.SmallHeroAffixMixin);\n\nApp.EmberWidgetsAccordionView = Ember.View.extend(App.CodePrettyPrintMixin, App.SmallHeroAffixMixin);\n\nApp.EmberWidgetsCarouselView = Ember.View.extend(App.CodePrettyPrintMixin, App.SmallHeroAffixMixin);\n\nApp.EmberWidgetsModalView = Ember.View.extend(App.CodePrettyPrintMixin, App.SmallHeroAffixMixin);\n\nApp.EmberWidgetsPopoverView = Ember.View.extend(App.CodePrettyPrintMixin, App.SmallHeroAffixMixin);\n\nApp.EmberWidgetsSelectView = Ember.View.extend(App.CodePrettyPrintMixin, App.SmallHeroAffixMixin);\n\nApp.EmberWidgetsRadioButtonView = Ember.View.extend(App.CodePrettyPrintMixin, App.SmallHeroAffixMixin);\n\n\n})();//@ sourceURL=build/app/views/ember_widgets.js")

eval("(function() {\n\nApp.Router.map(function() {\n  this.route('license');\n  return this.resource('emberWidgets', {\n    path: '/ember-widgets'\n  }, function() {\n    this.route('overview');\n    this.route('documentation');\n    this.route('accordion');\n    this.route('carousel');\n    this.route('modal');\n    this.route('popover');\n    this.route('select');\n    this.route('textEditor');\n    this.route('colorPicker');\n    return this.route('radioButton');\n  });\n});\n\nApp.IndexRoute = Ember.Route.extend({\n  beforeModel: function() {\n    return this.transitionTo('emberWidgets.overview');\n  }\n});\n\nApp.EmberWidgetsIndexRoute = Ember.Route.extend({\n  beforeModel: function() {\n    return this.transitionTo('emberWidgets.overview');\n  }\n});\n\nApp.EmberWidgetsOverviewRoute = Ember.Route.extend({\n  activate: function() {\n    var controller;\n    controller = this.controllerFor('emberWidgets');\n    return controller.set('showLargeHero', true);\n  },\n  deactivate: function() {\n    var controller;\n    controller = this.controllerFor('emberWidgets');\n    return controller.set('showLargeHero', false);\n  }\n});\n\nApp.CustomPopoverContentView = Ember.View.extend({\n  templateName: 'custom-popover-content'\n});\n\nApp.CustomModalContentView = Ember.View.extend({\n  templateName: 'custom-modal-content'\n});\n\nApp.EmberWidgetsSelectRoute = Ember.Route.extend({\n  model: function() {\n    return window.countries;\n  }\n});\n\nApp.EmberWidgetsModalRoute = Ember.Route.extend({\n  actions: {\n    showModal: function() {\n      return Ember.Widgets.ModalComponent.popup({\n        targetObject: this,\n        confirm: \"modalConfirm\",\n        cancel: \"modalCancel\",\n        content: \"Isn't this one fine day?\"\n      });\n    },\n    showSmallModal: function() {\n      return Ember.Widgets.ModalComponent.popup({\n        targetObject: this,\n        confirm: \"modalConfirm\",\n        cancel: \"modalCancel\",\n        size: 'small',\n        content: \"This is quite small isn't it? You can also use 'large'.\"\n      });\n    },\n    showModalWithCustomContent: function() {\n      return Ember.Widgets.ModalComponent.popup({\n        targetObject: this,\n        confirm: \"modalConfirm\",\n        cancel: \"modalCancel\",\n        content: {\n          name: \"Louis\"\n        },\n        contentViewClass: App.CustomModalContentView\n      });\n    },\n    modalConfirm: function() {\n      return console.log(\"Modal Confirm!\");\n    },\n    modalCancel: function() {\n      return console.log(\"Modal Cancel!\");\n    }\n  }\n});\n\nApp.EmberWidgetsPopoverRoute = Ember.Route.extend({\n  model: function() {\n    return {\n      name: \"Louis\"\n    };\n  }\n});\n\n\n})();//@ sourceURL=build/app/app.js")